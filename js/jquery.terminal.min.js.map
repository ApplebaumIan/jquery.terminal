{"version":3,"sources":["jquery.terminal.js"],"names":["ctx","sprintf","cache","hasOwnProperty","arguments","parse","format","call","parse_tree","argv","cursor","tree_length","length","node_type","arg","output","i","k","match","pad","pad_character","pad_length","get_type","push","test","toString","String","fromCharCode","parseInt","toExponential","parseFloat","toFixed","slice","toUpperCase","charAt","str_repeat","join","fmt","_fmt","arg_names","exec","field_list","replacement_field","field_match","vsprintf","_argv","splice","apply","variable","Object","prototype","toLowerCase","input","multiplier","global","window","factory","undefined","root","define","amd","module","exports","jQuery","wcwidth","require","$","debug","str","console","log","DelayQueue","callbacks","Callbacks","resolved","this","resolve","fire","add","fn","omap","o","result","each","v","text_length","map","text","get","reduce","a","b","Clone","clone_object","object","tmp","isArray","clone_array","key","array","is_function","Array","Error","item","bind","clone","localStorage","hasLS","testKey","storage","setItem","removeItem","error","hasCookies","document","cookie","split","e","isLS","wls","n","c","wc","dt","Date","setTime","getTime","toGMTString","rls","rc","nn","ca","indexOf","dls","dc","extend","Storage","set","remove","debounce","FUNC_ERROR_TEXT","isObject","value","type","now","func","wait","options","nativeMax","Math","max","nativeMin","min","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","time","args","thisArg","leadingEdge","setTimeout","timerExpired","remainingWait","timeSinceLastCall","timeSinceLastInvoke","timeWaiting","shouldInvoke","trailingEdge","cancel","clearTimeout","flush","debounced","isInvoking","everyTime","interval","label","times","belay","timer","oneTime","stopTime","guid","regex","powers","ms","cs","ds","s","das","hs","ks","timeParse","trim","num","mult","element","counter","isFunction","isNaN","constructor","Number","$timers","$timerID","handler","inProgress","setInterval","timers","ret","lab","clearInterval","_fn","navigator","userAgent","one","els","undef","nativeSplit","compliantExecNpcg","self","separator","limit","flags","ignoreCase","multiline","extended","sticky","lastLastIndex","separator2","lastIndex","lastLength","RegExp","source","index","replace","caret","pos","target","isContentEditable","contentEditable","getSelection","focus","range1","getRangeAt","range2","cloneRange","selectNodeContents","setEnd","endContainer","endOffset","selectionStart","selection","createRange","body","createTextRange","moveToElementText","setEndPoint","range","duplicate","bookmark","getBookmark","moveToBookmark","moveStart","collapse","firstChild","setSelectionRange","select","is","resizer","callback","settings","prefix","trigger","unbind","$this","iframe","resize_handler","data","has","removeData","ResizeObserver","observer","unobserve","find","contentWindow","off","first","observe","on","addClass","appendTo","jquery_resolve","defer","Deferred","promise","unpromise","catch","done","then","is_fully_in_viewport","is_visible","node","container","box","getBoundingClientRect","viewport","top","bottom","height","IntersectionObserver","item_observer","entries","isIntersecting","ratio","combine_chr_re","astral_symbols_re","emoji_re","entity_re","mobile_re","tablet_re","format_split_re","format_parts_re","format_re","format_exist_re","format_full_re","format_begin_re","format_start_re","format_end_re","self_closing_re","color_hex_re","url_re","url_nf_re","email_re","url_full_re","email_full_re","command_re","extended_command_re","format_exec_re","float_re","re_re","string_re","unclosed_strings_re","broken_image","use_broken_image","animation_supported","animation","domPrefixes","elm","createElement","style","animationName","name","agent","is_IE","is_IEMobile","is_ch_unit_supported","div","width","is_css_variables_supported","CSS","supports","is_android","is_key_native","KeyboardEvent","proto","getOwnPropertyDescriptor","is_mobile","check","substr","vendor","opera","ch_unit_bug","base","ch","space","a11y_hide","attr","role","aria-hidden","excepctions","alert_exception","terminal","Exception","message","exception_message","scrollbar_event","left","offset","outerWidth","clientX","fileName","Cycle","rotate","skip","init","defined","filter","append","front","restart","Boolean","forEach","Stack","is_array","size","pop","concat","WorkerCache","validation","noop","action","onCache","_onCache","_action","_validation","_cache","Map","validate","valid","clear","cahce","History","memory","enabled","storage_key","JSON","stringify","new_data","reset","last","end","position","current","next","old","previous","purge","enable","disable","toggle","cmd_index","cmd","defaults","mask","caseSensitiveSearch","historySize","prompt","history","onPositionChange","onCommandChange","inputStyle","mobileDelete","onPaste","clickTimeout","holdTimeout","holdRepeatTimeout","mobileIngoreAutoSpace","repeatTimeoutKeys","tabindex","tabs","mobile_ignore_key","maybe_data","id","wrapper","clip","autocapitalize","spellcheck","val","num_chars","char_width","last_rendered_prompt","prompt_last_line","prompt_len","prompt_node","reverse_search","rev_search_str","reverse_search_position","backup_prompt","command","last_command","kill_text","formatted_position","restart_animation","paste_count","line_marker","line_marker_re","get_char_pos","closest","parent","prevAll","prevUntil","key_mapping","SPACEBAR","UP","DOWN","LEFT","RIGHT","DEL","MULTIPLY","DIVIDE","SUBTRACT","ADD","ie_key_fix","get_key","combo","ctrlKey","metaKey","shiftKey","altKey","keycodes","3","6","8","9","12","13","16","17","18","19","20","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","48","49","50","51","52","53","54","55","56","57","91","93","144","145","181","182","183","186","187","188","189","190","191","192","219","220","221","222","224","225","246","247","248","249","250","251","letter","reversed_keycodes","keys","which","keymap","default_keymap","ALT+D","delete_forward","clipboard","HOLD+ALT+D","hold","HOLD+DELETE","HOLD+SHIFT+DELETE","ENTER","historyFilter","prev_command","no_keydown","commands","draw_prompt","SHIFT+ENTER","insert","BACKSPACE","backspace_key","SHIFT+BACKSPACE","TAB","CTRL+D","DELETE","HOLD+ARROWUP","up_arrow","ARROWUP","CTRL+P","prev_history","ARROWDOWN","down_arrow","HOLD+ARROWDOWN","CTRL+N","next_history","ARROWLEFT","HOLD+ARROWLEFT","CTRL+B","CTRL+ARROWLEFT","len","CTRL+R","reverse_history_search","draw_reverse_prompt","redraw","CTRL+G","ARROWRIGHT","right","HOLD+ARROWRIGHT","CTRL+F","CTRL+ARROWRIGHT","re","F12","return_true","END","CTRL+END","CTRL+E","HOME","home","CTRL+HOME","CTRL+A","SHIFT+INSERT","paste_event","CTRL+SHIFT+T","CTRL+W","delete_backward","HOLD+BACKSPACE","HOLD+SHIFT+BACKSPACE","CTRL+H","CTRL+X","CTRL+C","CTRL+T","CTRL+Y","CTRL+V","META+V","CTRL+K","text_to_clipboard","CTRL+U","CTRL+TAB","META+`","META+R","META+L","delete_character_forward","delete_word_forward","substring","m","delete_character_backward","delete_word_backward","isenabled","paste","fix_textarea","first_up_history","have_newlines","string","match_column","col","before","column","after","new_pos","bare_text","line","lastIndexOf","lines","sum","mobile_focus","fix_cursor","getComputedStyle","getPropertyValue","_class","className","position_only","removeClass","new_cursor","insertBefore","animating","blink","toggleClass","clear_reverse_state","history_data","save_string","j","escape_regex","get_char_width","$prompt","html","get_num_chars","floor","get_splitted_command_line","split_equal","skip_empty","strip","nextUntil","escape_brackets","first_len","strlen","splitted","formatting","skip_formatted_position","escape_formatting","format_options","unixFormattingEscapeBrackets","formatted","apply_formatters","normalize","stack","encoded","encode","wrap","allowedAttributes","partition","raw","start","prev","cursor_line","draw_cursor_line","end_line","cursor_end_line","before_str","c_before","cursor_len","setProperty","lines_after","last_ins","insertAfter","lines_before","css","original_string","from_last","last_len","line_index","current_len","msg","strings","redrawError","in_line","find_position","make_guess","opts","cmp","search_pos","guess","next_guess","codepoint_len","binary_search","chars","split_characters","prev_prompt_data","crlf","have_formatting","encoded_last_line","last_line","fire_change_command","clean","option","delete","stay","removed","silent","new_keymap","original","bare_command","destroy","doc","keypress_event","keydown_event","input_event","include_prompt","user_prompt","relative","refresh","display_position","command_len","new_formatted_pos","visible","show","resize","new_num_chars","invoke_key","shortcut","ctrl","shift","alt","meta","Event","documentElement","keyCode","new_mask","skip_keypress","dead_key","single_key","no_keypress","no_key","backspace","process","hold_pause","skip_insert","prev_key","is_backspace","is_single","is_delay_key","specials","clear_reverse_search_key","skip_keydown","fake","exception","keydown","clear_hold","is_terminal_selected","keypress","normalized","inArray","event","chr","skip_input","get_next_character","keycode","charCodeAt","abs","was_down","count","$target","is_prompt","down","get_selected_html","button","originalEvent","count_selfclosing_formatting","format_split","is_formatting","safe","char_len","match_entity","match_emoji","match_combo","normalize_position","acc","char_width_prop","extra_css","bare","wide_characters","specs","arr","spec","make_string","compare_fn","more_args","mid","startContainer","parentNode","term","sel","rangeCount","appendChild","cloneContents","innerHTML","with_selection","ranges","removeAllRanges","addRange","process_selected_line","$self","hasClass","process_div","process_selected_html","stdout","$html","$cmd_lines","queryCommandSupported","$textarea","had_focus","execCommand","get_textarea_selection","textarea","selectionEnd","clear_textarea_selection","common_string","matchCase","string_case","candidate","candidateLower","currentLower","trigger_terminal_change","terminals","onTerminalChange","setBaseAndExtent","setStart","childNodes","process_command","quotes","rest","args_quotes","version","date","color_names","valid_color","color","unclosed_strings","special","tracking_replace","rex","replacement","new_string","rep_string","new_position","last_index","c0","rep_len","iterate_formatting","is_space","is_open_formatting","is_escape_bracket","is_text","not_formatting","opening","next_iteration","char","is_next_space","prev_space","is_last","in_text","space_count","re_ent","braket","start_index","end_index","start_formatting","end_formatting","prev_index","_","semicolons","amp","keep_words","prev_format","first_index","line_length","last_bracket","can_break","stripped","text_len","new_index","closed_formatting","matched","sp","nested_formatting","get_inherit_style","ignore","__inherit__","test_lengths","formatter","__no_warn__","warn","formatters","apply_function_formatter","__meta__","found_position","partials","this_len","length_before","loop","position_partial","partial","linksNoReferrer","linksNoFollow","escape","anyLinks","filter_attr_names","names","allowed","filters","clean_data","add_attrs","attrs","rel_attr","rel","unshift","is_path","url","with_url_validation","valid_href","valid_src","background","data_text","style_str","text_decoration","extra","unescape_brackets","columns","cols","no_formatting","lengths","column_limit","whole","bracket","active","last_id","parse_argument","strict","parse_string","quote","parse_arguments","split_arguments","parse_command","split_command","parse_options","boolean","token","single","extended_command","invokeMethods","change_hash","obj","eval","iterator","Symbol","replacer","search","new_formatter","Terminal_Exception","hidden","warnings","ids","jrpc","method","params","success","deferred","isPlainObject","validJSONRPC","response","isNumeric","request","jsonrpc","ajax","beforeSend","jxhr","status","jqXHR","content_type","getResponseHeader","json","reject","contentType","dataType","async","terminal_ready","get_char_size","rect","visiblity","temp","char_size","get_num_rows","all","same","same_case","version_set","copyright","version_string","reg","name_ver","signatures","exit","maskChar","checkArity","exceptionHandler","pauseEvents","softPause","cancelableAjax","processArguments","processRPCResponse","completionEscape","convertLinks","scrollObject","historyState","importHistory","echoCommand","scrollOnEcho","login","outputLimit","onAjaxError","pasteImage","scrollBottomOffset","wordAutocomplete","caseSensitiveAutocomplete","describe","onRPCError","doubleTab","doubleTabEchoCommand","completion","onInit","onClear","onBlur","onFocus","onExit","onPush","onPop","renderHandler","onAfterRedraw","onEchoCommand","onFlush","onBeforeCommand","onAfterCommand","onBeforeEcho","onAfterEcho","onBeforeLogin","onAfterLogout","onBeforeLogout","comletionParameters","wrongPasswordTryAgain","wrongPassword","ajaxAbortError","wrongArity","commandNotFound","oneRPCWithIgnore","oneInterpreterFunction","loginFunctionMissing","noTokenError","serverResponse","wrongGreetings","notWhileLogin","loginIsNotAFunction","canExitError","invalidCompletion","invalidSelector","invalidTerminalId","password","recursiveCall","notAString","invalidStrings","defunctTerminal","requests","save_state","hash_commands","fire_hash_change","first_instance","init_interpreter","StorageHelper","get_processed_command","preprocess_value","is_node","unmount","prepare_render","finalize","replaceWith","render","echo","get_node","Element","display_object","print_line","url_spec","pause","file","code","resume","display_json_rpc_error","at","make_basic_json_rpc","auth","interpreter","display_exception","ajax_error","make_object_interpreter","arity","fallback","user_command","onCommandNotFound","xhr","responseText","make_json_rpc_object","jrpc_success","jrpc_request","jrpc_response","procs","field","interpreter_object","proc","args_len","help","found","make_interpreter","user_intrp","rpc_count","fn_interpreter","recur","interpreters","new_obj","make_json_rpc_login","user","passwd","push_line","output_buffer","NEW_LINE","buffer_line","words","keepWords","newline","links","escaped","process_line","line_settings","stringify_value","parts","prev_exec_cmd","update","scroll","command_line","detached_output","empty","detach","lines_to_show","rows","pivot","fire_event","limit_lines","$lines","for_remove","parents","show_greetings","greetings","signature","make_label_error","echo_command","get_command","have_scrollbar","innerWidth","clientWidth","fill","restore_state","command_idx","import_view","export_view","maybe_update_hash","location","hash","first_command","resume_callbacks","init_state","execHash","after_exec","saved_change_hash","invoke","force_awake","when","paused","ghost","level","logout","in_login","get_token","set_token","global_logout","clear_loging_storage","global_login_fn","initialize","prefix_name","maybe_append_name","interpreter_name","prepare_top_interpreter","login_name","context_callback_proxy","fun","init_queue","onStart","skip_local","scroll_to_view","scroll_to","it","make_cursor_visible","hashchange","decodeURIComponent","was_paused","onPause","user_key_down","get_position","set_command","CTRL+L","orignal","caseSensitive","before_cursor","complete","word","scroll_to_bottom","PAGEDOWN","PAGEUP","key_down","tab_count","r","readyState","abort","key_press","ready","queue","selector","terminal_id","scrollTop","user_export","get_prompt","view","when_ready","set_prompt","ignore_hash","state","d","cmd_ready","delayed_commands","autologin","infinite","logins","popUserPass","login_callback","set_mask","pass","cmd_strings","double_quotes","single_quote","prev_string","sensitive","slash","matched_strings","pre","post","to_insert","set_position","reverse","common","set_interpreter","overwrite_interpreter","numChars","numRows","num_rows","history_state","run","setImmediate","clear_history_state","x","animate","freeze","frozen","is_bottom","get_output","new_num_rows","e1","e2","remove_line","arg_defined","locals","img","Image","onerror","src","lineNumber","trace","amount","round","prop","local","local_name","intrp","read","infiniteLogin","push_settings","object_or_name","font_resizer","blur_terminal","focus_terminal","visibility_observer","mutation_observer","disconnect","defunct","elem","scrollHeight","scroll_height","scroll_top","outerHeight","command_queue","old_width","old_height","old_enabled","ignoreSystemDescribe","hide","base_interpreter","parseObject","proxy","is_type","echo_image","image","data_uri","blob","URL","webkitURL","createObjectURL","ignoreEvents","Blob","clipboardData","items","getAsFile","getAsString","getData","onResize","mousewheel","elementFromPoint","clientY","$win","addEventListener","click","ignore_elements","mousedown","mouseup","timeout","dblclick","is_context_event","buttons","pageX","pageY","props","href","preventDefault","calculate_char_size","create_resizers","observe_visibility","was_enabled","visibility_checker","in_dom","MutationObsrv","MutationObserver","WebKitMutationObserver","childList","exec_spec","delta","stopPropagation","onmousewheel","wheelDelta","deltaY","detail"],"mappings":"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","sourcesContent":["/**@license\n *       __ _____                     ________                              __\n *      / // _  /__ __ _____ ___ __ _/__  ___/__ ___ ______ __ __  __ ___  / /\n *  __ / // // // // // _  // _// // / / // _  // _//     // //  \\/ // _ \\/ /\n * /  / // // // // // ___// / / // / / // ___// / / / / // // /\\  // // / /__\n * \\___//____ \\\\___//____//_/ _\\_  / /_//____//_/ /_/ /_//_//_/ /_/ \\__\\_\\___/\n *           \\/              /____/                              version 2.11.1\n *\n * This file is part of jQuery Terminal. https://terminal.jcubic.pl\n *\n * Copyright (c) 2010-2019 Jakub T. Jankiewicz <https://jcubic.pl/m>e\n * Released under the MIT license\n *\n * Contains:\n *\n * Storage plugin Distributed under the MIT License\n * modified to work from Data URIs that block storage and cookies in Chrome\n * Copyright (c) 2010 Dave Schindler\n *\n * jQuery Timers licenced with the WTFPL\n * <http://jquery.offput.ca/timers/>\n *\n * Cross-Browser Split 1.1.1\n * Copyright 2007-2012 Steven Levithan <stevenlevithan.com>\n * Available under the MIT License\n *\n * jQuery Caret\n * Copyright (c) 2009, Gideon Sireling\n * 3 clause BSD License\n *\n * sprintf.js\n * Copyright (c) 2007-2013 Alexandru Marasteanu <hello at alexei dot ro>\n * licensed under 3 clause BSD license\n *\n * debounce function from Lodash\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * The MIT License\n *\n * emoji regex v7.0.1 by Mathias Bynens\n * MIT license\n *\n * broken image by Sophia Bai from the Noun Project (CC-BY)\n *\n * Date: Sun, 22 Dec 2019 17:24:32 +0000\n */\n/* global location, setTimeout, window, global, sprintf, setImmediate,\n          IntersectionObserver,  ResizeObserver, module, require, define,\n          setInterval, clearInterval, clearTimeout, Blob, Map, Image */\n/* eslint-disable */\n/* istanbul ignore next */\n(function(ctx) {\n    var sprintf = function() {\n        if (!sprintf.cache.hasOwnProperty(arguments[0])) {\n            sprintf.cache[arguments[0]] = sprintf.parse(arguments[0]);\n        }\n        return sprintf.format.call(null, sprintf.cache[arguments[0]], arguments);\n    };\n    sprintf.format = function(parse_tree, argv) {\n        var cursor = 1, tree_length = parse_tree.length, node_type = '', arg, output = [], i, k, match, pad, pad_character, pad_length;\n        for (i = 0; i < tree_length; i++) {\n            node_type = get_type(parse_tree[i]);\n            if (node_type === 'string') {\n                output.push(parse_tree[i]);\n            }\n            else if (node_type === 'array') {\n                match = parse_tree[i]; // convenience purposes only\n                if (match[2]) { // keyword argument\n                    arg = argv[cursor];\n                    for (k = 0; k < match[2].length; k++) {\n                        if (!arg.hasOwnProperty(match[2][k])) {\n                            throw(sprintf('[sprintf] property \"%s\" does not exist', match[2][k]));\n                        }\n                        arg = arg[match[2][k]];\n                    }\n                }\n                else if (match[1]) { // positional argument (explicit)\n                    arg = argv[match[1]];\n                }\n                else { // positional argument (implicit)\n                    arg = argv[cursor++];\n                }\n\n                if (/[^s]/.test(match[8]) && (get_type(arg) !== 'number')) {\n                    throw(sprintf('[sprintf] expecting number but found %s', get_type(arg)));\n                }\n                switch (match[8]) {\n                    case 'b': arg = arg.toString(2); break;\n                    case 'c': arg = String.fromCharCode(arg); break;\n                    case 'd': arg = parseInt(arg, 10); break;\n                    case 'e': arg = match[7] ? arg.toExponential(match[7]) : arg.toExponential(); break;\n                    case 'f': arg = match[7] ? parseFloat(arg).toFixed(match[7]) : parseFloat(arg); break;\n                    case 'o': arg = arg.toString(8); break;\n                    case 's': arg = ((arg = String(arg)) && match[7] ? arg.slice(0, match[7]) : arg); break;\n                    case 'u': arg = arg >>> 0; break;\n                    case 'x': arg = arg.toString(16); break;\n                    case 'X': arg = arg.toString(16).toUpperCase(); break;\n                }\n                arg = (/[def]/.test(match[8]) && match[3] && arg >= 0 ? ' +' + arg : arg);\n                pad_character = match[4] ? match[4] === '0' ? '0' : match[4].charAt(1) : ' ';\n                pad_length = match[6] - String(arg).length;\n                pad = match[6] ? str_repeat(pad_character, pad_length) : '';\n                output.push(match[5] ? arg + pad : pad + arg);\n            }\n        }\n        return output.join('');\n    };\n\n    sprintf.cache = {};\n\n    sprintf.parse = function(fmt) {\n        var _fmt = fmt, match = [], parse_tree = [], arg_names = 0;\n        while (_fmt) {\n            if ((match = /^[^\\x25]+/.exec(_fmt)) !== null) {\n                parse_tree.push(match[0]);\n            }\n            else if ((match = /^\\x25{2}/.exec(_fmt)) !== null) {\n                parse_tree.push('%');\n            }\n            else if ((match = /^\\x25(?:([1-9]\\d*)\\$|\\(([^\\)]+)\\))?(\\+)?(0|'[^$])?(-)?(\\d+)?(?:\\.(\\d+))?([b-fosuxX])/.exec(_fmt)) !== null) {\n                if (match[2]) {\n                    arg_names |= 1;\n                    var field_list = [], replacement_field = match[2], field_match = [];\n                    if ((field_match = /^([a-z_][a-z_\\d]*)/i.exec(replacement_field)) !== null) {\n                        field_list.push(field_match[1]);\n                        while ((replacement_field = replacement_field.slice(field_match[0].length)) !== '') {\n                            if ((field_match = /^\\.([a-z_][a-z_\\d]*)/i.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1]);\n                            }\n                            else if ((field_match = /^\\[(\\d+)\\]/.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1]);\n                            }\n                            else {\n                                throw('[sprintf] huh?');\n                            }\n                        }\n                    }\n                    else {\n                        throw('[sprintf] huh?');\n                    }\n                    match[2] = field_list;\n                }\n                else {\n                    arg_names |= 2;\n                }\n                if (arg_names === 3) {\n                    throw('[sprintf] mixing positional and named placeholders is not (yet) supported');\n                }\n                parse_tree.push(match);\n            }\n            else {\n                throw('[sprintf] huh?');\n            }\n            _fmt = _fmt.slice(match[0].length);\n        }\n        return parse_tree;\n    };\n\n    var vsprintf = function(fmt, argv, _argv) {\n        _argv = argv.slice(0);\n        _argv.splice(0, 0, fmt);\n        return sprintf.apply(null, _argv);\n    };\n\n    /**\n     * helpers\n     */\n    function get_type(variable) {\n        return Object.prototype.toString.call(variable).slice(8, -1).toLowerCase();\n    }\n\n    function str_repeat(input, multiplier) {\n        for (var output = []; multiplier > 0; output[--multiplier] = input) {/* do nothing */}\n        return output.join('');\n    }\n\n    /**\n     * export to either browser or node.js\n     */\n    ctx.sprintf = sprintf;\n    ctx.vsprintf = vsprintf;\n})(typeof global !== \"undefined\" ? global : window);\n// -----------------------------------------------------------------------\n/* eslint-enable */\n// UMD taken from https://github.com/umdjs/umd\n(function(factory, undefined) {\n    var root = typeof window !== 'undefined' ? window : global;\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        // istanbul ignore next\n        define(['jquery', 'wcwidth'], factory);\n    } else if (typeof module === 'object' && module.exports) {\n        // Node/CommonJS\n        module.exports = function(root, jQuery, wcwidth) {\n            if (jQuery === undefined) {\n                // require('jQuery') returns a factory that requires window to\n                // build a jQuery instance, we normalize how we use modules\n                // that require this pattern but the window provided is a noop\n                // if it's defined (how jquery works)\n                if (window !== undefined) {\n                    jQuery = require('jquery');\n                } else {\n                    jQuery = require('jquery')(root);\n                }\n            }\n            if (wcwidth === undefined) {\n                wcwidth = require('wcwidth');\n            }\n            factory(jQuery, wcwidth);\n            return jQuery;\n        };\n    } else {\n        // Browser\n        // istanbul ignore next\n        factory(root.jQuery, root.wcwidth);\n    }\n})(function($, wcwidth, undefined) {\n    'use strict';\n    // -----------------------------------------------------------------------\n    // :: debug functions\n    // -----------------------------------------------------------------------\n    /* eslint-disable */\n    /* istanbul ignore next */\n    function debug(str) {\n        if (false) {\n            console.log(str);\n            //$.terminal.active().echo(str);\n        }\n    }\n    /* eslint-enable */\n    // -----------------------------------------------------------------------\n    // :: Replacemenet for jQuery 2 deferred objects\n    // -----------------------------------------------------------------------\n    function DelayQueue() {\n        var callbacks = $.Callbacks();\n        var resolved = false;\n        this.resolve = function() {\n            callbacks.fire();\n            resolved = true;\n        };\n        this.add = function(fn) {\n            if (resolved) {\n                fn();\n            } else {\n                callbacks.add(fn);\n            }\n        };\n    }\n    // -----------------------------------------------------------------------\n    // :: map object to object\n    // -----------------------------------------------------------------------\n    $.omap = function(o, fn) {\n        var result = {};\n        $.each(o, function(k, v) {\n            result[k] = fn.call(o, k, v);\n        });\n        return result;\n    };\n    $.fn.text_length = function() {\n        return this.map(function() {\n            return $(this).text().length;\n        }).get().reduce(function(a, b) {\n            return a + b;\n        }, 0);\n    };\n    // -----------------------------------------------------------------------\n    // :: Deep clone of objects and arrays\n    // -----------------------------------------------------------------------\n    var Clone = {\n        clone_object: function(object) {\n            var tmp = {};\n            if (typeof object === 'object') {\n                if ($.isArray(object)) {\n                    return this.clone_array(object);\n                } else if (object === null) {\n                    return object;\n                } else {\n                    for (var key in object) {\n                        if ($.isArray(object[key])) {\n                            tmp[key] = this.clone_array(object[key]);\n                        } else if (typeof object[key] === 'object') {\n                            tmp[key] = this.clone_object(object[key]);\n                        } else {\n                            tmp[key] = object[key];\n                        }\n                    }\n                }\n            }\n            return tmp;\n        },\n        clone_array: function(array) {\n            if (!is_function(Array.prototype.map)) {\n                throw new Error(\"Your browser don't support ES5 array map \" +\n                                'use es5-shim');\n            }\n            return array.slice(0).map(function(item) {\n                if (typeof item === 'object') {\n                    return this.clone_object(item);\n                } else {\n                    return item;\n                }\n            }.bind(this));\n        }\n    };\n    var clone = function(object) {\n        return Clone.clone_object(object);\n    };\n\n    /* eslint-disable */\n    // -----------------------------------------------------------------------\n    // :: Storage plugin\n    // -----------------------------------------------------------------------\n    var localStorage;\n    /* istanbul ignore next */\n    (function() {\n        var hasLS = function() {\n            try {\n                var testKey = 'test', storage = window.localStorage;\n                storage.setItem(testKey, '1');\n                storage.removeItem(testKey);\n                return true;\n            } catch (error) {\n                return false;\n            }\n        };\n        var hasCookies = function() {\n            try {\n                document.cookie.split(';');\n                return true;\n            } catch (e) {\n                return false;\n            }\n        };\n        // Private data\n        var isLS = hasLS();\n        // Private functions\n        function wls(n, v) {\n            var c;\n            if (typeof n === 'string' && typeof v === 'string') {\n                localStorage[n] = v;\n                return true;\n            } else if (typeof n === 'object' && typeof v === 'undefined') {\n                for (c in n) {\n                    if (n.hasOwnProperty(c)) {\n                        localStorage[c] = n[c];\n                    }\n                }\n                return true;\n            }\n            return false;\n        }\n        function wc(n, v) {\n            var dt, e, c;\n            dt = new Date();\n            dt.setTime(dt.getTime() + 31536000000);\n            e = '; expires=' + dt.toGMTString();\n            if (typeof n === 'string' && typeof v === 'string') {\n                document.cookie = n + '=' + v + e + '; path=/';\n                return true;\n            } else if (typeof n === 'object' && typeof v === 'undefined') {\n                for (c in n) {\n                    if (n.hasOwnProperty(c)) {\n                        document.cookie = c + '=' + n[c] + e + '; path=/';\n                    }\n                }\n                return true;\n            }\n            return false;\n        }\n        function rls(n) {\n            return localStorage[n];\n        }\n        function rc(n) {\n            var nn, ca, i, c;\n            nn = n + '=';\n            ca = document.cookie.split(';');\n            for (i = 0; i < ca.length; i++) {\n                c = ca[i];\n                while (c.charAt(0) === ' ') {\n                    c = c.slice(1, c.length);\n                }\n                if (c.indexOf(nn) === 0) {\n                    return c.slice(nn.length, c.length);\n                }\n            }\n            return null;\n        }\n        function dls(n) {\n            return delete localStorage[n];\n        }\n        function dc(n) {\n            return wc(n, '', -1);\n        }\n        /**\n         * Public API\n         * $.Storage.set(\"name\", \"value\")\n         * $.Storage.set({\"name1\":\"value1\", \"name2\":\"value2\", etc})\n         * $.Storage.get(\"name\")\n         * $.Storage.remove(\"name\")\n         */\n        if (!hasCookies() && !isLS) {\n            localStorage = {};\n            $.extend({\n                Storage: {\n                    set: wls,\n                    get: rls,\n                    remove: dls\n                }\n            });\n        } else {\n            if (isLS) {\n                localStorage = window.localStorage;\n            }\n            $.extend({\n                Storage: {\n                    set: isLS ? wls : wc,\n                    get: isLS ? rls : rc,\n                    remove: isLS ? dls : dc\n                }\n            });\n        }\n    })();\n    // -----------------------------------------------------------------------\n    // :: Debounce from Lodash\n    // -----------------------------------------------------------------------\n    /* istanbul ignore next */\n    var debounce = (function() {\n        var FUNC_ERROR_TEXT = 'Expected a function';\n        function isObject(value) {\n            var type = typeof value;\n            return value != null && (type == 'object' || type == 'function');\n        }\n        function now() {\n            return Date.now();\n        }\n        return function debounce(func, wait, options) {\n            var nativeMax = Math.max,\n                nativeMin = Math.min;\n\n            var lastArgs,\n                lastThis,\n                maxWait,\n                result,\n                timerId,\n                lastCallTime,\n                lastInvokeTime = 0,\n                leading = false,\n                maxing = false,\n                trailing = true;\n\n            if (typeof func != 'function') {\n                throw new TypeError(FUNC_ERROR_TEXT);\n            }\n            wait = wait || 0;\n            if (isObject(options)) {\n                leading = !!options.leading;\n                maxing = 'maxWait' in options;\n                maxWait = maxing ? nativeMax(options.maxWait || 0, wait) : maxWait;\n                trailing = 'trailing' in options ? !!options.trailing : trailing;\n            }\n\n            function invokeFunc(time) {\n                var args = lastArgs,\n                    thisArg = lastThis;\n\n                lastArgs = lastThis = undefined;\n                lastInvokeTime = time;\n                result = func.apply(thisArg, args);\n                return result;\n            }\n\n            function leadingEdge(time) {\n                // Reset any `maxWait` timer.\n                lastInvokeTime = time;\n                // Start the timer for the trailing edge.\n                timerId = setTimeout(timerExpired, wait);\n                // Invoke the leading edge.\n                return leading ? invokeFunc(time) : result;\n            }\n\n            function remainingWait(time) {\n                var timeSinceLastCall = time - lastCallTime,\n                    timeSinceLastInvoke = time - lastInvokeTime,\n                    timeWaiting = wait - timeSinceLastCall;\n\n                return maxing\n                    ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n                    : timeWaiting;\n            }\n\n            function shouldInvoke(time) {\n                var timeSinceLastCall = time - lastCallTime,\n                    timeSinceLastInvoke = time - lastInvokeTime;\n\n                // Either this is the first call, activity has stopped and we're at the\n                // trailing edge, the system time has gone backwards and we're treating\n                // it as the trailing edge, or we've hit the `maxWait` limit.\n                return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n                        (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n            }\n\n            function timerExpired() {\n                var time = now();\n                if (shouldInvoke(time)) {\n                    return trailingEdge(time);\n                }\n                // Restart the timer.\n                timerId = setTimeout(timerExpired, remainingWait(time));\n            }\n\n            function trailingEdge(time) {\n                timerId = undefined;\n\n                // Only invoke if we have `lastArgs` which means `func` has been\n                // debounced at least once.\n                if (trailing && lastArgs) {\n                    return invokeFunc(time);\n                }\n                lastArgs = lastThis = undefined;\n                return result;\n            }\n\n            function cancel() {\n                if (timerId !== undefined) {\n                    clearTimeout(timerId);\n                }\n                lastInvokeTime = 0;\n                lastArgs = lastCallTime = lastThis = timerId = undefined;\n            }\n\n            function flush() {\n                return timerId === undefined ? result : trailingEdge(now());\n            }\n\n            function debounced() {\n                var time = now(),\n                    isInvoking = shouldInvoke(time);\n\n                lastArgs = arguments;\n                lastThis = this;\n                lastCallTime = time;\n\n                if (isInvoking) {\n                    if (timerId === undefined) {\n                        return leadingEdge(lastCallTime);\n                    }\n                    if (maxing) {\n                        // Handle invocations in a tight loop.\n                        timerId = setTimeout(timerExpired, wait);\n                        return invokeFunc(lastCallTime);\n                    }\n                }\n                if (timerId === undefined) {\n                    timerId = setTimeout(timerExpired, wait);\n                }\n                return result;\n            }\n            debounced.cancel = cancel;\n            debounced.flush = flush;\n            return debounced;\n        };\n    })();\n    // -----------------------------------------------------------------------\n    // :: jQuery Timers\n    // -----------------------------------------------------------------------\n    var jQuery = $;\n    /* istanbul ignore next */\n    (function($) {\n        jQuery.fn.extend({\n            everyTime: function(interval, label, fn, times, belay) {\n                return this.each(function() {\n                    jQuery.timer.add(this, interval, label, fn, times, belay);\n                });\n            },\n            oneTime: function(interval, label, fn) {\n                return this.each(function() {\n                    jQuery.timer.add(this, interval, label, fn, 1);\n                });\n            },\n            stopTime: function(label, fn) {\n                return this.each(function() {\n                    jQuery.timer.remove(this, label, fn);\n                });\n            }\n        });\n\n        jQuery.extend({\n            timer: {\n                guid: 1,\n                global: {},\n                regex: /^([0-9]+)\\s*(.*s)?$/,\n                powers: {\n                    // Yeah this is major overkill...\n                    'ms': 1,\n                    'cs': 10,\n                    'ds': 100,\n                    's': 1000,\n                    'das': 10000,\n                    'hs': 100000,\n                    'ks': 1000000\n                },\n                timeParse: function(value) {\n                    if (value === undefined || value === null) {\n                        return null;\n                    }\n                    var result = this.regex.exec(jQuery.trim(value.toString()));\n                    if (result[2]) {\n                        var num = parseInt(result[1], 10);\n                        var mult = this.powers[result[2]] || 1;\n                        return num * mult;\n                    } else {\n                        return value;\n                    }\n                },\n                add: function(element, interval, label, fn, times, belay) {\n                    var counter = 0;\n\n                    if (jQuery.isFunction(label)) {\n                        if (!times) {\n                            times = fn;\n                        }\n                        fn = label;\n                        label = interval;\n                    }\n\n                    interval = jQuery.timer.timeParse(interval);\n\n                    if (typeof interval !== 'number' ||\n                        isNaN(interval) ||\n                        interval <= 0) {\n                        return;\n                    }\n                    if (times && times.constructor !== Number) {\n                        belay = !!times;\n                        times = 0;\n                    }\n\n                    times = times || 0;\n                    belay = belay || false;\n\n                    if (!element.$timers) {\n                        element.$timers = {};\n                    }\n                    if (!element.$timers[label]) {\n                        element.$timers[label] = {};\n                    }\n                    fn.$timerID = fn.$timerID || this.guid++;\n\n                    var handler = function() {\n                        if (belay && handler.inProgress) {\n                            return;\n                        }\n                        handler.inProgress = true;\n                        if ((++counter > times && times !== 0) ||\n                            fn.call(element, counter) === false) {\n                            jQuery.timer.remove(element, label, fn);\n                        }\n                        handler.inProgress = false;\n                    };\n\n                    handler.$timerID = fn.$timerID;\n\n                    if (!element.$timers[label][fn.$timerID]) {\n                        element.$timers[label][fn.$timerID] = window.setInterval(handler, interval);\n                    }\n\n                    if (!this.global[label]) {\n                        this.global[label] = [];\n                    }\n                    this.global[label].push(element);\n\n                },\n                remove: function(element, label, fn) {\n                    var timers = element.$timers, ret;\n\n                    if (timers) {\n\n                        if (!label) {\n                            for (var lab in timers) {\n                                if (timers.hasOwnProperty(lab)) {\n                                    this.remove(element, lab, fn);\n                                }\n                            }\n                        } else if (timers[label]) {\n                            if (fn) {\n                                if (fn.$timerID) {\n                                    window.clearInterval(timers[label][fn.$timerID]);\n                                    delete timers[label][fn.$timerID];\n                                }\n                            } else {\n                                for (var _fn in timers[label]) {\n                                    if (timers[label].hasOwnProperty(_fn)) {\n                                        window.clearInterval(timers[label][_fn]);\n                                        delete timers[label][_fn];\n                                    }\n                                }\n                            }\n\n                            for (ret in timers[label]) {\n                                if (timers[label].hasOwnProperty(ret)) {\n                                    break;\n                                }\n                            }\n                            if (!ret) {\n                                ret = null;\n                                delete timers[label];\n                            }\n                        }\n\n                        for (ret in timers) {\n                            if (timers.hasOwnProperty(ret)) {\n                                break;\n                            }\n                        }\n                        if (!ret) {\n                            element.$timers = null;\n                        }\n                    }\n                }\n            }\n        });\n        if (/(msie) ([\\w.]+)/.exec(navigator.userAgent.toLowerCase())) {\n            $(window).one('unload', function() {\n                var global = jQuery.timer.global;\n                for (var label in global) {\n                    if (global.hasOwnProperty(label)) {\n                        var els = global[label], i = els.length;\n                        while (--i) {\n                            jQuery.timer.remove(els[i], label);\n                        }\n                    }\n                }\n            });\n        }\n    })(jQuery);\n    // -----------------------------------------------------------------------\n    // :: CROSS BROWSER SPLIT\n    // -----------------------------------------------------------------------\n    /* istanbul ignore next */\n    (function(undef) {\n        // prevent double include\n\n        if (!String.prototype.split.toString().match(/\\[native/)) {\n            return;\n        }\n\n        var nativeSplit = String.prototype.split,\n        compliantExecNpcg = /()??/.exec(\"\")[1] === undef, // NPCG: nonparticipating capturing group\n        self;\n\n        self = function(str, separator, limit) {\n            // If `separator` is not a regex, use `nativeSplit`\n            if (Object.prototype.toString.call(separator) !== \"[object RegExp]\") {\n                return nativeSplit.call(str, separator, limit);\n            }\n            var output = [],\n            flags = (separator.ignoreCase ? \"i\" : \"\") +\n                (separator.multiline  ? \"m\" : \"\") +\n                (separator.extended   ? \"x\" : \"\") + // Proposed for ES6\n                (separator.sticky     ? \"y\" : \"\"), // Firefox 3+\n                lastLastIndex = 0,\n            // Make `global` and avoid `lastIndex` issues by working with a copy\n            separator2, match, lastIndex, lastLength;\n            separator = new RegExp(separator.source, flags + \"g\");\n            str += \"\"; // Type-convert\n            if (!compliantExecNpcg) {\n                // Doesn't need flags gy, but they don't hurt\n                separator2 = new RegExp(\"^\" + separator.source + \"$(?!\\\\s)\", flags);\n            }\n            /* Values for `limit`, per the spec:\n             * If undefined: 4294967295 // Math.pow(2, 32) - 1\n             * If 0, Infinity, or NaN: 0\n             * If positive number: limit = Math.floor(limit); if (limit > 4294967295) limit -= 4294967296;\n             * If negative number: 4294967296 - Math.floor(Math.abs(limit))\n             * If other: Type-convert, then use the above rules\n             */\n            // ? Math.pow(2, 32) - 1 : ToUint32(limit)\n            limit = limit === undef ? -1 >>> 0 : limit >>> 0;\n            while (match = separator.exec(str)) {\n                    // `separator.lastIndex` is not reliable cross-browser\n                    lastIndex = match.index + match[0].length;\n                    if (lastIndex > lastLastIndex) {\n                        output.push(str.slice(lastLastIndex, match.index));\n                        // Fix browsers whose `exec` methods don't consistently return `undefined` for\n                        // nonparticipating capturing groups\n                        if (!compliantExecNpcg && match.length > 1) {\n                            match[0].replace(separator2, function() {\n                                for (var i = 1; i < arguments.length - 2; i++) {\n                                    if (arguments[i] === undef) {\n                                        match[i] = undef;\n                                    }\n                                }\n                            });\n                        }\n                        if (match.length > 1 && match.index < str.length) {\n                            Array.prototype.push.apply(output, match.slice(1));\n                        }\n                        lastLength = match[0].length;\n                        lastLastIndex = lastIndex;\n                        if (output.length >= limit) {\n                            break;\n                        }\n                    }\n                    if (separator.lastIndex === match.index) {\n                        separator.lastIndex++; // Avoid an infinite loop\n                    }\n                }\n            if (lastLastIndex === str.length) {\n                if (lastLength || !separator.test(\"\")) {\n                    output.push(\"\");\n                }\n            } else {\n                output.push(str.slice(lastLastIndex));\n            }\n            return output.length > limit ? output.slice(0, limit) : output;\n        };\n\n        // For convenience\n        String.prototype.split = function(separator, limit) {\n            return self(this, separator, limit);\n        };\n\n        return self;\n\n    })();\n    // -----------------------------------------------------------------------\n    // :: jQuery Caret\n    // -----------------------------------------------------------------------\n    /* istanbul ignore next */\n    $.fn.caret = function(pos) {\n        var target = this[0];\n        var isContentEditable = target.contentEditable === 'true';\n        //get\n        if (arguments.length === 0) {\n            //HTML5\n            if (window.getSelection) {\n                //contenteditable\n                if (isContentEditable) {\n                    target.focus();\n                    var range1 = window.getSelection().getRangeAt(0),\n                    range2 = range1.cloneRange();\n                    range2.selectNodeContents(target);\n                    range2.setEnd(range1.endContainer, range1.endOffset);\n                    return range2.toString().length;\n                }\n                //textarea\n                return target.selectionStart;\n            }\n            //IE<9\n            if (document.selection) {\n                target.focus();\n                //contenteditable\n                if (isContentEditable) {\n                    var range1 = document.selection.createRange(),\n                    range2 = document.body.createTextRange();\n                    range2.moveToElementText(target);\n                    range2.setEndPoint('EndToEnd', range1);\n                    return range2.text.length;\n                }\n                //textarea\n                var pos = 0,\n                range = target.createTextRange(),\n                range2 = document.selection.createRange().duplicate(),\n                bookmark = range2.getBookmark();\n                range.moveToBookmark(bookmark);\n                while (range.moveStart('character', -1) !== 0) pos++;\n                return pos;\n            }\n            //not supported\n            return 0;\n        }\n        //set\n        if (pos === -1)\n            pos = this[isContentEditable? 'text' : 'val']().length;\n        //HTML5\n        if (window.getSelection) {\n            //contenteditable\n            if (isContentEditable) {\n                target.focus();\n                window.getSelection().collapse(target.firstChild, pos);\n            }\n            //textarea\n            else\n                target.setSelectionRange(pos, pos);\n        }\n        //IE<9\n        else if (document.body.createTextRange) {\n            var range = document.body.createTextRange();\n            range.moveToElementText(target);\n            range.moveStart('character', pos);\n            range.collapse(true);\n            range.select();\n        }\n        if (!isContentEditable && !this.is(':focus')) {\n            target.focus();\n        }\n        return pos;\n    };\n    /* eslint-enable */\n    // -----------------------------------------------------------------------\n    // :: Cross-browser resize element plugin using sentinel iframe or\n    // :: resizeObserver\n    // -----------------------------------------------------------------------\n    $.fn.resizer = function(callback, options) {\n        var settings = $.extend({}, {\n            prefix: ''\n        }, options);\n        var trigger = arguments.length === 0;\n        var unbind = arguments[0] === \"unbind\";\n        if (!trigger && !unbind && !is_function(callback)) {\n            throw new Error('Invalid argument, it need to a function or string ' +\n                            '\"unbind\" or no arguments.');\n        }\n        if (unbind) {\n            callback = is_function(arguments[1]) ? arguments[1] : null;\n        }\n        return this.each(function() {\n            var $this = $(this);\n            var iframe;\n            var callbacks;\n            function resize_handler() {\n                callbacks.fire();\n            }\n            if (trigger || unbind) {\n                callbacks = $this.data('callbacks');\n                if (trigger) {\n                    callbacks && callbacks.fire();\n                } else {\n                    if (callback && callbacks) {\n                        callbacks.remove(callback);\n                        if (!callbacks.has()) {\n                            callbacks = null;\n                        }\n                    } else {\n                        callbacks = null;\n                    }\n                    if (!callbacks) {\n                        $this.removeData('callbacks');\n                        if (window.ResizeObserver) {\n                            var observer = $this.data('observer');\n                            if (observer) {\n                                observer.unobserve(this);\n                                $this.removeData('observer');\n                            }\n                        } else {\n                            iframe = $this.find('> iframe');\n                            if (iframe.length) {\n                                // just in case of memory leaks in IE\n                                $(iframe[0].contentWindow).off('resize').remove();\n                                iframe.remove();\n                            } else if ($this.is('body')) {\n                                $(window).off('resize.resizer');\n                            }\n                        }\n                    }\n                }\n            } else if ($this.data('callbacks')) {\n                $(this).data('callbacks').add(callback);\n            } else {\n                callbacks = $.Callbacks();\n                callbacks.add(callback);\n                $this.data('callbacks', callbacks);\n                var resizer;\n                var first = true;\n                if (window.ResizeObserver) {\n                    resizer = new ResizeObserver(function() {\n                        if (!first) {\n                            resize_handler();\n                        }\n                        first = false;\n                    });\n                    resizer.observe(this);\n                    $this.data('observer', resizer);\n                } else if ($this.is('body')) {\n                    $(window).on('resize.resizer', resize_handler);\n                } else {\n                    iframe = $('<iframe/>').addClass(settings.prefix + 'resizer')\n                        .appendTo(this)[0];\n\n                    $(iframe.contentWindow).on('resize', resize_handler);\n                }\n            }\n        });\n    };\n    // -----------------------------------------------------------------------\n    function jquery_resolve(value) {\n        var defer = jQuery.Deferred();\n        defer.resolve(value);\n        return defer.promise();\n    }\n    // -----------------------------------------------------------------------\n    function unpromise(value, callback, error) {\n        if (value) {\n            if (is_function(value.catch)) {\n                value.catch(error);\n            }\n            if (is_function(value.done)) {\n                return value.done(callback);\n            } else if (is_function(value.then)) {\n                return value.then(callback);\n            } else {\n                return callback(value);\n            }\n        }\n    }\n    // -----------------------------------------------------------------------\n    // :: based on https://github.com/zeusdeux/isInViewport\n    // :: work only vertically and on dom elements\n    // -----------------------------------------------------------------------\n    $.fn.is_fully_in_viewport = (function() {\n        function is_visible(node, container) {\n            var box = node.getBoundingClientRect();\n            var viewport = container[0].getBoundingClientRect();\n            var top = box.top - viewport.top;\n            var bottom = box.bottom - viewport.top;\n            var height = container.height();\n            return bottom > 0 && top <= height;\n        }\n        if (window.IntersectionObserver) {\n            return function(container) {\n                var node = this[0];\n                var defer = jQuery.Deferred();\n                var item_observer = new window.IntersectionObserver(function(entries) {\n                    defer.resolve(entries[0].isIntersecting && entries[0].ratio === 1);\n                    item_observer.unobserve(node);\n                }, {\n                    root: container[0]\n                });\n                item_observer.observe(node);\n                return defer.promise();\n            };\n        } else {\n            return function(container) {\n                return jquery_resolve(is_visible(this[0], container));\n            };\n        }\n    })();\n    // -------------------------------------------------------------------------\n    /* eslint-disable */\n    // regex that match single character at begining and folowing combine character\n    // https://en.wikipedia.org/wiki/Combining_character\n    var combine_chr_re = /^(.(?:[\\u0300-\\u036F]|[\\u1AB0-\\u1abE]|[\\u1DC0-\\u1DF9]|[\\u1DFB-\\u1DFF]|[\\u20D0-\\u20F0]|[\\uFE20-\\uFE2F])+)/;\n    // source: https://mathiasbynens.be/notes/javascript-unicode\n    var astral_symbols_re = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // source: https://github.com/mathiasbynens/emoji-regex\n    var emoji_re = /^(\\uD83C\\uDFF4(?:\\uDB40\\uDC67\\uDB40\\uDC62(?:\\uDB40\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67|\\uDB40\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73|\\uDB40\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74)\\uDB40\\uDC7F|\\u200D\\u2620\\uFE0F)|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC68(?:\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83D\\uDC68|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDB0-\\uDDB3])|(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDB0-\\uDDB3]))|\\uD83D\\uDC69\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDB0-\\uDDB3])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|(?:\\uD83D\\uDC41\\uFE0F\\u200D\\uD83D\\uDDE8|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2695\\u2696\\u2708]|\\uD83D\\uDC68(?:(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708])|(?:(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)\\uFE0F|\\uD83D\\uDC6F|\\uD83E[\\uDD3C\\uDDDE\\uDDDF])\\u200D[\\u2640\\u2642]|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDD6-\\uDDDD])(?:(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|\\u200D[\\u2640\\u2642])|\\uD83D\\uDC69\\u200D[\\u2695\\u2696\\u2708])\\uFE0F|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83D\\uDC68(?:\\u200D(?:(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83D[\\uDC66\\uDC67])|\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDFF3\\uFE0F\\u200D\\uD83C\\uDF08|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDB0-\\uDDB3])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66|\\uD83C\\uDDF6\\uD83C\\uDDE6|\\uD83C\\uDDFD\\uD83C\\uDDF0|\\uD83C\\uDDF4\\uD83C\\uDDF2|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDED(?:\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA])|\\uD83C\\uDDEC(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE])|\\uD83C\\uDDEA(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA])|\\uD83C\\uDDE8(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF])|\\uD83C\\uDDF2(?:\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF])|\\uD83C\\uDDF3(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF])|\\uD83C\\uDDFC(?:\\uD83C[\\uDDEB\\uDDF8])|\\uD83C\\uDDFA(?:\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF])|\\uD83C\\uDDF0(?:\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDEF(?:\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5])|\\uD83C\\uDDF8(?:\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF])|\\uD83C\\uDDEE(?:\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9])|\\uD83C\\uDDFF(?:\\uD83C[\\uDDE6\\uDDF2\\uDDFC])|\\uD83C\\uDDEB(?:\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7])|\\uD83C\\uDDF5(?:\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE])|\\uD83C\\uDDE9(?:\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF])|\\uD83C\\uDDF9(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF])|\\uD83C\\uDDE7(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF])|[#\\*0-9]\\uFE0F\\u20E3|\\uD83C\\uDDF1(?:\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE])|\\uD83C\\uDDE6(?:\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF])|\\uD83C\\uDDF7(?:\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC])|\\uD83C\\uDDFB(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA])|\\uD83C\\uDDFE(?:\\uD83C[\\uDDEA\\uDDF9])|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u261D\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2\\uDFC7]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC70\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDCAA\\uDD74\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC]|\\uD83E[\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD30-\\uDD36\\uDDB5\\uDDB6\\uDDD1-\\uDDD5])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDEEB\\uDEEC\\uDEF4-\\uDEF9]|\\uD83E[\\uDD10-\\uDD3A\\uDD3C-\\uDD3E\\uDD40-\\uDD45\\uDD47-\\uDD70\\uDD73-\\uDD76\\uDD7A\\uDD7C-\\uDDA2\\uDDB0-\\uDDB9\\uDDC0-\\uDDC2\\uDDD0-\\uDDFF])|(?:[#\\*0-9\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u267F\\u2692-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD7A\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA4\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED2\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3-\\uDEF9]|\\uD83E[\\uDD10-\\uDD3A\\uDD3C-\\uDD3E\\uDD40-\\uDD45\\uDD47-\\uDD70\\uDD73-\\uDD76\\uDD7A\\uDD7C-\\uDDA2\\uDDB0-\\uDDB9\\uDDC0-\\uDDC2\\uDDD0-\\uDDFF])\\uFE0F|(?:[\\u261D\\u26F9\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2-\\uDFC4\\uDFC7\\uDFCA-\\uDFCC]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66-\\uDC69\\uDC6E\\uDC70-\\uDC78\\uDC7C\\uDC81-\\uDC83\\uDC85-\\uDC87\\uDCAA\\uDD74\\uDD75\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE45-\\uDE47\\uDE4B-\\uDE4F\\uDEA3\\uDEB4-\\uDEB6\\uDEC0\\uDECC]|\\uD83E[\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD26\\uDD30-\\uDD39\\uDD3D\\uDD3E\\uDDB5\\uDDB6\\uDDB8\\uDDB9\\uDDD1-\\uDDDD]))/;\n    var entity_re = /^(&(?:[a-z\\d]+|#\\d+|#x[a-f\\d]+);)/i;\n    // https://stackoverflow.com/questions/11381673/detecting-a-mobile-browser\n    var mobile_re = /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i;\n    var tablet_re = /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i;\n    var format_split_re = /(\\[\\[(?:-?[@!gbiuso])*;[^;]*;[^\\]]*\\](?:[^\\]\\\\]*(?:\\\\\\\\)*\\\\\\][^\\]]*|[^\\]]*|[^[]*\\[[^\\]]*)\\]?)/i;\n    var format_parts_re = /\\[\\[((?:-?[@!gbiuso])*);([^;]*);([^;\\]]*);?([^;\\]]*);?([^\\]]*)\\]([^\\]\\\\]*\\\\\\][^\\]]*|[^\\]]*|[^[]*\\[[^\\]]+)\\]?/gi;\n    var format_re = /\\[\\[((?:-?[@!gbiuso])*;[^;\\]]*;[^;\\]]*(?:;|[^\\]()]*);?[^\\]]*)\\]([^\\]]*\\\\\\][^\\]]*|[^\\]]*|[^[]*\\[[^\\]]*)\\]?/gi;\n    var format_exist_re = /\\[\\[((?:-?[@!gbiuso])*;[^;\\]]*;[^;\\]]*(?:;|[^\\]()]*);?[^\\]]*)\\]([^\\]]*\\\\\\][^\\]]*|[^\\]]*|[^[]*\\[[^\\]]*)\\]/gi;\n    var format_full_re = /^(\\[\\[(?:(?:-?[@!gbiuso])*;[^;\\]]*;[^;\\]]*(?:;|[^\\]()]*);?[^\\]]*)\\])([^\\]]*\\\\\\][^\\]]*|[^\\]]*|[^[]*\\[[^\\]]*)(\\])$/i;\n    var format_begin_re = /(\\[\\[(?:-?[@!gbiuso])*;[^;]*;[^\\]]*\\])/i;\n    var format_start_re = /^(\\[\\[(?:-?[@!gbiuso])*;[^;]*;[^\\]]*\\])/i;\n    var format_end_re = /\\[\\[(?:-?[@!gbiuso])*;[^;]*;[^\\]]*\\]?$/i;\n    var self_closing_re = /^(?:\\[\\[)?[^;]*@[^;]*;/;\n    var color_hex_re = /^#([0-9a-f]{3}|[0-9a-f]{6})$/i;\n    var url_re = /(\\bhttps?:\\/\\/(?:(?:(?!&[^;]+;)|(?=&amp;))[^\\s\"'<>\\][)])+)/gi;\n    var url_nf_re = /\\b(?![^\\s[\\]]*])(https?:\\/\\/(?:(?:(?!&[^;]+;)|(?=&amp;))[^\\s\"'<>\\][)])+)/gi;\n    var email_re = /((([^<>('\")[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,})))/g;\n    var url_full_re = /^(https?:\\/\\/(?:(?:(?!&[^;]+;)|(?=&amp;))[^\\s\"'<>\\][)])+)$/gi;\n    var email_full_re = /^((([^<>('\")[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,})))$/g;\n    var command_re = /((?:\"[^\"\\\\]*(?:\\\\[\\S\\s][^\"\\\\]*)*\"|'[^'\\\\]*(?:\\\\[\\S\\s][^'\\\\]*)*'|\\/[^\\/\\\\]*(?:\\\\[\\S\\s][^\\/\\\\]*)*\\/[gimsuy]*(?=\\s|$)|(?:\\\\\\s|\\S))+)(?=\\s|$)/gi;\n    var extended_command_re = /^\\s*((terminal|cmd)::([a-z_]+)\\(([\\s\\S]*)\\))\\s*$/;\n    var format_exec_re = /(\\[\\[(?:[^\\][]|\\\\\\])+\\]\\])/;\n    var float_re = /^[-+]?[0-9]*\\.?[0-9]+([eE][-+]?[0-9]+)?$/;\n    var re_re = /^\\/((?:\\\\\\/|[^/]|\\[[^\\]]*\\/[^\\]]*\\])+)\\/([gimsuy]*)$/;\n    var string_re = /(\"(?:[^\"\\\\]|\\\\(?:\\\\\\\\)*\"|\\\\\\\\)*\"|'(?:[^'\\\\]|\\\\(?:\\\\\\\\)*'|\\\\\\\\)*')/;\n    var unclosed_strings_re = /^(?=((?:[^\"']+|\"[^\"\\\\]*(?:\\\\[^][^\"\\\\]*)*\"|'[^'\\\\]*(?:\\\\[^][^'\\\\]*)*')*))\\1./;\n    var broken_image = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 14\"><title id=\"title2\">rounded</title><path id=\"terminal-broken-image\" d=\"m 14,10 h 2 v 1 a 3,3 0 0 1 -3,3 H 3 A 3,3 0 0 1 0,11 H 4.5 A 1.00012,1.00012 0 0 0 5.207,10.707 L 6.5,9.414 7.793,10.707 a 0.99963,0.99963 0 0 0 1.41406,0 l 2.36719,-2.36719 1.80127,1.44092 A 0.99807,0.99807 0 0 0 14,10 Z M 16,3 V 8 H 14.35059 L 12.12451,6.21924 A 0.99846,0.99846 0 0 0 10.793,6.293 L 8.5,8.586 7.207,7.293 a 0.99962,0.99962 0 0 0 -1.41406,0 L 4.08594,9 H 0 V 3 A 3,3 0 0 1 3,0 h 10 a 3,3 0 0 1 3,3 z M 6,4.5 A 1.5,1.5 0 1 0 4.5,6 1.5,1.5 0 0 0 6,4.5 Z\" /></svg>';\n    var use_broken_image = '<svg class=\"terminal-broken-image\" role=\"presentation\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 14\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><use xlink:href=\"#terminal-broken-image\"/></svg>';\n    /* eslint-enable */\n    // -------------------------------------------------------------------------\n    // :: features flags\n    // -------------------------------------------------------------------------\n    // taken from https://hacks.mozilla.org/2011/09/detecting-and-generating-\n    // css-animations-in-javascript/\n    var animation_supported = (function() {\n        var animation = false,\n            domPrefixes = 'Webkit Moz O ms Khtml'.split(' '),\n            elm = document.createElement('div');\n        if (elm.style.animationName) {\n            animation = true;\n        }\n        if (animation === false) {\n            for (var i = 0; i < domPrefixes.length; i++) {\n                var name = domPrefixes[i] + 'AnimationName';\n                if (elm.style[name] !== undefined) {\n                    animation = true;\n                    break;\n                }\n            }\n        }\n        elm = null;\n        return animation;\n    })();\n    // -------------------------------------------------------------------------\n    var agent = window.navigator.userAgent;\n    var is_IE = /MSIE|Trident/.test(agent) || /rv:11.0/i.test(agent);\n    var is_IEMobile = /IEMobile/.test(agent);\n    // -------------------------------------------------------------------------\n    var is_ch_unit_supported = (function() {\n        if (is_IE && !is_IEMobile) {\n            return false;\n        }\n        var div = document.createElement('div');\n        div.style.width = '1ch';\n        return div.style.width === '1ch';\n    })();\n    // -------------------------------------------------------------------------\n    var is_css_variables_supported = window.CSS && window.CSS.supports &&\n            window.CSS.supports('--fake-var', 0);\n    // -------------------------------------------------------------------------\n    var is_android = navigator.userAgent.toLowerCase().indexOf('android') !== -1;\n    // -------------------------------------------------------------------------\n    var is_key_native = (function is_key_native() {\n        if (!('KeyboardEvent' in window && 'key' in window.KeyboardEvent.prototype)) {\n            return false;\n        }\n        var proto = window.KeyboardEvent.prototype;\n        var get = Object.getOwnPropertyDescriptor(proto, 'key').get;\n        return !!get.toString().match(/\\[native code\\]/);\n    })();\n    // -------------------------------------------------------------------------\n    var is_mobile = (function(a) {\n        var check = false;\n        if (mobile_re.test(a) || tablet_re.test(a.substr(0, 4))) {\n            check = true;\n        }\n        return check;\n    })(navigator.userAgent || navigator.vendor || window.opera);\n\n    // -------------------------------------------------------------------------\n    // IE ch unit bug detection - better that UserAgent that can be changed\n    // -------------------------------------------------------------------------\n    var ch_unit_bug = false;\n    $(function() {\n        function width(e) {\n            return e[0].getBoundingClientRect().width;\n        }\n        var base = '<span style=\"font-family: monospace;visibility:hidden;';\n        var ch = $(base + 'width:1ch;overflow: hidden\">&nbsp;</span>').appendTo('body');\n        var space = $(base + '\">&nbsp;</span>').appendTo('body');\n        ch_unit_bug = width(ch) !== width(space);\n        ch.remove();\n        space.remove();\n    });\n    // -----------------------------------------------------------------------\n    // :: hide elements from screen readers\n    // -----------------------------------------------------------------------\n    function a11y_hide(element) {\n        element.attr({\n            role: 'presentation',\n            'aria-hidden': 'true'\n        });\n    }\n    // ---------------------------------------------------------------------\n    // :: alert only first exception of type\n    // ---------------------------------------------------------------------\n    var excepctions = [];\n    function alert_exception(label, e) {\n        if (arguments[0] instanceof $.terminal.Exception) {\n            label = arguments[0].type;\n            e = arguments[0];\n        }\n        var message = (label ? label + ': ' : '') + exception_message(e);\n        if (excepctions.indexOf(message) === -1) {\n            excepctions.push(message);\n            setTimeout(function() {\n                throw e;\n            }, 0);\n            //alert(message + (e.stack ? '\\n' + e.stack : ''));\n        }\n    }\n    // ---------------------------------------------------------------------\n    // :; detect if mouse event happen on scrollbar\n    // ---------------------------------------------------------------------\n    function scrollbar_event(e, node) {\n        var left = node.offset().left;\n        return node.outerWidth() <= e.clientX - left;\n    }\n    // ---------------------------------------------------------------------\n    // :: Return exception message as string\n    // ---------------------------------------------------------------------\n    function exception_message(e) {\n        if (typeof e === 'string') {\n            return e;\n        } else if (typeof e.fileName === 'string') {\n            return e.fileName + ': ' + e.message;\n        } else {\n            return e.message;\n        }\n    }\n    // -----------------------------------------------------------------------\n    // :: CYCLE DATA STRUCTURE\n    // -----------------------------------------------------------------------\n    function Cycle() {\n        var data = [].slice.call(arguments);\n        var pos = 0;\n        $.extend(this, {\n            get: function() {\n                return data;\n            },\n            index: function() {\n                return pos;\n            },\n            rotate: function(skip, init) {\n                if (init === undefined) {\n                    init = pos;\n                } else if (init === pos) {\n                    return;\n                }\n                if (!skip) {\n                    var defined = data.filter(function(item) {\n                        return typeof item !== 'undefined';\n                    });\n                    if (!defined.length) {\n                        return;\n                    }\n                }\n                if (!data.length) {\n                    return;\n                }\n                if (data.length === 1) {\n                    return data[0];\n                } else {\n                    if (pos === data.length - 1) {\n                        pos = 0;\n                    } else {\n                        ++pos;\n                    }\n                    if (typeof data[pos] !== 'undefined') {\n                        return data[pos];\n                    } else {\n                        return this.rotate(true, init);\n                    }\n                }\n            },\n            length: function() {\n                return data.length;\n            },\n            remove: function(index) {\n                delete data[index];\n            },\n            set: function(item) {\n                for (var i = data.length; i--;) {\n                    if (data[i] === item) {\n                        pos = i;\n                        return;\n                    }\n                }\n                this.append(item);\n                pos = data.length - 1;\n            },\n            front: function() {\n                if (data.length) {\n                    var index = pos;\n                    var restart = false;\n                    while (!data[index]) {\n                        index++;\n                        if (index > data.length) {\n                            if (restart) {\n                                break;\n                            }\n                            index = 0;\n                            restart = true;\n                        }\n                    }\n                    return data[index];\n                }\n            },\n            map: function(fn) {\n                return data.map(function(item, i) {\n                    if (typeof item !== 'undefined') {\n                        return fn(item, i);\n                    }\n                    return null;\n                }).filter(Boolean);\n            },\n            forEach: function(fn) {\n                return data.forEach(function(item, i) {\n                    if (typeof item !== 'undefined') {\n                        fn(item, i);\n                    }\n                });\n            },\n            append: function(item) {\n                data.push(item);\n            }\n        });\n    }\n    /*\n    function time() {\n        // performance.now almost equal Date.now()- performance.timing.navigationStart\n        // the difference check should be almost the same\n        return performance ? performance.now() : Date.now();\n    }\n    */\n    // -----------------------------------------------------------------------\n    // :: STACK DATA STRUCTURE\n    // -----------------------------------------------------------------------\n    function Stack(init) {\n        var data = is_array(init) ? init : init ? [init] : [];\n        $.extend(this, {\n            data: function() {\n                return data;\n            },\n            map: function(fn) {\n                return $.map(data, fn);\n            },\n            size: function() {\n                return data.length;\n            },\n            pop: function() {\n                if (data.length === 0) {\n                    return null;\n                } else {\n                    var value = data[data.length - 1];\n                    data = data.slice(0, data.length - 1);\n                    return value;\n                }\n            },\n            push: function(value) {\n                data = data.concat([value]);\n                return value;\n            },\n            top: function() {\n                return data.length > 0 ? data[data.length - 1] : null;\n            },\n            clone: function() {\n                return new Stack(data.slice(0));\n            }\n        });\n    }\n    // -------------------------------------------------------------------------\n    // :: Class for Worker that do some computation when needed\n    // :: if validation function return false it mean that condition changed\n    // :: and cache need to be cleared. If value was not prcessed it will run\n    // :: the action\n    // -------------------------------------------------------------------------\n    function WorkerCache(options) {\n        var settings = $.extend({\n            validation: $.noop,\n            action: $.noop,\n            onCache: $.noop\n        }, options);\n        this._onCache = settings.onCache;\n        this._action = settings.action;\n        this._validation = settings.validation;\n        this._cache = new Map();\n    }\n    // -------------------------------------------------------------------------\n    WorkerCache.prototype.validate = function() {\n        var valid = this._validation();\n        var test = valid === undefined || valid === true;\n        if (!test) {\n            this._cache.clear();\n        }\n        return test;\n    };\n    // -------------------------------------------------------------------------\n    WorkerCache.prototype.get = function(key) {\n        var value;\n        if (this.validate() && this._cache.has(key)) {\n            value = this._cache.get(key);\n            this._onCache({cahce: value});\n            return value;\n        }\n        value = this._action(key);\n        this._cache.set(key, value);\n        return value;\n    };\n    // -------------------------------------------------------------------------\n    // :: HISTORY CLASS\n    // -------------------------------------------------------------------------\n    function History(name, size, memory) {\n        var enabled = true;\n        var storage_key = '';\n        if (typeof name === 'string' && name !== '') {\n            storage_key = name + '_';\n        }\n        storage_key += 'commands';\n        var data;\n        if (memory) {\n            data = [];\n        } else {\n            data = $.Storage.get(storage_key);\n            data = data ? JSON.parse(data) : [];\n        }\n        var pos = data.length - 1;\n        $.extend(this, {\n            append: function(item) {\n                if (enabled) {\n                    if (data[data.length - 1] !== item) {\n                        data.push(item);\n                        if (size && data.length > size) {\n                            data = data.slice(-size);\n                        }\n                        pos = data.length - 1;\n                        if (!memory) {\n                            $.Storage.set(storage_key, JSON.stringify(data));\n                        }\n                    }\n                }\n            },\n            set: function(new_data) {\n                if (is_array(new_data)) {\n                    data = new_data;\n                    if (!memory) {\n                        $.Storage.set(storage_key, JSON.stringify(data));\n                    }\n                }\n            },\n            data: function() {\n                return data;\n            },\n            reset: function() {\n                pos = data.length - 1;\n            },\n            last: function() {\n                return data[data.length - 1];\n            },\n            end: function() {\n                return pos === data.length - 1;\n            },\n            position: function() {\n                return pos;\n            },\n            current: function() {\n                return data[pos];\n            },\n            next: function() {\n                var old = pos;\n                if (pos < data.length - 1) {\n                    ++pos;\n                }\n                if (old !== pos) {\n                    return data[pos];\n                }\n            },\n            previous: function() {\n                var old = pos;\n                if (pos > 0) {\n                    --pos;\n                }\n                if (old !== pos) {\n                    return data[pos];\n                }\n            },\n            clear: function() {\n                data = [];\n                this.purge();\n            },\n            enabled: function() {\n                return enabled;\n            },\n            enable: function() {\n                enabled = true;\n            },\n            purge: function() {\n                if (!memory) {\n                    $.Storage.remove(storage_key);\n                }\n            },\n            disable: function() {\n                enabled = false;\n            },\n            toggle: function(value) {\n                if (typeof value === 'undefined') {\n                    enabled = !enabled;\n                } else {\n                    enabled = value;\n                }\n            }\n        });\n    }\n    // -------------------------------------------------------------------------\n    // :: COMMAND LINE PLUGIN\n    // -------------------------------------------------------------------------\n    var cmd_index = 0;\n    $.cmd = {\n        defaults: {\n            mask: false,\n            caseSensitiveSearch: true,\n            historySize: 60,\n            prompt: '> ',\n            enabled: true,\n            history: true,\n            onPositionChange: $.noop,\n            onCommandChange: $.noop,\n            inputStyle: 'textarea',\n            mobileDelete: is_mobile,\n            onPaste: $.noop,\n            clickTimeout: 200,\n            holdTimeout: 400,\n            holdRepeatTimeout: 200,\n            mobileIngoreAutoSpace: [],\n            repeatTimeoutKeys: [],\n            tabindex: 1,\n            tabs: 4\n        }\n    };\n    $.fn.cmd = function(options) {\n        var settings = $.extend({}, $.cmd.defaults, options);\n        function mobile_ignore_key(key) {\n            return settings.mobileIngoreAutoSpace.length &&\n                settings.mobileIngoreAutoSpace.indexOf(key) !== -1 && is_android;\n        }\n        var self = this;\n        var maybe_data = self.data('cmd');\n        if (maybe_data) {\n            return maybe_data;\n        }\n        var id = cmd_index++;\n        self.addClass('cmd');\n        var wrapper = $('<div class=\"cmd-wrapper\"/>').appendTo(self);\n        wrapper.append('<span class=\"cmd-prompt\"></span>');\n        wrapper.append('<div class=\"cmd-cursor-line\">' +\n                       '<span></span>' +\n                       '<span class=\"cmd-cursor\"><span>' +\n                       '<span>&nbsp;</span></span></span>' +\n                       '<span></span>' +\n                       '</div>');\n        // a11y: don't read command it's in textarea that's in focus\n        a11y_hide(wrapper.find('.cmd-cursor-line'));\n        // on mobile the only way to hide textarea on desktop it's needed because\n        // textarea show up after focus\n        //self.append('<span class=\"mask\"></mask>');\n        var clip = $('<textarea>').attr({\n            autocapitalize: 'off',\n            spellcheck: 'false',\n            tabindex: settings.tabindex\n        }).addClass('cmd-clipboard').appendTo(self);\n        if (!is_mobile) {\n            clip.val(' ');\n        }\n        if (settings.width) {\n            self.width(settings.width);\n        }\n        var num_chars; // calculated by resize\n        var char_width;\n        var last_rendered_prompt;\n        var prompt_last_line;\n        var prompt_len;\n        var prompt_node = self.find('.cmd-prompt');\n        var reverse_search = false;\n        var rev_search_str = '';\n        var reverse_search_position = null;\n        var backup_prompt;\n        // TODO: try to use workerCache with data that don't change like bare_text\n        // or format function.\n        // TODO: remove workerCache for formatters they require dynamic\n        // value of position so data change when you move cursor\n        /*\n        var formatter = new WorkerCache({\n            validation: function() {\n                if (this._formatters instanceof Array) {\n                    var test = this._formatters.every(function(e, i) {\n                        return $.terminal.defaults.formatters[i] === e;\n                    });\n                    if (!test) {\n                        this._formatters = $.terminal.defaults.formatters;\n                    }\n                    return test;\n                }\n                return true;\n            },\n            onCache: function(value) {\n                this._counter = this._counter || 0;\n                this._counter++;\n            },\n            action: function(string) {\n                this._times = this._times || [];\n                var t0 = time();\n                // some optimization - don't change object shape and ref\n                format_options.position = position;\n                string = $.terminal.escape_formatting(string);\n                var value = $.terminal.apply_formatters(string, format_options);\n                var t1 = time();\n                this._times.push(t1 - t0);\n                return value;\n            }\n        });\n        */\n        var command = '';\n        var last_command;\n        // text from selection using CTRL+SHIFT+C (as in Xterm)\n        var kill_text = ''; // text from command that kill part of the command\n        var position = 0;\n        var prompt;\n        var enabled;\n        var formatted_position = 0;\n        var name, history;\n        var cursor = self.find('.cmd-cursor');\n        var animation;\n        var restart_animation;\n        var paste_count = 0;\n        // use \\uFFFF to mark newline extra character\n        // so we can hide it by css when using text selection\n        var line_marker = '\\uFFFF';\n        var line_marker_re = /\\uFFFF$/;\n        function get_char_pos(e) {\n            var node = $(e.target);\n            if (node.is('span,img,a')) {\n                node = node.closest('[data-text]');\n                return node.index() +\n                    node.parent('span').prevAll().find('[data-text]').length +\n                    node.closest('[role=\"presentation\"]')\n                        .prevUntil('.cmd-prompt').find('[data-text]').length;\n            } else if (node.is('div[role=\"presentation\"]')) {\n                var last = !node.next().length;\n                return node.find('[data-text]').length +\n                    node.prevUntil('.cmd-prompt').find('[data-text]').length -\n                    (last ? 0 : 1);\n            }\n        }\n        // IE mapping\n        var key_mapping = {\n            'SPACEBAR': ' ',\n            'UP': 'ArrowUP',\n            'DOWN': 'ArrowDown',\n            'LEFT': 'ArrowLeft',\n            'RIGHT': 'ArrowRight',\n            'DEL': 'Delete',\n            'MULTIPLY': '*',\n            'DIVIDE': '/',\n            'SUBTRACT': '-',\n            'ADD': '+'\n        };\n        function ie_key_fix(e) {\n            var key = e.key.toUpperCase();\n            if (key_mapping[key]) {\n                return key_mapping[key];\n            }\n            return key;\n        }\n        function get_key(e) {\n            if (e.key) {\n                var key = ie_key_fix(e).toUpperCase();\n                if (key === 'CONTROL') {\n                    return 'CTRL';\n                } else {\n                    var combo = [];\n                    if (e.ctrlKey) {\n                        combo.push('CTRL');\n                    }\n                    if (e.metaKey && key !== 'META') {\n                        combo.push('META');\n                    }\n                    if (e.shiftKey && key !== 'SHIFT') {\n                        combo.push('SHIFT');\n                    }\n                    if (e.altKey && key !== 'ALT') {\n                        combo.push('ALT');\n                    }\n                    if (combo.length && key === ' ') {\n                        key = 'SPACEBAR';\n                    }\n                    if (e.key) {\n                        combo.push(key);\n                    }\n                    return combo.join('+');\n                }\n            }\n        }\n        // -----------------------------------------------------------------\n        // for invoking shortcuts using terminal::keydown\n        // taken from https://github.com/cvan/keyboardevent-key-polyfill/\n        var keycodes = {\n            3: 'Cancel',\n            6: 'Help',\n            8: 'Backspace',\n            9: 'Tab',\n            12: 'Clear',\n            13: 'Enter',\n            16: 'Shift',\n            17: 'Control',\n            18: 'Alt',\n            19: 'Pause',\n            20: 'CapsLock',\n            27: 'Escape',\n            28: 'Convert',\n            29: 'NonConvert',\n            30: 'Accept',\n            31: 'ModeChange',\n            32: ' ',\n            33: 'PageUp',\n            34: 'PageDown',\n            35: 'End',\n            36: 'Home',\n            37: 'ArrowLeft',\n            38: 'ArrowUp',\n            39: 'ArrowRight',\n            40: 'ArrowDown',\n            41: 'Select',\n            42: 'Print',\n            43: 'Execute',\n            44: 'PrintScreen',\n            45: 'Insert',\n            46: 'Delete',\n            48: ['0', ')'],\n            49: ['1', '!'],\n            50: ['2', '@'],\n            51: ['3', '#'],\n            52: ['4', '$'],\n            53: ['5', '%'],\n            54: ['6', '^'],\n            55: ['7', '&'],\n            56: ['8', '*'],\n            57: ['9', '('],\n            91: 'OS',\n            93: 'ContextMenu',\n            144: 'NumLock',\n            145: 'ScrollLock',\n            181: 'VolumeMute',\n            182: 'VolumeDown',\n            183: 'VolumeUp',\n            186: [';', ':'],\n            187: ['=', '+'],\n            188: [',', '<'],\n            189: ['-', '_'],\n            190: ['.', '>'],\n            191: ['/', '?'],\n            192: ['`', '~'],\n            219: ['[', '{'],\n            220: ['\\\\', '|'],\n            221: [']', '}'],\n            222: [\"'\", '\"'],\n            224: 'Meta',\n            225: 'AltGraph',\n            246: 'Attn',\n            247: 'CrSel',\n            248: 'ExSel',\n            249: 'EraseEof',\n            250: 'Play',\n            251: 'ZoomOut'\n        };\n        var i;\n        // Function keys (F1-24).\n        for (i = 1; i < 25; i++) {\n            keycodes[111 + i] = 'F' + i;\n        }\n        // Printable ASCII characters.\n        var letter = '';\n        for (i = 65; i < 91; i++) {\n            letter = String.fromCharCode(i);\n            keycodes[i] = [letter.toLowerCase(), letter.toUpperCase()];\n        }\n        var reversed_keycodes = {};\n        Object.keys(keycodes).forEach(function(which) {\n            if (is_array(keycodes[which])) {\n                keycodes[which].forEach(function(key) {\n                    reversed_keycodes[key.toUpperCase()] = which;\n                });\n            } else {\n                reversed_keycodes[keycodes[which].toUpperCase()] = which;\n            }\n        });\n        // -----------------------------------------------------------------\n        var keymap;\n        var default_keymap = {\n            'ALT+D': delete_forward({clipboard: true}),\n            'HOLD+ALT+D': delete_forward({clipboard: true, hold: true}),\n            'HOLD+DELETE': delete_forward({clipboard: false, hold: true}),\n            'HOLD+SHIFT+DELETE': delete_forward({clipboard: false, hold: true}),\n            'ENTER': function() {\n                if (history && command && !settings.mask &&\n                    ((is_function(settings.historyFilter) &&\n                      settings.historyFilter(command)) ||\n                     (settings.historyFilter instanceof RegExp &&\n                      command.match(settings.historyFilter)) ||\n                     !settings.historyFilter)) {\n                    history.append(command);\n                }\n                var tmp = command;\n                history.reset();\n\n                // for next input event on firefox/android with google keyboard\n                prev_command = '';\n                no_keydown = true;\n\n                self.set('');\n                var promise;\n                if (settings.commands) {\n                    promise = settings.commands.call(self, tmp);\n                }\n                if (is_function(prompt)) {\n                    if (promise && is_function(promise.then)) {\n                        promise.then(draw_prompt);\n                    } else {\n                        draw_prompt();\n                    }\n                }\n                clip.val('');\n                return false;\n            },\n            'SHIFT+ENTER': function() {\n                self.insert('\\n');\n                return true;\n            },\n            'BACKSPACE': backspace_key,\n            'SHIFT+BACKSPACE': backspace_key,\n            'TAB': function() {\n                self.insert('\\t');\n            },\n            'CTRL+D': function() {\n                self['delete'](1);\n                return false;\n            },\n            'DELETE': function() {\n                self['delete'](1);\n                return true;\n            },\n            'HOLD+ARROWUP': up_arrow,\n            'ARROWUP': up_arrow,\n            'CTRL+P': prev_history,\n            'ARROWDOWN': down_arrow,\n            'HOLD+ARROWDOWN': down_arrow,\n            'CTRL+N': next_history,\n            'ARROWLEFT': left,\n            'HOLD+ARROWLEFT': debounce(left, 10),\n            'CTRL+B': left,\n            'CTRL+ARROWLEFT': function() {\n                // jump to one character after last space before prevoius word\n                var len = position - 1;\n                var pos = 0;\n                if (command[len] === ' ') {\n                    --len;\n                }\n                for (var i = len; i > 0; --i) {\n                    if (command[i] === ' ' && command[i + 1] !== ' ') {\n                        pos = i + 1;\n                        break;\n                    } else if (command[i] === '\\n' &&\n                               command[i + 1] !== '\\n') {\n                        pos = i;\n                        break;\n                    }\n                }\n                self.position(pos);\n            },\n            'CTRL+R': function() {\n                if (reverse_search) {\n                    reverse_history_search(true);\n                } else {\n                    backup_prompt = prompt;\n                    draw_reverse_prompt();\n                    last_command = command;\n                    self.set('');\n                    redraw();\n                    reverse_search = true;\n                }\n                return false;\n            },\n            'CTRL+G': function() {\n                if (reverse_search) {\n                    prompt = backup_prompt;\n                    draw_prompt();\n                    self.set(last_command);\n                    redraw();\n                    reverse_search = false;\n                    rev_search_str = '';\n                    return false;\n                }\n            },\n            'ARROWRIGHT': right,\n            'HOLD+ARROWRIGHT': debounce(right, 10),\n            'CTRL+F': right,\n            'CTRL+ARROWRIGHT': function() {\n                // jump to beginning or end of the word\n                if (command[position] === ' ') {\n                    ++position;\n                }\n                var re = /\\S[\\n\\s]{2,}|[\\n\\s]+\\S?/;\n                var match = command.slice(position).match(re);\n                if (!match || match[0].match(/^\\s+$/)) {\n                    self.position(text(command).length);\n                } else if (match[0][0] !== ' ') {\n                    position += match.index + 1;\n                } else {\n                    position += match.index + match[0].length - 1;\n                    if (match[0][match[0].length - 1] !== ' ') {\n                        --position;\n                    }\n                }\n                redraw();\n            },\n            'F12': return_true, // Allow Firebug\n            'END': end(true),\n            'CTRL+END': end(),\n            'CTRL+E': end(),\n            'HOME': home(true),\n            'CTRL+HOME': home(),\n            'CTRL+A': home(),\n            'SHIFT+INSERT': paste_event,\n            'CTRL+SHIFT+T': return_true, // open closed tab\n            'CTRL+W': delete_backward({clipboard: true, hold: false}),\n            'HOLD+BACKSPACE': delete_backward({clipboard: false, hold: true}),\n            'HOLD+SHIFT+BACKSPACE': delete_backward({clipboard: false, hold: true}),\n            'CTRL+H': function() {\n                if (command !== '' && position > 0) {\n                    self['delete'](-1);\n                }\n                return false;\n            },\n            'CTRL+X': return_true,\n            'CTRL+C': return_true,\n            'CTRL+T': return_true,\n            'CTRL+Y': function() {\n                if (kill_text !== '') {\n                    self.insert(kill_text);\n                }\n            },\n            'CTRL+V': paste_event,\n            'META+V': paste_event,\n            'CTRL+K': function() {\n                var len = text(command).length;\n                if (len > position) {\n                    kill_text = self['delete'](len - position);\n                    text_to_clipboard(clip, kill_text);\n                }\n                return false;\n            },\n            'CTRL+U': function() {\n                if (command !== '' && position !== 0) {\n                    kill_text = self['delete'](-position);\n                    text_to_clipboard(clip, kill_text);\n                }\n                return false;\n            },\n            'CTRL+TAB': function() {\n                return false;\n            },\n            'META+`': return_true, // CMD+` switch browser window on Mac\n            'META+R': return_true, // CMD+R page reload in Chrome Mac\n            'META+L': return_true // CLD+L jump into Ominbox on Chrome Mac\n        };\n        // -------------------------------------------------------------------------------\n        function delete_forward(options) {\n            options = options || {};\n            if (options.hold && !settings.mobileDelete) {\n                return function delete_character_forward() {\n                    self['delete'](1);\n                    return false;\n                };\n            }\n            return function delete_word_forward() {\n                var re = / *[^ ]+ *(?= )|[^ ]+$/;\n                var substring = command.slice(position);\n                var m = substring.match(re);\n                if (m) {\n                    kill_text = m[0];\n                    if (options.clipboard) {\n                        text_to_clipboard(clip, kill_text);\n                    }\n                }\n                self.set(\n                    command.slice(0, position) +\n                        command.slice(position).replace(re, ''),\n                    true\n                );\n                // chrome jump to address bar\n                return false;\n            };\n        }\n        // -------------------------------------------------------------------------------\n        function delete_backward(options) {\n            options = options || {};\n            if (options.hold && !settings.mobileDelete) {\n                return function delete_character_backward() {\n                    self['delete'](-1);\n                };\n            }\n            return function delete_word_backward() {\n                // don't work in Chromium (can't prevent close tab)\n                if (command !== '' && position !== 0) {\n                    var m = command.slice(0, position).match(/([^ ]* *$)/);\n                    if (m[0].length) {\n                        kill_text = self['delete'](-m[0].length);\n                        if (options.clipboard) {\n                            text_to_clipboard(clip, kill_text);\n                        }\n                    }\n                }\n                return false;\n            };\n        }\n        // -------------------------------------------------------------------------------\n        function return_true() {\n            return true;\n        }\n        // -------------------------------------------------------------------------------\n        function paste_event() {\n            clip.val('');\n            paste_count = 0;\n            if (self.isenabled() && !clip.is(':focus')) {\n                clip.trigger('focus', [true]);\n            }\n            clip.one('input', paste);\n            return true;\n        }\n        // ---------------------------------------------------------------------\n        // :: Paste content to terminal using hidden textarea\n        // ---------------------------------------------------------------------\n        function paste() {\n            if (paste_count++ > 0) {\n                return;\n            }\n            function set() {\n                clip.val(command);\n                fix_textarea();\n            }\n            function insert(text) {\n                self.insert(text);\n                set();\n            }\n            if (self.isenabled()) {\n                //wait until Browser insert text to textarea\n                self.oneTime(100, function() {\n                    var value = clip.val();\n                    if (is_function(settings.onPaste)) {\n                        var ret = settings.onPaste.call(self, {\n                            target: self,\n                            text: value\n                        });\n                        if (ret !== undefined) {\n                            if (ret && is_function(ret.then || ret.done)) {\n                                (ret.then || ret.done).call(ret, insert);\n                            } else if (typeof ret === 'string') {\n                                insert(ret);\n                            } else if (ret === false) {\n                                set();\n                            }\n                            return;\n                        }\n                    }\n                    insert(value);\n                });\n            }\n        }\n        // -------------------------------------------------------------------------------\n        function prev_history() {\n            if (first_up_history) {\n                last_command = command;\n                self.set(history.current());\n            } else {\n                self.set(history.previous());\n            }\n            first_up_history = false;\n            return false;\n        }\n        // -------------------------------------------------------------------------------\n        function next_history() {\n            self.set(history.end() ? last_command : history.next());\n            return false;\n        }\n        // -------------------------------------------------------------------------------\n        function have_newlines(string) {\n            return string.match(/\\n/);\n        }\n        // -------------------------------------------------------------------------------\n        function match_column(re, string, col) {\n            var match = string.match(re);\n            if (have_newlines(string)) {\n                return match && match[1].length <= col;\n            } else {\n                return match && match[1].length <= col - prompt_len;\n            }\n        }\n        // -------------------------------------------------------------------------------\n        function up_arrow() {\n            var before = command.substring(0, position);\n            var re = /\\n?([^\\n]+)$/;\n            var col = self.column();\n            if (have_newlines(before)) {\n                for (var i = before.length - col - 1; i--;) {\n                    if (before[i] === '\\n') {\n                        break;\n                    }\n                    var str = before.substring(0, i);\n                    if (match_column(re, str, col)) {\n                        break;\n                    }\n                }\n                self.position(i);\n                return false;\n            } else {\n                return prev_history();\n            }\n        }\n        // -------------------------------------------------------------------------------\n        function down_arrow() {\n            var after = command.substring(position);\n            var col = self.column();\n            if (have_newlines(after)) {\n                var before = command.substring(0, position);\n                var match = after.match(/^[^\\n]*\\n/);\n                if (match) {\n                    var new_pos = col + match[0].length;\n                    if (!have_newlines(before)) {\n                        new_pos += prompt_len;\n                    }\n                    self.position(new_pos, true);\n                }\n                return false;\n            } else {\n                return next_history();\n            }\n        }\n        // -------------------------------------------------------------------------------\n        function backspace_key() {\n            if (reverse_search) {\n                rev_search_str = rev_search_str.slice(0, -1);\n                draw_reverse_prompt();\n            } else if (command !== '' && position > 0) {\n                self['delete'](-1);\n            }\n            // for next input after naitve backspace\n            // we need timeout because we don't want it to trigger\n            // for current input but next one\n            self.oneTime(1, function() {\n                no_keydown = true;\n            });\n        }\n        // -------------------------------------------------------------------------------\n        function left() {\n            if (position > 0) {\n                self.position(-1, true);\n            }\n        }\n        // -------------------------------------------------------------------------------\n        function right() {\n            if (position < bare_text(command).length) {\n                self.position(1, true);\n            }\n            return false;\n        }\n        // -------------------------------------------------------------------------------\n        function home(line) {\n            function home() {\n                self.position(0);\n            }\n            if (line) {\n                return function() {\n                    if (command.match(/\\n/)) {\n                        var string = command.substring(0, self.position());\n                        self.position(string.lastIndexOf('\\n') + 1);\n                    } else {\n                        home();\n                    }\n                };\n            } else {\n                return home;\n            }\n        }\n        // -------------------------------------------------------------------------------\n        function end(line) {\n            function end() {\n                self.position(text(command).length);\n            }\n            if (line) {\n                return function() {\n                    if (command.match(/\\n/)) {\n                        var lines = command.split('\\n');\n                        var pos = self.position();\n                        var sum = 0;\n                        for (var i = 0; i < lines.length; ++i) {\n                            sum += lines[i].length;\n                            if (sum > pos) {\n                                self.position(sum + i);\n                                return;\n                            }\n                        }\n                    }\n                    end();\n                };\n            } else {\n                return end;\n            }\n        }\n        // -------------------------------------------------------------------------------\n        function mobile_focus() {\n            //if (is_touch) {\n            var focus = clip.is(':focus');\n            if (enabled) {\n                if (!focus) {\n                    //clip.trigger('focus', [true]);\n                }\n                self.oneTime(10, function() {\n                    if (!clip.is(':focus') && enabled) {\n                        clip.trigger('focus', [true]);\n                    }\n                });\n            } else if (focus && (is_mobile || !enabled)) {\n                clip.trigger('blur', [true]);\n            }\n        }\n        // -------------------------------------------------------------------------------\n        // fix for .cursor span animation that should only be applied when\n        // animation is equal to terminal-blink\n        // -------------------------------------------------------------------------------\n        function fix_cursor() {\n            if (animation_supported) {\n                var style = window.getComputedStyle(cursor[0]);\n                var animationName = style.getPropertyValue('--animation');\n                animationName = animationName.replace(/^\\s*|\\s*$/g, '');\n                var _class = self.attr('class');\n                if (_class.match(/-animation/)) {\n                    _class = _class.replace(/[a-z]+-animation/g, '');\n                }\n                if (animationName && !animationName.match(/blink/)) {\n                    var className = animationName.replace(/terminal-/, '') + '-animation';\n                    if (!_class.match(className)) {\n                        _class += ' ' + className;\n                    }\n                }\n                _class = _class.replace(/\\s+/g, ' ');\n                if (_class !== self.attr('class').replace(/\\s+/g, ' ')) {\n                    self.attr('class', _class);\n                }\n            }\n        }\n        // -------------------------------------------------------------------------------\n        // on mobile you can't delete character if input is empty (event\n        // will not fire) so we fake text entry, we could just put dummy\n        // data but we put real command and position\n        // -------------------------------------------------------------------------------\n        function fix_textarea(position_only) {\n            if (!self.isenabled()) {\n                return;\n            }\n            // delay worked while experimenting\n            self.oneTime(10, function() {\n                // we use space before command to show select all context menu\n                // idea taken from CodeMirror\n                if (!is_mobile && clip.val() !== command && !position_only) {\n                    clip.val(' ' + command);\n                }\n                if (enabled) {\n                    self.oneTime(10, function() {\n                        try {\n                            // we check first to improve performance\n                            if (!is_mobile && clip.caret() !== position + 1) {\n                                clip.caret(position + 1);\n                            }\n                        } catch (e) {\n                            // firefox throw NS_ERROR_FAILURE ignore\n                        }\n                    });\n                }\n            });\n        }\n        // -------------------------------------------------------------------------------\n        // terminal animation don't work on android because they animate\n        // 2 properties\n        // -------------------------------------------------------------------------------\n        if (animation_supported && !is_android) {\n            animation = function(toggle) {\n                if (toggle) {\n                    cursor.addClass('cmd-blink');\n                } else {\n                    cursor.removeClass('cmd-blink');\n                }\n            };\n            restart_animation = function() {\n                var new_cursor = cursor.clone();\n                new_cursor.insertBefore(cursor);\n                cursor.remove();\n                cursor = new_cursor;\n            };\n        } else {\n            var animating = false;\n            animation = function(toggle) {\n                if (toggle && !animating) {\n                    animating = true;\n                    cursor.addClass('cmd-inverted cmd-blink');\n                    self.everyTime(500, 'blink', blink);\n                } else if (animating && !toggle) {\n                    animating = false;\n                    self.stopTime('blink', blink);\n                    cursor.removeClass('cmd-inverted cmd-blink');\n                }\n            };\n            restart_animation = function() {\n                animation(false);\n                animation(true);\n            };\n        }\n        // ---------------------------------------------------------------------\n        // :: Blinking cursor function\n        // ---------------------------------------------------------------------\n        function blink() {\n            cursor.toggleClass('cmd-inverted');\n        }\n        // ---------------------------------------------------------------------\n        // :: Set prompt for reverse search\n        // ---------------------------------------------------------------------\n        function draw_reverse_prompt() {\n            prompt = '(reverse-i-search)`' + rev_search_str + \"': \";\n            draw_prompt();\n        }\n        // ---------------------------------------------------------------------\n        // :: Disable reverse search\n        // ---------------------------------------------------------------------\n        function clear_reverse_state() {\n            prompt = backup_prompt;\n            reverse_search = false;\n            reverse_search_position = null;\n            rev_search_str = '';\n        }\n        // ---------------------------------------------------------------------\n        // :: Search through command line history. If next is not defined or\n        // :: false it searches for the first item from the end. If true it\n        // :: search for the next item\n        // ---------------------------------------------------------------------\n        function reverse_history_search(next) {\n            var history_data = history.data();\n            var regex, save_string;\n            var len = history_data.length;\n            if (next && reverse_search_position > 0) {\n                len -= reverse_search_position;\n            }\n            if (rev_search_str.length > 0) {\n                for (var j = rev_search_str.length; j > 0; j--) {\n                    save_string = $.terminal.escape_regex(rev_search_str.slice(0, j));\n                    if (settings.caseSensitiveSearch) {\n                        regex = new RegExp(save_string);\n                    } else {\n                        regex = new RegExp(save_string, 'i');\n                    }\n                    for (var i = len; i--;) {\n                        if (regex.test(history_data[i])) {\n                            reverse_search_position = history_data.length - i;\n                            self.position(history_data[i].indexOf(save_string));\n                            self.set(history_data[i], true);\n                            redraw();\n                            if (rev_search_str.length !== j) {\n                                rev_search_str = rev_search_str.slice(0, j);\n                                draw_reverse_prompt();\n                            }\n                            return;\n                        }\n                    }\n                }\n            }\n            rev_search_str = ''; // clear if not found any\n        }\n        // ---------------------------------------------------------------------\n        // :: calculate width of hte character\n        // ---------------------------------------------------------------------\n        function get_char_width() {\n            var $prompt = self.find('.cmd-prompt');\n            var html = $prompt.html();\n            $prompt.html('<span>&nbsp;</span>');\n            var width = $prompt.find('span')[0].getBoundingClientRect().width;\n            $prompt.html(html);\n            return width;\n        }\n        // ---------------------------------------------------------------------\n        // :: return number of characters in command line\n        // ---------------------------------------------------------------------\n        function get_num_chars(char_width) {\n            var width = self.width();\n            return Math.floor(width / char_width);\n        }\n        // ---------------------------------------------------------------------\n        // :: Split String that fit into command line where first line need to\n        // :: fit next to prompt (need to have less characters)\n        // ---------------------------------------------------------------------\n        function get_splitted_command_line(string) {\n            function split(string) {\n                return $.terminal.split_equal(string, num_chars);\n            }\n            function skip_empty(array) {\n                // we remove lines that are leftovers after adding space at the end\n                return array.filter(function(line) {\n                    return !$.terminal.strip(line).match(/^ $/);\n                });\n            }\n            var line = prompt_node.find('.cmd-line');\n            var prompt;\n            if (line.length) {\n                prompt = line.nextUntil('.cmd-line').text();\n            } else {\n                prompt = prompt_node.text();\n            }\n            prompt = $.terminal.escape_brackets(prompt);\n            var re = new RegExp('^' + $.terminal.escape_regex(prompt));\n            var array;\n            if (string.match(/\\n/)) {\n                var tmp = string.split('\\n');\n                var first_len = num_chars - prompt_len - 1;\n                for (var i = 0; i < tmp.length - 1; ++i) {\n                    tmp[i] += line_marker;\n                }\n                // split first line\n                if (strlen(tmp[0]) > first_len) {\n                    array = split(prompt + tmp[0]);\n                    array[0] = array[0].replace(re, '');\n                    array = skip_empty(array);\n                } else {\n                    array = [tmp[0]];\n                }\n                // process rest of the lines\n                for (i = 1; i < tmp.length; ++i) {\n                    if (strlen(tmp[i]) > num_chars) {\n                        var splitted = split(tmp[i]);\n                        if (i < tmp.length - 1) {\n                            splitted = skip_empty(splitted);\n                        }\n                        array = array.concat(splitted);\n                    } else {\n                        array.push(tmp[i]);\n                    }\n                }\n            } else {\n                array = split(prompt + string, num_chars);\n                array[0] = array[0].replace(re, '');\n            }\n            // fix issue with cursor that was cut off #379\n            if (array.length > 1 && array[array.length - 1].length === num_chars) {\n                array.push('');\n            }\n            return array;\n        }\n        // ---------------------------------------------------------------------\n        // :: use custom formatting\n        // ---------------------------------------------------------------------\n        function formatting(string, skip_formatted_position) {\n            // we don't want to format command when user type formatting in\n            try {\n                string = $.terminal.escape_formatting(string);\n                var format_options = $.extend({}, settings, {\n                    unixFormattingEscapeBrackets: true,\n                    position: position\n                });\n                var formatted = $.terminal.apply_formatters(string, format_options);\n                var output = $.terminal.normalize(formatted[0]);\n                var max = $.terminal.length(output);\n                if (!skip_formatted_position) {\n                    formatted_position = formatted[1];\n                    // fix issue with nested formatting where max length\n                    // is checked before nested_formatting flatten formatting\n                    if (formatted_position > max) {\n                        formatted_position = max;\n                    }\n                }\n                output = $.terminal.normalize(output);\n                return output;\n            } catch (e) {\n                alert_exception('[Formatting]', e.stack);\n                return string;\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: format and encode the string\n        // ---------------------------------------------------------------------\n        function format(string, before) {\n            //string = $.terminal.normalize(string);\n            var encoded = $.terminal.encode(wrap(string), {\n                tabs: settings.tabs,\n                before: before\n            });\n            string = $.terminal.format(encoded, {\n                char_width: settings.char_width,\n                allowedAttributes: settings.allowedAttributes || []\n            });\n            var re = /(<span[^>]+data-text[^>]+>)(.*?)(<\\/span>)/g;\n            return string.replace(re, '$1<span>$2</span>$3');\n        }\n        // ---------------------------------------------------------------------\n        // :: function create new string with all characters in it's own\n        // :: formatting - it will only have style if the input is formatting\n        // :: this function is not very usefull so it's not in $.terminal\n        // ---------------------------------------------------------------------\n        function wrap(string) {\n            return $.terminal.partition(string).join('');\n        }\n        // ---------------------------------------------------------------------\n        // :: shortcut helpers\n        // ---------------------------------------------------------------------\n        function length(str, raw) {\n            return $.terminal.length(str, raw);\n        }\n        // ---------------------------------------------------------------------\n        function substring(str, start, end) {\n            return $.terminal.substring(str, start, end);\n        }\n        // ---------------------------------------------------------------------\n        // :: Function that displays the command line. Split long lines and\n        // :: place cursor in the right place\n        // ---------------------------------------------------------------------\n        var redraw = (function() {\n            var before = cursor.prev();\n            var after = cursor.next();\n            var cursor_line = cursor.parent();\n            // -----------------------------------------------------------------\n            // :: Draw line with the cursor\n            // -----------------------------------------------------------------\n            function draw_cursor_line(string, options) {\n                var end_line = string.match(line_marker_re);\n                if (end_line) {\n                    string = string.replace(line_marker_re, ' ');\n                }\n                var cursor_end_line = false;\n                var settings = $.extend({\n                    prompt: '',\n                    last: false\n                }, options);\n                var position = settings.position;\n                var len = length(string);\n                var prompt = settings.prompt;\n                if (ch_unit_bug) {\n                    cursor.width(char_width);\n                }\n                var c;\n                if (position === len) {\n                    before.html(format(string));\n                    cursor.html('<span><span>&nbsp;</span></span>');\n                    after.html('');\n                } else if (position === 0) {\n                    before.html('');\n                    c = substring(string, 0, 1);\n                    cursor.html(format(c));\n                    after.html(format(substring(string, 1), prompt + c));\n                } else {\n                    var before_str = $.terminal.substring(string, 0, position);\n                    before.html(format(before_str, prompt));\n                    c = substring(string, position, position + 1);\n                    var c_before = (prompt + before_str).replace(/^.*\\t/, '');\n                    cursor.html(format(c, c_before));\n                    if (position === len - 1) {\n                        cursor_end_line = true;\n                        after.html('');\n                    } else {\n                        if (c.match(/\\t/)) {\n                            c_before = '';\n                        } else {\n                            c_before += c;\n                        }\n                        after.html(format(substring(string, position + 1), c_before));\n                    }\n                }\n                cursor.toggleClass('cmd-end-line', cursor_end_line);\n                // fix for animation when changing --animation dynamically\n                fix_cursor();\n                var cursor_len = $.terminal.length(cursor.text());\n                if (cursor_len > 1) {\n                    var node = cursor.find('[data-text]')[0];\n                    node.style.setProperty('--length', cursor_len);\n                }\n                // synchronize css animations (it's not that important because if user\n                // will change animation she should disable animation on span, but it\n                // looks nicer until she disable that inner animation)\n                restart_animation();\n            }\n            function div(string, before) {\n                var end_line = string.match(line_marker_re);\n                var result = '<div role=\"presentation\" aria-hidden=\"true\"';\n                if (end_line) {\n                    string = string.replace(line_marker_re, ' ');\n                    result += ' class=\"cmd-end-line\"';\n                }\n                result += '>' + format(string, before || '') + '</div>';\n                return result;\n            }\n            // -----------------------------------------------------------------\n            // :: Display lines after the cursor\n            // -----------------------------------------------------------------\n            function lines_after(lines) {\n                var last_ins = cursor_line;\n                $.each(lines, function(i, line) {\n                    last_ins = $(div(line)).insertAfter(last_ins);\n                });\n            }\n            // -----------------------------------------------------------------\n            // :: Display lines before the cursor\n            // -----------------------------------------------------------------\n            function lines_before(lines) {\n                $.each(lines, function(i, line) {\n                    cursor_line.before(div(line, i === 0 ? prompt_last_line : ''));\n                });\n            }\n            // -----------------------------------------------------------------\n            // :: Redraw function\n            // -----------------------------------------------------------------\n            return function() {\n                var string;\n                switch (typeof settings.mask) {\n                    case 'boolean':\n                        string = settings.mask ? command.replace(/./g, '*') : command;\n                        break;\n                    case 'string':\n                        string = command.replace(/./g, settings.mask);\n                        break;\n                }\n                var formatted = formatting(string);\n                var pos;\n                if (length(formatted) === text(string).length) {\n                    pos = position;\n                } else {\n                    pos = formatted_position;\n                }\n                var i;\n                wrapper.css('visibility', 'hidden');\n                wrapper.find('div:not(.cmd-cursor-line)').remove();\n                before.html('');\n                // long line\n                if (strlen(text(formatted)) > num_chars - prompt_len - 1 ||\n                    formatted.match(/\\n/)) {\n                    var tabs = formatted.match(/\\t/g);\n                    var original_string = formatted;\n                    //quick tabulation hack\n                    if (tabs) {\n                        formatted = formatted.replace(/\\t/g, '\\x00\\x00\\x00\\x00');\n                    }\n                    var array = get_splitted_command_line(formatted);\n                    if (tabs) {\n                        array = $.map(array, function(line) {\n                            return line.replace(/\\x00\\x00\\x00\\x00/g, '\\t');\n                        });\n                    }\n                    var first_len = length(array[0]);\n                    //cursor in first line\n                    if (first_len === 0 && array.length === 1) {\n                        // skip empty line\n                    } else if (pos < first_len) {\n                        draw_cursor_line(array[0], {\n                            length: array.length,\n                            position: pos,\n                            prompt: prompt_last_line\n                        });\n                        lines_after(array.slice(1));\n                    } else if (pos === first_len) {\n                        // first char acter of second line\n                        cursor_line.before(div(array[0], prompt_last_line));\n                        draw_cursor_line(array[1] || '', {\n                            length: array.length,\n                            position: 0,\n                            last: array.length <= 2\n                        });\n                        if (array.length > 2) {\n                            lines_after(array.slice(2));\n                        }\n                    } else {\n                        var last = array.slice(-1)[0];\n                        var len = length(original_string);\n                        var from_last = len - pos;\n                        var last_len = length(last);\n                        var new_pos = 0;\n                        if (from_last === -1) {\n                            from_last = 0;\n                        }\n                        if (from_last <= last_len) { // in last line\n                            lines_before(array.slice(0, -1));\n                            if (last_len === from_last) {\n                                new_pos = 0;\n                            } else {\n                                new_pos = last_len - from_last;\n                            }\n                            draw_cursor_line(last, {\n                                length: array.length,\n                                position: new_pos,\n                                last: true\n                            });\n                        } else {\n                            // more lines, cursor in the middle\n                            var line_index;\n                            var current;\n                            new_pos = pos;\n                            for (i = 0; i < array.length; ++i) {\n                                var current_len = $.terminal.length(array[i]);\n                                if (new_pos > current_len) {\n                                    new_pos -= current_len;\n                                } else {\n                                    break;\n                                }\n                            }\n                            current = array[i];\n                            line_index = i;\n                            // cursor on first character in line\n                            if (new_pos === length(current)) {\n                                new_pos = 0;\n                                current = array[++line_index];\n                                if (current === undefined) {\n                                    //should never happen\n                                    var msg = $.terminal.defaults.strings.redrawError;\n                                    throw new Error(msg);\n                                }\n                            }\n                            draw_cursor_line(current, {\n                                length: array.length,\n                                position: new_pos\n                            });\n                            lines_before(array.slice(0, line_index));\n                            lines_after(array.slice(line_index + 1));\n                        }\n                    }\n                    self.find('.cmd-cursor-line ~ div:last-of-type')\n                        .append('<span></span>');\n                } else if (formatted === '') {\n                    before.html('');\n                    cursor.html('<span><span>&nbsp;</span></span>');\n                    after.html('');\n                } else {\n                    draw_cursor_line(formatted, {\n                        length: 1,\n                        position: pos\n                    });\n                }\n                var in_line = cursor_line.prevUntil('.cmd-prompt').length;\n                if (is_css_variables_supported) {\n                    self[0].style.setProperty('--cursor-line', in_line);\n                } else {\n                    clip.css('top', in_line * 14 + 'px');\n                }\n                wrapper.css('visibility', '');\n            };\n        })();\n        // ---------------------------------------------------------------------\n        // :: find position that match display position for commands that\n        // :: change length by formatters\n        // ---------------------------------------------------------------------\n        var find_position = (function() {\n            function make_guess(string, position) {\n                var opts = $.extend({}, settings, {\n                    position: position\n                });\n                return $.terminal.apply_formatters(string, opts)[1];\n            }\n            function cmp(search_pos, pos, string) {\n                var guess = make_guess(string, pos);\n                if (guess === search_pos) {\n                    var next_guess = make_guess(string, pos + 1);\n                    if (next_guess > search_pos) {\n                        return 0;\n                    }\n                    return 1;\n                } else if (guess < search_pos) {\n                    return 1;\n                } else {\n                    return -1;\n                }\n            }\n            return function(string, formatted_position) {\n                if (formatted_position === 0) {\n                    return 0;\n                }\n                string = bare_text(string);\n                var codepoint_len = string.length;\n                var str = $.terminal.escape_brackets(command);\n                var pos = binary_search(0, codepoint_len, formatted_position, cmp, [str]);\n                var chars = $.terminal.split_characters(string);\n                if (codepoint_len > chars.length) {\n                    var len = 0;\n                    for (var i = 0; i < chars.length; ++i) {\n                        len += chars[i].length;\n                        if (len >= pos) {\n                            return len;\n                        }\n                    }\n                }\n                return pos;\n            };\n        })();\n        // ---------------------------------------------------------------------\n        // :: Draw prompt that can be a function or a string\n        // ---------------------------------------------------------------------\n        var prev_prompt_data;\n        var draw_prompt = (function() {\n            function set(prompt) {\n                prompt = $.terminal.apply_formatters(prompt, {});\n                prompt = $.terminal.normalize(prompt);\n                prompt = crlf(prompt);\n                last_rendered_prompt = prompt;\n                var lines = $.terminal.split_equal(prompt, num_chars).map(function(line) {\n                    if (!$.terminal.have_formatting(line)) {\n                        return '[[;;]' + line + ']';\n                    }\n                    return line;\n                });\n                var options = {\n                    char_width: settings.char_width\n                };\n                prompt_last_line = lines[lines.length - 1];\n                var encoded_last_line = $.terminal.encode(lines[lines.length - 1], {\n                    tabs: settings.tabs\n                });\n                var last_line = $.terminal.format(encoded_last_line, options);\n                var formatted = lines.slice(0, -1).map(function(line) {\n                    line = $.terminal.encode(line, {\n                        tabs: settings.tabs\n                    });\n                    return '<span class=\"cmd-line\">' +\n                        $.terminal.format(line, options) +\n                        '</span>';\n                }).concat([last_line]).join('\\n');\n                // update prompt if changed\n                if (prompt_node.html() !== formatted) {\n                    prompt_node.html(formatted);\n                    prompt_len = strlen(text(encoded_last_line));\n                }\n            }\n            return function() {\n                // the data is used as cancelable reference because we have ref\n                // data object that is hold in closure and we remove `set` function\n                // so previous call to function prompt will be ignored\n                if (prev_prompt_data && prev_prompt_data.set) {\n                    prev_prompt_data.set = $.noop;\n                    // remove reference for garbage collector\n                    prev_prompt_data = null;\n                }\n                switch (typeof prompt) {\n                    case 'string':\n                        set(prompt);\n                        break;\n                    case 'function':\n                        var data = prev_prompt_data = {\n                            set: set\n                        };\n                        var ret = prompt.call(self, function(string) {\n                            data.set(string);\n                        });\n                        if (ret && ret.then) {\n                            ret.then(data.set).catch(function(e) {\n                                var prompt = $.terminal.escape_brackets('[ERR]> ');\n                                data.set('[[;red;]' + prompt + ']');\n                                alert_exception('Prompt', e);\n                            });\n                        }\n                        break;\n                }\n            };\n        })();\n        // ---------------------------------------------------------------------\n        function fire_change_command() {\n            if (is_function(settings.onCommandChange)) {\n                settings.onCommandChange.call(self, command);\n            }\n        }\n        // ---------------------------------------------------------------------\n        function clean(string) {\n            return string.replace(/((?!\\\\).)\\\\(?:&#93;|])/g, '$1&#93;');\n        }\n        // ---------------------------------------------------------------------\n        // :: Command Line Methods\n        // ---------------------------------------------------------------------\n        $.extend(self, {\n            option: function(name, value) {\n                if (typeof value === 'undefined') {\n                    return settings[name];\n                } else {\n                    settings[name] = value;\n                }\n                return self;\n            },\n            name: function(string) {\n                if (string !== undefined) {\n                    name = string;\n                    var enabled = history && history.enabled() || !history;\n                    history = new History(\n                        name,\n                        settings.historySize,\n                        settings.history === 'memory'\n                    );\n                    // disable new history if old was disabled\n                    if (!enabled) {\n                        history.disable();\n                    }\n                    return self;\n                } else {\n                    return name;\n                }\n            },\n            purge: function() {\n                history.clear();\n                return self;\n            },\n            history: function() {\n                return history;\n            },\n            'delete': function(n, stay) {\n                var removed, string;\n                if (n === 0) {\n                    return \"\";\n                } else if (n < 0) {\n                    if (position > 0) {\n                        // this may look weird but if n is negative we need\n                        // to use +\n                        removed = command.slice(0, position).slice(n);\n                        string = bare_text(command);\n                        string = string.slice(0, position + n) +\n                            string.slice(position, string.length);\n                        if (!stay) {\n                            self.position(position + n);\n                        }\n                    }\n                } else if (command !== '') {\n                    string = text(command);\n                    if (position < string.length) {\n                        removed = string.slice(position).slice(0, n);\n                        string = string.slice(0, position) +\n                            string.slice(position + n, string.length);\n                    }\n                }\n                if (removed) {\n                    command = clean(string);\n                }\n                redraw();\n                fix_textarea();\n                fire_change_command();\n                return removed;\n            },\n            set: function(string, stay, silent) {\n                if (string !== undefined) {\n                    command = clean(string);\n                    if (!stay) {\n                        self.position(bare_text(command).length);\n                    }\n                    redraw();\n                    fix_textarea();\n                    if (!silent) {\n                        fire_change_command();\n                    }\n                }\n                return self;\n            },\n            keymap: function(new_keymap, value) {\n                function wrap(key, fn) {\n                    var original = default_keymap[key];\n                    if (is_function(original)) {\n                        original = original.bind(self);\n                    }\n                    return function(e) {\n                        // new keymap function will get default as 2nd argument\n                        return fn.call(self, e, original);\n                    };\n                }\n                if (typeof new_keymap === 'undefined') {\n                    return keymap;\n                } else if (typeof new_keymap === 'string') {\n                    if (typeof value === 'undefined') {\n                        if (keymap[new_keymap]) {\n                            return keymap[new_keymap];\n                        } else if (default_keymap[new_keymap]) {\n                            return default_keymap[new_keymap];\n                        }\n                    } else {\n                        keymap[new_keymap] = wrap(new_keymap, value);\n                    }\n                } else {\n                    keymap = $.extend(\n                        {},\n                        keymap ? keymap : default_keymap,\n                        $.omap(new_keymap || {}, wrap)\n                    );\n                    return self;\n                }\n            },\n            insert: function(string, stay) {\n                var bare_command = bare_text(command);\n                var len = bare_text(string).length;\n                if (position === bare_command.length) {\n                    string = bare_command + string;\n                } else if (position === 0) {\n                    string = string + bare_command;\n                } else {\n                    string = bare_command.slice(0, position) +\n                        string + bare_command.slice(position);\n                }\n                command = clean(string);\n                if (!stay) {\n                    self.position(len, true, true);\n                }\n                fix_textarea();\n                redraw();\n                fire_change_command();\n                return self;\n            },\n            get: function() {\n                return command;\n            },\n            commands: function(commands) {\n                if (commands) {\n                    settings.commands = commands;\n                    return self;\n                } else {\n                    return commands;\n                }\n            },\n            destroy: function() {\n                doc.unbind('keypress.cmd', keypress_event);\n                doc.unbind('keydown.cmd', keydown_event);\n                doc.unbind('input.cmd', input_event);\n                self.stopTime('blink', blink);\n                self.find('.cmd-wrapper').remove();\n                self.find('.cmd-prompt, .cmd-clipboard').remove();\n                self.removeClass('cmd').removeData('cmd').off('.cmd');\n                return self;\n            },\n            column: function(include_prompt) {\n                var before = command.substring(0, position);\n                if (position === 0 || !command.length) {\n                    return 0;\n                }\n                var re = /\\n?([^\\n]*)$/;\n                var match = before.match(re);\n                var col = match[1].length;\n                if (!have_newlines(before) && include_prompt) {\n                    col += prompt_len;\n                }\n                return col;\n            },\n            prompt: function(user_prompt) {\n                if (user_prompt === true) {\n                    return last_rendered_prompt;\n                } else if (user_prompt === undefined) {\n                    return prompt;\n                } else {\n                    if (typeof user_prompt === 'string' ||\n                        typeof user_prompt === 'function') {\n                        prompt = user_prompt;\n                    } else {\n                        throw new Error('prompt must be a function or string');\n                    }\n                    draw_prompt();\n                    // we could check if command is longer then numchars-new\n                    // prompt\n                    redraw();\n                    return self;\n                }\n            },\n            kill_text: function() {\n                return kill_text;\n            },\n            position: function(n, relative, silent) {\n                if (typeof n === 'number') {\n                    var pos = position;\n                    var len = bare_text(command).length;\n                    if (relative) {\n                        position += n;\n                    } else if (n < 0) {\n                        position = 0;\n                    } else if (n > len) {\n                        position = len;\n                    } else {\n                        position = n;\n                    }\n                    if (pos !== position && !silent) {\n                        redraw();\n                        if (is_function(settings.onPositionChange)) {\n                            settings.onPositionChange(position, formatted_position);\n                        }\n                        fix_textarea(true);\n                    }\n                    return self;\n                } else {\n                    return position;\n                }\n            },\n            refresh: function() {\n                draw_prompt();\n                redraw();\n                fix_textarea(true);\n                return self;\n            },\n            // if formatter change length of the strings (like emoji demo) we need to keep\n            // track of two different positions one for command and one for display\n            display_position: function(n, relative) {\n                if (n === undefined) {\n                    return formatted_position;\n                } else {\n                    // double escape\n                    var string = formatting($.terminal.escape_formatting(command), true);\n                    var len = length(string);\n                    var command_len = bare_text(command).length;\n                    var new_formatted_pos;\n                    if (relative) {\n                        new_formatted_pos = formatted_position + n;\n                    } else if (n > len) {\n                        new_formatted_pos = len;\n                    } else {\n                        new_formatted_pos = n;\n                    }\n                    if (text(string).length === length(command, true)) {\n                        formatted_position = new_formatted_pos;\n                        return self.position(new_formatted_pos);\n                    }\n                    if (len === new_formatted_pos) {\n                        formatted_position = new_formatted_pos;\n                        return self.position(command_len);\n                    }\n                    var pos = find_position(command, new_formatted_pos);\n                    if (pos !== -1) {\n                        formatted_position = new_formatted_pos;\n                        self.position(pos);\n                    }\n                    return self;\n                }\n            },\n            visible: (function() {\n                var visible = self.visible;\n                return function() {\n                    visible.apply(self, []);\n                    redraw();\n                    draw_prompt();\n                    return self;\n                };\n            })(),\n            show: (function() {\n                var show = self.show;\n                return function() {\n                    show.apply(self, []);\n                    redraw();\n                    draw_prompt();\n                    return self;\n                };\n            })(),\n            resize: function(num) {\n                char_width = get_char_width();\n                var new_num_chars;\n                if (typeof num === 'number') {\n                    new_num_chars = num;\n                } else {\n                    new_num_chars = get_num_chars(char_width);\n                }\n                if (num_chars !== new_num_chars || arguments[0] === true) {\n                    num_chars = new_num_chars;\n                    redraw();\n                    draw_prompt();\n                }\n                return self;\n            },\n            invoke_key: function(shortcut) {\n                var keys = shortcut.toUpperCase().split('+');\n                var key = keys.pop();\n                var ctrl = keys.indexOf('CTRL') !== -1;\n                var shift = keys.indexOf('SHIFT') !== -1;\n                var alt = keys.indexOf('ALT') !== -1;\n                var meta = keys.indexOf('META') !== -1;\n                var e = $.Event(\"keydown\", {\n                    ctrlKey: ctrl,\n                    shiftKey: shift,\n                    altKey: alt,\n                    metaKey: meta,\n                    which: reversed_keycodes[key],\n                    key: key\n                });\n                var doc = $(document.documentElement || window);\n                doc.trigger(e);\n                e = $.Event(\"keypress\");\n                e.key = key;\n                e.which = e.keyCode = 0;\n                doc.trigger(e);\n                return self;\n            },\n            enable: function(silent) {\n                if (!enabled) {\n                    enabled = true;\n                    self.addClass('enabled');\n                    try {\n                        if (clip.is(':not(:focus)')) {\n                            clip.focus();\n                        }\n                        clip.caret(position);\n                    } catch (e) {\n                        // firefox throw NS_ERROR_FAILURE - ignore\n                    }\n                    animation(true);\n                    if (!silent && is_function(prompt)) {\n                        draw_prompt();\n                    }\n                    fix_cursor();\n                    fix_textarea();\n                }\n                mobile_focus();\n                return self;\n            },\n            isenabled: function() {\n                return enabled;\n            },\n            disable: function(focus) {\n                enabled = false;\n                self.removeClass('enabled');\n                animation(false);\n                if (!focus) {\n                    mobile_focus();\n                }\n                return self;\n            },\n            mask: function(new_mask) {\n                if (typeof new_mask === 'undefined') {\n                    return settings.mask;\n                } else {\n                    settings.mask = new_mask;\n                    redraw();\n                    return self;\n                }\n            }\n        });\n        // ---------------------------------------------------------------------\n        // :: INIT\n        // ---------------------------------------------------------------------\n        self.name(settings.name || settings.prompt || '');\n        if (settings.prompt !== false) {\n            prompt = settings.prompt;\n            draw_prompt();\n        }\n        if (settings.enabled === true) {\n            self.enable();\n        }\n        char_width = get_char_width();\n        num_chars = get_num_chars(char_width);\n        if (!settings.history) {\n            history.disable();\n        }\n        var first_up_history = true;\n        // skip_keypress - hack for Android that was inserting characters on\n        // backspace\n        var skip_keypress = false;\n        var dead_key = false;\n        var single_key = false;\n        var no_keypress = false;\n        var no_key = false;\n        var no_keydown = true;\n        var backspace = false;\n        var process = false;\n        var hold = false;\n        var hold_pause = false;\n        var skip_insert;\n        // we hold text before keydown to fix backspace for Android/Chrome/SwiftKey\n        // keyboard that generate keycode 229 for all keys #296\n        var prev_command = '';\n        var prev_key;\n        // ---------------------------------------------------------------------\n        // :: Keydown Event Handler\n        // ---------------------------------------------------------------------\n        function is_backspace(e) {\n            return e.key.toUpperCase() === 'BACKSPACE' || e.which === 8;\n        }\n        // ---------------------------------------------------------------------\n        function is_single(e) {\n            return e.key && e.key.length === 1 && !e.ctrlKey;\n        }\n        // ---------------------------------------------------------------------\n        function is_delay_key(key) {\n            var specials = ['HOLD+SHIFT+BACKSPACE', 'HOLD+BACKSPACE'];\n            return specials.indexOf(key) !== -1 && settings.mobileDelete ||\n                settings.repeatTimeoutKeys.indexOf(key) !== -1;\n        }\n        // ---------------------------------------------------------------------\n        function clear_reverse_search_key(e) {\n            // arrows / Home / End / ENTER\n            return e.which === 35 || e.which === 36 ||\n                e.which === 37 || e.which === 38 ||\n                e.which === 39 || e.which === 40 ||\n                e.which === 13 || e.which === 27;\n        }\n        var skip_keydown = false;\n        // ---------------------------------------------------------------------\n        // function complexicity is 35 when adding this exception\n        // eslint-disable-next-line complexity\n        function keydown_event(e) {\n            debug('keydown \"' + e.key + '\" ' + e.fake + ' ' + e.which);\n            var result;\n            process = (e.key || '').toLowerCase() === 'process' || e.which === 0;\n            dead_key = no_keypress && single_key && !is_backspace(e);\n            // special keys don't trigger keypress fix #293\n            try {\n                if (!e.fake) {\n                    single_key = is_single(e);\n                    // chrome on android support key property but it's \"Unidentified\"\n                    no_key = String(e.key).toLowerCase() === 'unidentified';\n                    backspace = is_backspace(e);\n                }\n            } catch (exception) {}\n            // keydown created in input will have text already inserted and we\n            // want text before input\n            if (e.key === \"Unidentified\") {\n                no_keydown = true;\n                // android swift keyboard have always which == 229 we will triger proper\n                // event in input with e.fake == true\n                return;\n            }\n            if (!e.fake) {\n                no_keydown = false;\n            }\n            no_keypress = true;\n            // Meta+V did bind input but it didin't happen because terminal paste\n            // prevent native insert action\n            clip.off('input', paste);\n            var key = get_key(e);\n            if (is_function(settings.keydown)) {\n                e.key = ie_key_fix(e);\n                result = settings.keydown.call(self, e);\n                if (result !== undefined) {\n                    //skip_keypress = true;\n                    if (!result) {\n                        skip_insert = true;\n                    }\n                    return result;\n                }\n            }\n            if (key !== prev_key) {\n                clear_hold();\n            }\n            // CTRL+C hanlding is only exception of cmd aware terminal logic\n            // cmd need to call CTRL+C keymap when terminal is not enabled\n            if (enabled || (key === 'CTRL+C' && is_terminal_selected(self))) {\n                if (hold) {\n                    prev_key = key;\n                    key = 'HOLD+' + key;\n                    if (hold_pause) {\n                        return;\n                    }\n                    if (settings.holdRepeatTimeout > 0 && is_delay_key(key)) {\n                        hold_pause = true;\n                        self.oneTime(settings.holdRepeatTimeout, 'delay', function() {\n                            hold_pause = false;\n                        });\n                    }\n                } else {\n                    self.oneTime(settings.holdTimeout, 'hold', function() {\n                        hold = true;\n                    });\n                    prev_key = key;\n                }\n                // if e.fake ignore of space is handled in input and next keydown\n                // is not triggered this is just in case code since on Android\n                // keydown is not triggered only input so event is always fake on Android\n                if (!e.fake && is_android) {\n                    if (skip_keydown) {\n                        clear_hold();\n                        skip_keydown = false;\n                        return false;\n                    }\n                    if (mobile_ignore_key(key)) {\n                        skip_keydown = true;\n                    } else if (mobile_ignore_key(prev_key)) {\n                        // just in case next key is different then space\n                        skip_keydown = false;\n                    }\n                }\n                restart_animation();\n                // CTRL+V don't fire keypress in IE11\n                skip_insert = ['CTRL+V', 'META+V'].indexOf(key) !== -1;\n                if (e.which !== 38 && !(e.which === 80 && e.ctrlKey)) {\n                    first_up_history = true;\n                }\n                if (reverse_search && clear_reverse_search_key(e)) {\n                    clear_reverse_state();\n                    draw_prompt();\n                    if (e.which === 27) { // ESC\n                        self.set('');\n                    }\n                    redraw();\n                    if (e.which === 13) {\n                        keydown_event.call(this, e);\n                    }\n                } else if (is_function(keymap[key])) {\n                    result = keymap[key](e);\n                    if (result === true) {\n                        return;\n                    }\n                    if (result !== undefined) {\n                        return result;\n                    }\n                } else if (e.altKey) {\n                    return;\n                } else {\n                    skip_keypress = false;\n                    return;\n                }\n                // this will prevent for instance backspace to go back one page\n                //skip_keypress = true;\n                //e.preventDefault();\n            }\n        }\n        function clear_hold() {\n            self.stopTime('hold');\n            self.stopTime('delay');\n            hold_pause = hold = false;\n        }\n        var doc = $(document.documentElement || window);\n        self.keymap(settings.keymap || {});\n        function keypress_event(e) {\n            debug('keypress \"' + e.key + '\" ' + e.fake);\n            clear_hold();\n            var result;\n            if (!e.fake) {\n                no_keypress = false;\n            }\n            if ((e.ctrlKey || e.metaKey) && !e.altKey) {\n                return;\n            }\n            if (skip_keypress) {\n                return;\n            }\n            if (is_function(settings.keypress)) {\n                result = settings.keypress.call(self, e);\n                if (result !== undefined) {\n                    if (!result) {\n                        skip_insert = true;\n                    }\n                    return result;\n                }\n            }\n            if (enabled) {\n                if (e.fake) {\n                    // event created in input, we prevent inserting text\n                    // in different interpreter when keydown called pop\n                    return;\n                }\n                // key polyfill is not correct for keypress\n                // https://github.com/cvan/keyboardevent-key-polyfill/issues/15\n                var key;\n                if (is_key_native) {\n                    key = e.key;\n                    // fixing IE inconsistency #362\n                    var normalized = key.toUpperCase();\n                    if (key_mapping[normalized]) {\n                        key = key_mapping[normalized];\n                    }\n                }\n                if (!key || no_key) {\n                    key = String.fromCharCode(e.which);\n                }\n                if ($.inArray(e.which, [13, 0, 8]) > -1) {\n                    if (e.keyCode === 123) { // for F12 which === 0\n                        return;\n                    }\n                    return false;\n                    // which === 100 - d\n                } else if (key && (!e.ctrlKey || (e.ctrlKey && e.ctrlKey)) &&\n                           (!(e.altKey && e.which === 100) || e.altKey) &&\n                           !dead_key) {\n                    // dead_key are handled by input event\n                    if (reverse_search) {\n                        rev_search_str += key;\n                        reverse_history_search();\n                        draw_reverse_prompt();\n                    } else if (key.length === 1) {\n                        self.insert(key);\n                    }\n                }\n            }\n        }\n        function event(type, chr, which) {\n            var event = $.Event(type);\n            event.which = which;\n            event.key = chr;\n            event.fake = true;\n            doc.trigger(event);\n        }\n        var skip_input = false;\n        function input_event() {\n            debug('input ' + no_keydown + ' || ' + process + ' ((' + no_keypress +\n                  ' || ' + dead_key + ') && !' + skip_insert + ' && (' + single_key +\n                  ' || ' + no_key + ') && !' + backspace + ')');\n            // correct for fake space used for select all context menu hack\n            var val = clip.val();\n            if (!is_mobile) {\n                val = val.replace(/^ /, '');\n            }\n            // Some Androids don't fire keypress - #39\n            // if there is dead_key we also need to grab real character #158\n            // Firefox/Android with google keyboard don't fire keydown and keyup #319\n            if ((no_keydown || process || ((no_keypress || dead_key) && !skip_insert &&\n                                          (single_key || no_key) && !backspace)) &&\n                val !== command) {\n                var pos = position;\n                // backspace is set in keydown if no keydown we need to get new one\n                if (no_keydown) {\n                    var cmd = prev_command;\n                    backspace = cmd.slice(0, cmd.length - 1).length === val.length;\n                }\n                if (skip_input) {\n                    skip_input = false;\n                    clip.val(command);\n                    return;\n                }\n                if (reverse_search) {\n                    rev_search_str = val;\n                    reverse_history_search();\n                    draw_reverse_prompt();\n                } else {\n                    var str = val.slice(position);\n                    if (str.length === 1 || backspace) {\n                        var chr = get_next_character(str);\n                        if (mobile_ignore_key(chr)) {\n                            skip_input = true;\n                        }\n                        // we trigger events so keypress and keydown callback work\n                        if (no_keydown) {\n                            var keycode;\n                            if (backspace) {\n                                keycode = 8;\n                            } else {\n                                keycode = str.toUpperCase().charCodeAt(0);\n                            }\n                            event('keydown', backspace ? 'Backspace' : str, keycode);\n                        }\n                        if (no_keypress && !backspace) {\n                            event('keypress', chr, str.charCodeAt(0));\n                        }\n                    }\n                    if (backspace) {\n                        prev_command = command;\n                        return;\n                    }\n                    // if user return false in keydown we don't want to insert text\n                    if (skip_insert) {\n                        skip_insert = false;\n                        return;\n                    }\n                    self.set(val);\n                }\n                if (backspace) {\n                    self.position(pos - 1);\n                } else {\n                    // user enter more then one character if click on complete word\n                    // on android\n                    self.position(pos + Math.abs(val.length - prev_command.length));\n                }\n            }\n            prev_command = command;\n            skip_insert = false;\n            no_keydown = true;\n        }\n        doc.bind('keypress.cmd', keypress_event);\n        doc.bind('keydown.cmd', keydown_event);\n        doc.bind('keyup.cmd', clear_hold);\n        doc.bind('input.cmd', input_event);\n        (function() {\n            var was_down = false;\n            var count = 0;\n            self.on('mousedown.cmd', function() {\n                was_down = true;\n            }).on('mouseup.cmd', function(e) {\n                function trigger() {\n                    var $target = $(e.target);\n                    var is_prompt = $target.is('.cmd-prompt');\n                    if (!is_prompt && down && get_selected_html() === '') {\n                        if (enabled) {\n                            if ($target.is('.cmd')) {\n                                self.position(text(command).length);\n                            } else {\n                                self.display_position(get_char_pos(e));\n                            }\n                        }\n                    }\n                    count = 0;\n                }\n                // we get button from event for testing normally it's on originalEvent\n                var button;\n                if (e.originalEvent === undefined) {\n                    button = e.button;\n                } else {\n                    button = e.originalEvent.button;\n                }\n                if (button === 0 && get_selected_html() === '') {\n                    var name = 'click_' + id;\n                    if (++count === 1) {\n                        var down = was_down;\n                        if (enabled) {\n                            if (settings.clickTimeout === 0) {\n                                trigger();\n                            } else {\n                                self.oneTime(settings.clickTimeout, name, trigger);\n                            }\n                        } else {\n                            count = 0;\n                        }\n                    } else {\n                        self.stopTime(name);\n                        count = 0;\n                    }\n                }\n                was_down = false;\n            });\n        })();\n        self.data('cmd', self);\n        if (!('KeyboardEvent' in window && 'key' in window.KeyboardEvent.prototype)) {\n            setTimeout(function() {\n                throw new Error('key event property not supported try https://github.' +\n                                'com/inexorabletash/polyfill/blob/master/keyboard.js');\n            }, 0);\n        }\n        return self;\n    }; // cmd plugin\n    // -------------------------------------------------------------------------\n    var strlen = (function() {\n        if (typeof wcwidth === 'undefined') {\n            return function(string) {\n                return $.terminal.length(string);\n            };\n        } else {\n            return wcwidth;\n        }\n    })();\n    // -------------------------------------------------------------------------\n    function count_selfclosing_formatting(string) {\n        var count = 0;\n        if ($.terminal.have_formatting(string)) {\n            var re = new RegExp(format_parts_re, 'i');\n            $.terminal.format_split(string).forEach(function(str) {\n                if ($.terminal.is_formatting(str)) {\n                    var m = str.match(re);\n                    if (m && m[1].match(/@/) && m[6] === '') {\n                        count++;\n                    }\n                }\n            });\n        }\n        return count;\n    }\n    // -------------------------------------------------------------------------\n    function bare_text(string) {\n        if (!string.match(/&/)) {\n            return string;\n        }\n        return $('<span>' + safe(string) + '</span>').text();\n    }\n    // -------------------------------------------------------------------------\n    function text(string) {\n        return bare_text($.terminal.strip(string));\n    }\n    // -------------------------------------------------------------------------\n    function safe(string) {\n        if (!string.match(/[<>&]/)) {\n            return string;\n        }\n        return string.replace(/&(?![^;]+;)/g, '&amp;')\n            .replace(/>/g, '&gt;').replace(/</g, '&lt;');\n    }\n    // -------------------------------------------------------------------------\n    function crlf(string) {\n        return string.replace(/\\r/g, '');\n    }\n    // -------------------------------------------------------------------------\n    function char_len(chr) {\n        return entity_re.test(chr) ? 1 : chr.length;\n    }\n    // -------------------------------------------------------------------------\n    // :: local function used in get_next_character to process single formatting\n    // -------------------------------------------------------------------------\n    /* TODO: remove before release 2.8.1 or 2.9.0\n    function process_single_formatter(string) {\n        return string.replace(format_full_re, function(_, formatting, text, br) {\n            return formatting + get_next_character(text) + br;\n        });\n    }\n    */\n    // -------------------------------------------------------------------------\n    // :: function that return character from beginning of the string\n    // :: counting emoji, suroggate pairs and combine characters\n    // -------------------------------------------------------------------------\n    function get_next_character(string) {\n        /*\n        // this is very slow and it's used in iterate formatting when not in formatting\n        if (false && $.terminal.have_formatting(string)) {\n            if ($.terminal.is_formatting(string)) {\n                return process_single_formatter(string);\n            } else {\n                $.terminal.format_split(string).map(function(string) {\n                    if ($.terminal.is_formatting(string)) {\n                        return process_single_formatter(string);\n                    }\n                    return get_next_character(string);\n                }).join('');\n            }\n        }\n        */\n        var match_entity = string.match(entity_re);\n        if (match_entity) {\n            return match_entity[1];\n        }\n        var match_emoji = string.match(emoji_re);\n        if (match_emoji) {\n            return match_emoji[1];\n        } else if (string.slice(0, 2).replace(astral_symbols_re, '_') === 1) {\n            if (string.slice(1).match(combine_chr_re)) {\n                return string.slice(0, 3);\n            }\n            return string.slice(0, 2);\n        } else {\n            var match_combo = string.match(combine_chr_re);\n            if (match_combo) {\n                return match_combo[1];\n            }\n            return string[0];\n        }\n    }\n    // -------------------------------------------------------------------------\n    // normalize position for counting emoji and extra chars\n    // -------------------------------------------------------------------------\n    function normalize_position(string, position) {\n        if (position === 0) {\n            return position;\n        }\n        string = $.terminal.strip(string);\n        var result = $.terminal.split_characters(string).reduce(function(acc, chr) {\n            if (typeof acc === 'number') {\n                return acc;\n            }\n            var length = acc.length + char_len(chr);\n            if (length >= position) {\n                return acc.position + 1;\n            }\n            return {\n                position: acc.position + 1,\n                length: length\n            };\n        }, {position: 0, length: 0});\n        if (typeof result === 'number') {\n            return result;\n        } else {\n            return result.position;\n        }\n    }\n    // -------------------------------------------------------------------------\n    function char_width_prop(len, options) {\n        if (is_ch_unit_supported) {\n            return 'width: ' + len + 'ch';\n        } else if (!is_css_variables_supported) {\n            if (options.char_width) {\n                return 'width: ' + (options.char_width * len) + 'px';\n            }\n        } else {\n            return '--length: ' + len;\n        }\n        return '';\n    }\n    // -------------------------------------------------------------------------\n    // options {char_width}\n    function extra_css(text, options) {\n        if (typeof wcwidth !== 'undefined') {\n            var bare = bare_text(text);\n            var len = strlen(bare);\n            if (len !== $.terminal.length(bare)) {\n                return char_width_prop(len, options);\n            }\n        }\n        return '';\n    }\n    // -------------------------------------------------------------------------\n    function wide_characters(text, options) {\n        if (typeof wcwidth !== 'undefined') {\n            var bare = bare_text(text);\n            var chars = $.terminal.split_characters(bare);\n            if (chars.length === 1) {\n                return text;\n            }\n            var specs = chars.map(function(chr) {\n                return {\n                    len: strlen(chr),\n                    chr: chr\n                };\n            }).reduce(function(arr, spec) {\n                var last = arr[arr.length - 1];\n                if (last) {\n                    if (last.len !== spec.len) {\n                        return arr.concat([{\n                            sum: spec.len,\n                            len: spec.len,\n                            specs: [spec]\n                        }]);\n                    } else {\n                        arr.pop();\n                        return arr.concat([{\n                            sum: last.sum + spec.len,\n                            len: last.len,\n                            specs: last.specs.concat(spec)\n                        }]);\n                    }\n                }\n                return [{\n                    sum: spec.len,\n                    specs: [spec],\n                    len: spec.len\n                }];\n            }, []);\n            return specs.map(function(spec) {\n                if (spec.len === 1) {\n                    return spec.chr;\n                }\n                var style = char_width_prop(spec.sum, options);\n                if (spec.sum === chars.length || !style.length) {\n                    return '<span>' + make_string(spec) + '</span>';\n                } else if (spec.specs.length > 1) {\n                    return wrap(style, spec.specs.map(function(spec) {\n                        return wrap(char_width_prop(spec.len), spec.chr);\n                    }).join(''));\n                } else {\n                    return wrap(style, make_string(spec));\n                }\n            }).join('');\n        }\n        function make_string(spec) {\n            return spec.specs.map(function(spec) {\n                return spec.chr;\n            }).join('');\n        }\n        function wrap(style, str) {\n            return '<span style=\"' + style + '\">' + str + '</span>';\n        }\n        return text;\n    }\n    // ---------------------------------------------------------------------\n    // :: Binary search utility\n    // ---------------------------------------------------------------------\n    function binary_search(start, end, search_pos, compare_fn, more_args) {\n        var len = end - start;\n        var mid = start + Math.floor(len / 2);\n        var args = [search_pos, mid].concat(more_args);\n        var cmp = compare_fn.apply(null, args);\n        if (cmp === 0) {\n            return mid;\n        } else if (cmp > 0 && len > 1) {\n            return binary_search(\n                mid,\n                end,\n                search_pos,\n                compare_fn,\n                more_args\n            );\n        } else if (cmp < 0 && len > 1) {\n            return binary_search(\n                start,\n                mid,\n                search_pos,\n                compare_fn,\n                more_args\n            );\n        } else {\n            return -1;\n        }\n    }\n    // -----------------------------------------------------------------\n    // :: selection utilities - should work in modern browser including IE9\n    // -----------------------------------------------------------------\n    function is_terminal_selected(cmd) {\n        if (is_function(window.getSelection)) {\n            var selection = window.getSelection();\n            if (selection.toString()) {\n                var node = selection.getRangeAt(0).startContainer.parentNode;\n                var term = $(node).closest('.terminal');\n                return term.length && (cmd && term.find('.cmd').is(cmd) || !cmd);\n            }\n        }\n    }\n    // -----------------------------------------------------------------\n    function get_selected_html() {\n        var html = '';\n        if (is_function(window.getSelection)) {\n            var sel = window.getSelection();\n            if (sel.rangeCount) {\n                var container = document.createElement('div');\n                for (var i = 0, len = sel.rangeCount; i < len; ++i) {\n                    container.appendChild(sel.getRangeAt(i).cloneContents());\n                }\n                html = container.innerHTML;\n            }\n        }\n        return html;\n    }\n    // -----------------------------------------------------------------\n    function with_selection(fn) {\n        var html = '';\n        var ranges = [];\n        if (is_function(window.getSelection)) {\n            var selection = window.getSelection();\n            if (selection.rangeCount) {\n                var container = document.createElement(\"div\");\n                for (var i = 0, len = selection.rangeCount; i < len; ++i) {\n                    var range = selection.getRangeAt(i).cloneRange();\n                    ranges.push(range);\n                    container.appendChild(range.cloneContents());\n                }\n                html = container.innerHTML;\n            }\n        }\n        fn(html);\n        if (ranges.length) {\n            selection.removeAllRanges();\n            ranges.forEach(function(range) {\n                selection.addRange(range);\n            });\n        }\n        return html !== '';\n    }\n    // -----------------------------------------------------------------\n    function process_selected_line() {\n        var $self = $(this);\n        var result = $self.text();\n        if ($self.hasClass('cmd-end-line')) {\n            result += '\\n';\n        }\n        return result;\n    }\n    // -----------------------------------------------------------------\n    function process_div(element) {\n        // span is empty line, div is default case with text\n        return $(element).find('> div, > span')\n            .map(process_selected_line).get().join('\\n').replace(/\\n$/, '');\n    }\n    // -----------------------------------------------------------------\n    function process_selected_html(html) {\n        var stdout;\n        var text = '';\n        var $html = $('<div>' + html + '</div>');\n        if (html.match(/<\\/div>/)) {\n            // match multiple echo output\n            stdout = $html.find('div[data-index]').map(function() {\n                return process_div(this);\n            }).get().join('\\n');\n            // match inside single echo output\n            if (!stdout && html.match(/style=\"width: 100%;?\"/)) {\n                stdout = process_div($html);\n            }\n            text = stdout;\n        }\n        var $prompt = $html.find('.cmd-prompt');\n        if ($prompt.length) {\n            if (text.length) {\n                text += '\\n';\n            }\n            text += $prompt.text();\n        }\n        var $cmd_lines = $html.find('[role=\"presentation\"]');\n        if ($cmd_lines.length) {\n            text += $cmd_lines.map(process_selected_line).get().join('');\n        }\n        if (!text.length && html) {\n            text = $html.text();\n        }\n        return text.replace(/\\xA0/g, ' '); // fix &nbsp; space\n    }\n    // ---------------------------------------------------------------------\n    // :: copy given DOM element text to clipboard\n    // ---------------------------------------------------------------------\n    var text_to_clipboard;\n    if (is_function(document.queryCommandSupported) &&\n        document.queryCommandSupported('copy')) {\n        text_to_clipboard = function text_to_clipboard($textarea, text) {\n            var val = $textarea.val();\n            var had_focus = $textarea.is(':focus');\n            var pos = $textarea.caret();\n            $textarea.val(text).focus();\n            $textarea[0].select();\n            document.execCommand('copy');\n            $textarea.val(val);\n            if (had_focus) {\n                $textarea.caret(pos);\n            }\n            return true;\n        };\n    } else {\n        text_to_clipboard = $.noop;\n    }\n    // ---------------------------------------------------------------------\n    var get_textarea_selection = (function() {\n        var textarea = document.createElement('textarea');\n        var selectionStart = 'selectionStart' in textarea;\n        textarea = null;\n        if (selectionStart) {\n            return function(textarea) {\n                var length = textarea.selectionEnd - textarea.selectionStart;\n                return textarea.value.substr(textarea.selectionStart, length);\n            };\n        } else if (document.selection) {\n            return function() {\n                var range = document.selection.createRange();\n                return range.text();\n            };\n        } else {\n            return function() {\n                return '';\n            };\n        }\n    })();\n    // ---------------------------------------------------------------------\n    function clear_textarea_selection(textarea) {\n        textarea.selectionStart = textarea.selectionEnd = 0;\n    }\n    // ---------------------------------------------------------------------\n    // :: return string that are common in all elements of the array\n    // ---------------------------------------------------------------------\n    function common_string(string, array, matchCase) {\n        if (!array.length) {\n            return '';\n        }\n        var type = string_case(string);\n        var result = [];\n        for (var j = string.length; j < array[0].length; ++j) {\n            var push = false;\n            var candidate = array[0].charAt(j),\n                candidateLower = candidate.toLowerCase();\n            for (var i = 1; i < array.length; ++i) {\n                push = true;\n                var current = array[i].charAt(j),\n                    currentLower = current.toLowerCase();\n                if (candidate !== current) {\n                    if (matchCase || type === 'mixed') {\n                        push = false;\n                        break;\n                    } else if (candidateLower === currentLower) {\n                        if (type === 'lower') {\n                            candidate = candidate.toLowerCase();\n                        } else if (type === 'upper') {\n                            candidate = candidate.toUpperCase();\n                        } else {\n                            push = false;\n                            break;\n                        }\n                    } else {\n                        push = false;\n                        break;\n                    }\n                }\n            }\n            if (push) {\n                result.push(candidate);\n            } else {\n                break;\n            }\n        }\n        return string + result.join('');\n    }\n    // ---------------------------------------------------------------------\n    function trigger_terminal_change(next) {\n        terminals.forEach(function(term) {\n            term.settings().onTerminalChange.call(term, next);\n        });\n    }\n    // ---------------------------------------------------------------------\n    var select = (function() {\n        if (window.getSelection) {\n            var selection = window.getSelection();\n            if (selection.setBaseAndExtent) {\n                return function(start, end) {\n                    var selection = window.getSelection();\n                    selection.setBaseAndExtent(start, 0, end, 1);\n                };\n            } else {\n                return function(start, end) {\n                    var selection = window.getSelection();\n                    var range = document.createRange();\n                    range.setStart(start, 0);\n                    range.setEnd(end, end.childNodes.length);\n                    selection.removeAllRanges();\n                    selection.addRange(range);\n                };\n            }\n        } else {\n            return $.noop;\n        }\n    })();\n    // -------------------------------------------------------------------------\n    function process_command(string, fn) {\n        var array = string.match(command_re) || [];\n        if (array.length) {\n            var name = array.shift();\n            var args = $.map(array, function(arg) {\n                if (arg.match(/^[\"']/)) {\n                    arg = arg.replace(/\\n/g, '\\\\u0000\\\\u0000\\\\u0000\\\\u0000');\n                    arg = fn(arg);\n                    return arg.replace(/\\x00\\x00\\x00\\x00/g, '\\n');\n                }\n                return fn(arg);\n            });\n            var quotes = $.map(array, function(arg) {\n                var m = arg.match(/^(['\"]).*\\1$/);\n                return m && m[1] || '';\n            });\n            var rest = string.slice(name.length).trim();\n            return {\n                command: string,\n                name: name,\n                args: args,\n                args_quotes: quotes,\n                rest: rest\n            };\n        } else {\n            return {\n                command: string,\n                name: '',\n                args: [],\n                args_quotes: quotes,\n                rest: ''\n            };\n        }\n    }\n    // -------------------------------------------------------------------------\n    $.terminal = {\n        version: '2.11.1',\n        date: 'Sun, 22 Dec 2019 17:24:32 +0000',\n        // colors from https://www.w3.org/wiki/CSS/Properties/color/keywords\n        color_names: [\n            'transparent', 'currentcolor', 'black', 'silver', 'gray', 'white',\n            'maroon', 'red', 'purple', 'fuchsia', 'green', 'lime', 'olive',\n            'yellow', 'navy', 'blue', 'teal', 'aqua', 'aliceblue',\n            'antiquewhite', 'aqua', 'aquamarine', 'azure', 'beige', 'bisque',\n            'black', 'blanchedalmond', 'blue', 'blueviolet', 'brown',\n            'burlywood', 'cadetblue', 'chartreuse', 'chocolate', 'coral',\n            'cornflowerblue', 'cornsilk', 'crimson', 'cyan', 'darkblue',\n            'darkcyan', 'darkgoldenrod', 'darkgray', 'darkgreen', 'darkgrey',\n            'darkkhaki', 'darkmagenta', 'darkolivegreen', 'darkorange',\n            'darkorchid', 'darkred', 'darksalmon', 'darkseagreen',\n            'darkslateblue', 'darkslategray', 'darkslategrey', 'darkturquoise',\n            'darkviolet', 'deeppink', 'deepskyblue', 'dimgray', 'dimgrey',\n            'dodgerblue', 'firebrick', 'floralwhite', 'forestgreen', 'fuchsia',\n            'gainsboro', 'ghostwhite', 'gold', 'goldenrod', 'gray', 'green',\n            'greenyellow', 'grey', 'honeydew', 'hotpink', 'indianred', 'indigo',\n            'ivory', 'khaki', 'lavender', 'lavenderblush', 'lawngreen',\n            'lemonchiffon', 'lightblue', 'lightcoral', 'lightcyan',\n            'lightgoldenrodyellow', 'lightgray', 'lightgreen', 'lightgrey',\n            'lightpink', 'lightsalmon', 'lightseagreen', 'lightskyblue',\n            'lightslategray', 'lightslategrey', 'lightsteelblue', 'lightyellow',\n            'lime', 'limegreen', 'linen', 'magenta', 'maroon',\n            'mediumaquamarine', 'mediumblue', 'mediumorchid', 'mediumpurple',\n            'mediumseagreen', 'mediumslateblue', 'mediumspringgreen',\n            'mediumturquoise', 'mediumvioletred', 'midnightblue', 'mintcream',\n            'mistyrose', 'moccasin', 'navajowhite', 'navy', 'oldlace', 'olive',\n            'olivedrab', 'orange', 'orangered', 'orchid', 'palegoldenrod',\n            'palegreen', 'paleturquoise', 'palevioletred', 'papayawhip',\n            'peachpuff', 'peru', 'pink', 'plum', 'powderblue', 'purple', 'red',\n            'rosybrown', 'royalblue', 'saddlebrown', 'salmon', 'sandybrown',\n            'seagreen', 'seashell', 'sienna', 'silver', 'skyblue', 'slateblue',\n            'slategray', 'slategrey', 'snow', 'springgreen', 'steelblue', 'tan',\n            'teal', 'thistle', 'tomato', 'turquoise', 'violet', 'wheat',\n            'white', 'whitesmoke', 'yellow', 'yellowgreen', 'rebeccapurple'],\n        // for unit tests\n        Cycle: Cycle,\n        History: History,\n        Stack: Stack,\n        // ---------------------------------------------------------------------\n        // :: Validate html color (it can be name or hex)\n        // ---------------------------------------------------------------------\n        valid_color: function valid_color(color) {\n            if (color.match(color_hex_re)) {\n                return true;\n            } else {\n                return $.inArray(color.toLowerCase(), $.terminal.color_names) !== -1;\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: function check if given string contain invalid strings\n        // ---------------------------------------------------------------------\n        unclosed_strings: function unclosed_strings(string) {\n            return !!string.match(unclosed_strings_re);\n        },\n        // ---------------------------------------------------------------------\n        // :: Escape all special regex characters, so it can be use as regex to\n        // :: match exact string that contain those characters\n        // ---------------------------------------------------------------------\n        escape_regex: function escape_regex(str) {\n            if (typeof str === 'string') {\n                var special = /([-\\\\^$[\\]()+{}?*.|])/g;\n                return str.replace(special, '\\\\$1');\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: test if string contain formatting\n        // ---------------------------------------------------------------------\n        have_formatting: function have_formatting(str) {\n            return typeof str === 'string' && !!str.match(format_exist_re);\n        },\n        is_formatting: function is_formatting(str) {\n            return typeof str === 'string' && !!str.match(format_full_re);\n        },\n        // ---------------------------------------------------------------------\n        // :: return array of formatting and text between them\n        // ---------------------------------------------------------------------\n        format_split: function format_split(str) {\n            return str.split(format_split_re).filter(Boolean);\n        },\n        // ---------------------------------------------------------------------\n        // :: replace that return position after replace for working with\n        // :: replacement that change length of the string\n        // :: source https://stackoverflow.com/a/46756077/387194\n        // ---------------------------------------------------------------------\n        tracking_replace: function tracking_replace(string, rex, replacement, position) {\n            if (!(rex instanceof RegExp)) {\n                throw new Error('tracking_replace: Second argument need to be RegExp');\n            }\n            function substring(string, start, end) {\n                return string.slice(start, end);\n            }\n            function length(string) {\n                return $.terminal.strip(string).length;\n            }\n            var new_string = \"\";\n            var match;\n            var index = 0;\n            var rep_string;\n            var new_position = position;\n            var start;\n            rex.lastIndex = 0; // Just to be sure\n            while ((match = rex.exec(string))) {\n                // if regex don't have g flag lastIndex will not work\n                if (rex.global) {\n                    // Add any of the original string we just skipped\n                    var last_index = length(substring(string, 0, rex.lastIndex));\n                    start = last_index - length(match[0]);\n                } else {\n                    start = match.index;\n                    last_index = start + length(match[0]);\n                }\n                if (index < start) {\n                    new_string += substring(string, index, start);\n                }\n                index = last_index;\n                // Build the replacement string. This just handles $$ and $n,\n                // you may want to add handling for $`, $', and $&.\n                if (typeof replacement === 'function') {\n                    rep_string = replacement.apply(null, match);\n                } else {\n                    rep_string = replacement.replace(/\\$(\\$|\\d)/g, function(m, c0) {\n                        if (c0 === \"$\") {\n                            return \"$\";\n                        }\n                        return match[c0];\n                    });\n                }\n                // Add on the replacement\n                new_string += rep_string;\n                // If the position is affected...\n                if (start < position) {\n                    // ... update it:\n                    var rep_len = length(rep_string);\n                    rep_len += count_selfclosing_formatting(rep_string);\n                    if (last_index < position) {\n                        // It's after the replacement, move it\n                        new_position = Math.max(\n                            0,\n                            new_position +\n                            rep_len -\n                            length(match[0])\n                        );\n                    } else {\n                        // It's *in* the replacement, put it just after\n                        new_position += rep_len - (position - start);\n                    }\n                }\n                // If the regular expression doesn't have the g flag, break here so\n                // we do just one replacement (and so we don't have an endless loop!)\n                if (!rex.global) {\n                    break;\n                }\n            }\n            // Add on any trailing text in the string\n            if (index < length(string)) {\n                new_string += substring(string, index);\n            }\n            // Return the string and the updated position\n            if (string === new_string) {\n                return [string, position];\n            }\n            return [new_string, new_position];\n        },\n        // ---------------------------------------------------------------------\n        // :: helper function used by substring and split_equal it loop over\n        // :: string and execute callback with text count and other data\n        // ---------------------------------------------------------------------\n        iterate_formatting: function iterate_formatting(string, callback) {\n            function is_space(i) {\n                return string.slice(i - 6, i) === '&nbsp;' ||\n                    string.slice(i - 1, i).match(/\\s/);\n            }\n            // ----------------------------------------------------------------\n            function match_entity(index) {\n                return string.slice(index).match(entity_re);\n            }\n            // ----------------------------------------------------------------\n            function is_open_formatting(i) {\n                return string[i] === '[' && string[i + 1] === '[';\n            }\n            // ----------------------------------------------------------------\n            function is_escape_bracket(i) {\n                return string[i - 1] !== '\\\\' && string[i] === '\\\\' &&\n                    string[i + 1] === ']';\n            }\n            // ----------------------------------------------------------------\n            function is_text(i) {\n                return not_formatting && (string[i] !== ']' || !have_formatting)\n                    && !opening;\n            }\n            // ----------------------------------------------------------------\n            // :: function will skip to next character in main loop\n            // ----------------------------------------------------------------\n            function next_iteration() {\n                var char = get_next_character(substring);\n                if ($.terminal.length(substring) > 1) {\n                    if (char.length > 1) {\n                        return char.length - 1;\n                    }\n                }\n                return 0;\n            }\n            // ----------------------------------------------------------------\n            function is_next_space() {\n                return (is_space(i) && (not_formatting || opening)) &&\n                    (space === -1 && prev_space !== i || space !== -1);\n            }\n            // ----------------------------------------------------------------\n            // :: last iteration or one before closing formatting\n            // ----------------------------------------------------------------\n            var last = false;\n            function is_last() {\n                if (i === string.length - 1 && !last) {\n                    last = true;\n                } else {\n                    last = !!substring.match(/^.]$/);\n                }\n                return last;\n            }\n            // ----------------------------------------------------------------\n            var have_formatting = $.terminal.have_formatting(string);\n            var formatting = '';\n            var in_text = false;\n            var count = 0;\n            var match;\n            var space = -1;\n            var space_count = -1;\n            var prev_space;\n            var length = 0;\n            var offset = 0;\n            var re_ent = /(&[^;]+);$/;\n            for (var i = 0; i < string.length; i++) {\n                var substring = string.slice(i);\n                match = substring.match(format_start_re);\n                if (match) {\n                    formatting = match[1];\n                    in_text = false;\n                } else if (formatting) {\n                    if (string[i] === ']') {\n                        if (in_text) {\n                            formatting = '';\n                            in_text = false;\n                        } else {\n                            in_text = true;\n                        }\n                    }\n                } else {\n                    in_text = true;\n                }\n                var not_formatting = (formatting && in_text) || !formatting;\n                var opening = is_open_formatting(i);\n                if (is_next_space()) {\n                    space = i;\n                    space_count = count;\n                }\n                var braket = string[i].match(/[[\\]]/);\n                offset = 0;\n                if (not_formatting) {\n                    // treat entity as one character\n                    if (string[i] === '&') {\n                        match = match_entity(i);\n                        if (match) {\n                            i += match[1].length - 2; // 2 because continue adds 1 to i\n                            continue;\n                        }\n                        ++count;\n                        ++length;\n                    } else if (is_escape_bracket(i)) {\n                        // escape \\] and \\\\ counts as one character\n                        ++count;\n                        ++length;\n                        offset = 1;\n                        i += 1;\n                    } else if (!braket || !have_formatting) {\n                        ++count;\n                        ++length;\n                    }\n                }\n                if (is_text(i)) {\n                    if (strlen(string[i]) === 2) {\n                        length++;\n                    }\n                    var char = get_next_character(substring);\n                    var size = char.length;\n                    // begining of enity that we've skipped, we are at the end\n                    if (char === ';') {\n                        match = string.slice(0, i + 1).match(re_ent);\n                        if (match) {\n                            offset = match[1].length;\n                            size = offset + 1;\n                        }\n                    }\n                    var data = {\n                        last: is_last(),\n                        count: count,\n                        index: i - offset,\n                        formatting: formatting,\n                        length: length,\n                        text: in_text,\n                        size: size,\n                        space: space,\n                        space_count: space_count\n                    };\n                    var ret = callback(data);\n                    if (ret === false) {\n                        break;\n                    } else if (ret) {\n                        if (ret.count !== undefined) {\n                            count = ret.count;\n                        }\n                        if (ret.length !== undefined) {\n                            length = ret.length;\n                        }\n                        if (ret.space !== undefined) {\n                            prev_space = space;\n                            space = ret.space;\n                        }\n                        if (ret.index !== undefined) {\n                            i = ret.index;\n                            continue;\n                        }\n                    }\n                } else if (i === string.length - 1 && !last) {\n                    // last iteration, if formatting have last bracket,\n                    // from formatting, then last iteration\n                    // was already called (in if) #550\n                    callback({\n                        count: count + 1,\n                        index: i,\n                        formatting: formatting,\n                        length: 0,\n                        text: in_text,\n                        space: space\n                    });\n                }\n                // handle emoji, suroggate pairs and combine characters\n                if (in_text) {\n                    i += next_iteration();\n                }\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: function return string splitted into single characters\n        // :: each character is wrapped into formatting from input string\n        // :: or empty formatting so it will create span when using with ::format\n        // ---------------------------------------------------------------------\n        partition: function partition(string) {\n            if (!$.terminal.have_formatting(string)) {\n                var chars = $.terminal.split_characters(string);\n                return chars.map(wrap);\n            }\n            var result = [];\n            function wrap(string) {\n                if (string.match(/\\\\$/)) {\n                    string += '\\\\';\n                }\n                return '[[;;]' + string + ']';\n            }\n            function formatting(string) {\n                if ($.terminal.is_formatting(string)) {\n                    if (string.match(/\\\\]$/)) {\n                        string = string.replace(/\\\\]/g, '\\\\\\\\]');\n                    }\n                } else {\n                    string = wrap(string);\n                }\n                return string;\n            }\n            $.terminal.iterate_formatting(string, function(data) {\n                if (data.text) {\n                    var text = [];\n                    if (data.formatting) {\n                        text.push(data.formatting);\n                    }\n                    text.push(string.substring(data.index, data.index + data.size));\n                    if (data.formatting) {\n                        text.push(']');\n                    }\n                    result.push(formatting(text.join('')));\n                }\n            });\n            return result;\n        },\n        // ---------------------------------------------------------------------\n        // :: formatting aware substring function\n        // ---------------------------------------------------------------------\n        substring: function substring(string, start_index, end_index) {\n            var chars = $.terminal.split_characters(string);\n            if (!chars.slice(start_index, end_index).length) {\n                return '';\n            }\n            if (!$.terminal.have_formatting(string)) {\n                return chars.slice(start_index, end_index).join('');\n            }\n            var start = 0;\n            var end;\n            var start_formatting = '';\n            var end_formatting = '';\n            var prev_index;\n            var offset = 1;\n            $.terminal.iterate_formatting(string, function(data) {\n                if (start_index && data.count === start_index + 1) {\n                    start = data.index;\n                    if (data.formatting) {\n                        start_formatting = data.formatting;\n                    }\n                }\n                if (end_index && data.count === end_index) {\n                    end_formatting = data.formatting;\n                    prev_index = data.index;\n                    offset = data.size;\n                }\n                if (data.count === end_index + 1) {\n                    end = data.index;\n                    if (data.formatting) {\n                        end = prev_index + offset;\n                    }\n                }\n            });\n            if (start_index && !start) {\n                return '';\n            }\n            if (end === undefined) {\n                end = string.length;\n            }\n            string = start_formatting + string.slice(start, end);\n            if (end_formatting) {\n                string = string.replace(/(\\[\\[^\\]]+)?\\]$/, '');\n                string += ']';\n            }\n            return string;\n        },\n        // ---------------------------------------------------------------------\n        // :: add format text as 5th paramter to formatting it's used for\n        // :: data attribute in format function - and fix unclosed &\n        // ---------------------------------------------------------------------\n        normalize: function normalize(string) {\n            string = string.replace(format_re, function(_, format, text) {\n                if (format.match(self_closing_re) && text === '') {\n                    return '[[' + format + '] ]';\n                }\n                if (text === '') {\n                    return '';\n                }\n                function safe(string) {\n                    return string.replace(/\\\\\\]/g, '&#93;').replace(/\\n/g, '\\\\n')\n                        .replace(/&nbsp;/g, ' ');\n                }\n                format = safe(format);\n                var semicolons = format.match(/;/g).length;\n                // missing semicolons\n                if (semicolons >= 4) {\n                    var args = format.split(/;/);\n                    var start = args.slice(0, 4).join(';');\n                    var arg = args.slice(4).join(';');\n                    return '[[' + start + ';' + (arg || text) + ']' + text + ']';\n                } else if (semicolons === 2) {\n                    semicolons = ';;';\n                } else if (semicolons === 3) {\n                    semicolons = ';';\n                }\n                // return '[[' + format + ']' + text + ']';\n                // closing braket will break formatting so we need to escape\n                // those using html entity equvalent\n                // space is hack for images that break iterate_formatting\n                format += semicolons + safe(text);\n                return '[[' + format + ']' + text + ']';\n            });\n            return $.terminal.amp(string);\n        },\n        // ---------------------------------------------------------------------\n        // :: split text into lines with equal length so each line can be\n        // :: rendered separately (text formatting can be longer then a line).\n        // ---------------------------------------------------------------------\n        split_equal: function split_equal(str, length, keep_words) {\n            var prev_format = '';\n            var result = [];\n            var array = $.terminal.normalize(str).split(/\\n/g);\n            for (var i = 0, len = array.length; i < len; ++i) {\n                if (array[i] === '') {\n                    result.push('');\n                    continue;\n                }\n                var line = array[i];\n                var first_index = 0;\n                var output;\n                var line_length = line.length;\n                var last_bracket = !!line.match(/\\[\\[[^\\]]+\\](?:[^\\][]|\\\\\\])+\\]$/);\n                $.terminal.iterate_formatting(line, function(data) {\n                    var chr, substring;\n                    if (data.length >= length || data.last ||\n                        (data.length === length - 1 &&\n                         strlen(line[data.index + 1]) === 2)) {\n                        var can_break = false;\n                        // TODO: this need work\n                        if (keep_words && data.space !== -1) {\n                            // replace html entities with characters\n                            var stripped = text(line).substring(data.space_count);\n                            // real length, not counting formatting\n                            stripped = stripped.slice(0, length).trim();\n                            var text_len = strlen(stripped);\n                            if (stripped.match(/\\s/) || text_len < length) {\n                                can_break = true;\n                            }\n                        }\n                        // if words is true we split at last space and make next loop\n                        // continue where the space where located\n                        var new_index;\n                        if (keep_words && data.space !== -1 &&\n                            data.index !== line_length - 1 && can_break) {\n                            output = line.slice(first_index, data.space);\n                            new_index = data.space - 1;\n                        } else {\n                            substring = line.slice(data.index);\n                            chr = get_next_character(substring);\n                            output = line.slice(first_index, data.index) + chr;\n                            if (data.last && last_bracket && chr !== ']') {\n                                output += ']';\n                            }\n                            new_index = data.index + chr.length - 1;\n                        }\n                        if (keep_words) {\n                            output = output.replace(/^(&nbsp;|\\s)+|(&nbsp;|\\s)+$/g, '');\n                        }\n                        first_index = (new_index || data.index) + 1;\n                        if (prev_format) {\n                            var closed_formatting = output.match(/^[^\\]]*\\]/);\n                            output = prev_format + output;\n                            if (closed_formatting) {\n                                prev_format = '';\n                            }\n                        }\n                        var matched = output.match(format_re);\n                        if (matched) {\n                            var last = matched[matched.length - 1];\n                            if (last[last.length - 1] !== ']') {\n                                prev_format = last.match(format_begin_re)[1];\n                                output += ']';\n                            } else if (output.match(format_end_re)) {\n                                output = output.replace(format_end_re, '');\n                                prev_format = last.match(format_begin_re)[1];\n                            }\n                        }\n                        result.push(output);\n                        // modify loop by returing new data\n                        return {index: new_index, length: 0, space: -1};\n                    }\n                });\n            }\n            return result;\n        },\n        // ---------------------------------------------------------------------\n        // :: Escape & that's not part of entity\n        // ---------------------------------------------------------------------\n        amp: function amp(str) {\n            return str.replace(/&(?!#[0-9]+;|#x[0-9a-f]+;|[a-z]+;)/gi, '&amp;');\n        },\n        // ---------------------------------------------------------------------\n        // :: Encode formating as html for insertion into DOM\n        // ---------------------------------------------------------------------\n        encode: function encode(str, options) {\n            var settings = $.extend({\n                tabs: 4,\n                before: ''\n            }, options);\n            return $.terminal.amp(str).replace(/</g, '&lt;').replace(/>/g, '&gt;')\n                .replace(/ /g, '&nbsp;').split('\\n').map(function(line) {\n                    var splitted = line.split(/((?:\\[\\[[^\\]]+\\])?\\t(?:\\])?)/);\n                    splitted = splitted.filter(Boolean);\n                    return splitted.map(function(str, i) {\n                        if (str.match(/\\t/)) {\n                            return str.replace(/\\t([^\\t]*)$/, function(_, end) {\n                                if (i !== 0 && splitted[i - 1].match(/\\t\\]?$/)) {\n                                    var sp = new Array(settings.tabs + 1).join('&nbsp;');\n                                    return sp + end;\n                                } else {\n                                    var before = splitted.slice(i - 1, i).join('');\n                                    if (settings.before && i <= 1) {\n                                        before = settings.before + before;\n                                    }\n                                    var len = $.terminal.length(before);\n                                    var chars = settings.tabs - (len % settings.tabs);\n                                    if (chars === 0) {\n                                        chars = 4;\n                                    }\n                                    return new Array(chars + 1).join('&nbsp;') + end;\n                                }\n                            });\n                        }\n                        return str;\n                    }).join('');\n                }).join('\\n');\n        },\n        // -----------------------------------------------------------------------\n        // :: Default formatter that allow for nested formatting, example:\n        // :: [[;;#000]hello [[;#f00;]red] world]\n        // -----------------------------------------------------------------------\n        nested_formatting: function nested_formatting(string) {\n            if (!$.terminal.have_formatting(string)) {\n                return string;\n            }\n            var stack = [];\n            var re = /((?:\\[\\[(?:[^\\][]|\\\\\\])+\\])?(?:[^\\][]|\\\\\\])*\\]?)/;\n            var format_re = /\\[\\[([^\\][]+)\\][\\s\\S]*/;\n            var format_split_re = /^\\[\\[([^;]*);([^;]*);([^\\]]*)\\]/;\n            function get_inherit_style(stack) {\n                var output = [[], '', ''];\n                if (!stack.length) {\n                    return output;\n                }\n                for (var i = stack.length; i--;) {\n                    var formatting = stack[i].split(';');\n                    var style = formatting[0].split(/(-?[@!gbiuso])/g).filter(Boolean);\n                    style.forEach(function(s) {\n                        if (output[0].indexOf(s) === -1) {\n                            output[0].push(s);\n                        }\n                    });\n                    for (var j = 1; j < output.length; ++j) {\n                        var value = formatting[j].trim();\n                        if (value && !output[j]) {\n                            output[j] = value;\n                        }\n                    }\n                }\n                var ignore = output[0].filter(function(s) {\n                    return s[0] === '-';\n                }).map(function(s) {\n                    return s[1];\n                });\n                output[0] = output[0].filter(function(s) {\n                    return ignore.indexOf(s) === -1 && ignore.indexOf(s[1]) === -1;\n                }).join('');\n                return output.join(';');\n            }\n            return string.split(re).filter(Boolean).map(function(string) {\n                var style;\n                if (string.match(/^\\[\\[/)) {\n                    var formatting = string.replace(format_re, '$1');\n                    var is_formatting = $.terminal.is_formatting(string);\n                    string = string.replace(format_split_re, '');\n                    stack.push(formatting);\n                    if ($.terminal.nested_formatting.__inherit__) {\n                        style = get_inherit_style(stack);\n                    } else {\n                        style = formatting;\n                    }\n                    if (!is_formatting) {\n                        string += ']';\n                    } else {\n                        stack.pop();\n                    }\n                    string = '[[' + style + ']' + string;\n                } else {\n                    var pop = false;\n                    if (string.match(/\\]/)) {\n                        pop = true;\n                    }\n                    if (stack.length) {\n                        if ($.terminal.nested_formatting.__inherit__) {\n                            style = get_inherit_style(stack);\n                        } else {\n                            style = stack[stack.length - 1];\n                        }\n                        string = '[[' + style + ']' + string;\n                    }\n                    if (pop) {\n                        stack.pop();\n                    } else if (stack.length) {\n                        string += ']';\n                    }\n                }\n                return string;\n            }).join('');\n        },\n        // ---------------------------------------------------------------------\n        // :: safe function that will render text as it is\n        // ---------------------------------------------------------------------\n        escape_formatting: function escape_formatting(string) {\n            return $.terminal.escape_brackets(string);\n        },\n        // ---------------------------------------------------------------------\n        // :: apply custom formatters only to text\n        // ---------------------------------------------------------------------\n        apply_formatters: function apply_formatters(string, settings) {\n            if (string === \"\") {\n                if (typeof settings.position === 'number') {\n                    return [\"\", settings.position];\n                } else {\n                    return \"\";\n                }\n            }\n            function test_lengths(formatter, index, ret, string) {\n                if (!formatter.__no_warn__ &&\n                    $.terminal.length(ret) !== $.terminal.length(string)) {\n                    warn('Your formatter[' + index + '] change length of the string, ' +\n                         'you should use [regex, replacement] formatter or function ' +\n                         ' that return [replacement, position] instead');\n                }\n            }\n            var formatters = $.terminal.defaults.formatters;\n            settings = settings || {};\n            var i = 0;\n            function apply_function_formatter(formatter, input) {\n                var options = $.extend({}, settings, {\n                    position: input[1]\n                });\n                var ret = formatter(input[0], options);\n                if (typeof ret === 'string') {\n                    test_lengths(formatter, i - 1, ret, input[0]);\n                    if (typeof ret === 'string') {\n                        return [ret, options.position];\n                    }\n                    return input;\n                } else if (is_array(ret) && ret.length === 2) {\n                    return ret;\n                } else {\n                    return input;\n                }\n            }\n            var input;\n            if (typeof settings.position === 'number') {\n                input = [string, settings.position];\n            } else {\n                input = [string, 0];\n            }\n            try {\n                var result = formatters.reduce(function(input, formatter) {\n                    i++;\n                    // __meta__ is for safe formatter that can handle formatters\n                    // inside formatters. for other usage we use format_split so one\n                    // formatter don't mess with formatter that was previous\n                    // on the list\n                    if (typeof formatter === 'function' && formatter.__meta__) {\n                        return apply_function_formatter(formatter, input);\n                    } else {\n                        var length = 0;\n                        var found_position = false;\n                        var splitted = $.terminal.format_split(input[0]);\n                        var partials = splitted.map(function(string) {\n                            var position;\n                            var this_len = text(string).length;\n                            // first position that match is used for this partial\n                            if (input[1] <= length + this_len && !found_position) {\n                                position = input[1] - length;\n                                found_position = true;\n                            } else {\n                                // -1 indicate that we will not track position because it\n                                // was in one of the previous parial strings\n                                position = -1;\n                            }\n                            // length is used to correct position after replace\n                            var length_before = length;\n                            var result;\n                            length += this_len;\n                            if ($.terminal.is_formatting(string)) {\n                                return [string, -1];\n                            } else {\n                                if (is_array(formatter)) {\n                                    var options = formatter[2] || {};\n                                    result = [string, position < 0 ? 0 : position];\n                                    if (result[0].match(formatter[0])) {\n                                        if (options.loop) {\n                                            while (result[0].match(formatter[0])) {\n                                                result = $.terminal.tracking_replace(\n                                                    result[0],\n                                                    formatter[0],\n                                                    formatter[1],\n                                                    result[1]\n                                                );\n                                            }\n                                        } else {\n                                            result = $.terminal.tracking_replace(\n                                                result[0],\n                                                formatter[0],\n                                                formatter[1],\n                                                result[1]\n                                            );\n                                        }\n                                    }\n                                    if (position < 0) {\n                                        return [result[0], -1];\n                                    }\n                                } else if (typeof formatter === 'function') {\n                                    result = apply_function_formatter(formatter, [\n                                        string, position\n                                    ]);\n                                }\n                                if (typeof result !== 'undefined') {\n                                    // correct position becuase it's relative\n                                    // to partial and we need global for whole string\n                                    if (result[1] !== -1) {\n                                        result[1] += length_before;\n                                    }\n                                    return result;\n                                }\n                                return [string, -1];\n                            }\n                        });\n                        var position_partial = partials.filter(function(partial) {\n                            return partial[1] !== -1;\n                        })[0];\n                        var string = partials.map(function(partial) {\n                            return partial[0];\n                        }).join('');\n                        var position;\n                        if (typeof position_partial === 'undefined') {\n                            position = input[1];\n                        } else {\n                            position = position_partial[1];\n                        }\n                        // to make sure that output position is not outside the string\n                        var max = text(string).length;\n                        max += count_selfclosing_formatting(string);\n                        if (position > max) {\n                            position = max;\n                        }\n                        if (string === input[0]) {\n                            return input;\n                        }\n                        return [string, position];\n                    }\n                }, input);\n                if (typeof settings.position === 'number') {\n                    var codepoint_len = $.terminal.strip(result[0]).length;\n                    if ($.terminal.length(result[0]) < codepoint_len) {\n                        var position = result[1];\n                        position = normalize_position(result[0], position);\n                        var max = $.terminal.length(result[0]);\n                        if (position > max) {\n                            position = max;\n                        }\n                        result[1] = position;\n                    }\n                    return result;\n                } else {\n                    return result[0];\n                }\n            } catch (e) {\n                var msg = 'Error in formatter [' + (i - 1) + ']';\n                formatters.splice(i - 1);\n                throw new $.terminal.Exception('formatting', msg, e.stack);\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: Replace terminal formatting with html\n        // ---------------------------------------------------------------------\n        format: function format(str, options) {\n            var settings = $.extend({}, {\n                linksNoReferrer: false,\n                linksNoFollow: false,\n                allowedAttributes: [],\n                char_width: undefined,\n                escape: true,\n                anyLinks: false\n            }, options || {});\n            // -----------------------------------------------------------------\n            function filter_attr_names(names) {\n                if (names.length && settings.allowedAttributes.length) {\n                    return names.filter(function(name) {\n                        if (name === 'data-text') {\n                            return false;\n                        }\n                        var allowed = false;\n                        var filters = settings.allowedAttributes;\n                        for (var i = 0; i < filters.length; ++i) {\n                            if (filters[i] instanceof RegExp) {\n                                if (filters[i].test(name)) {\n                                    allowed = true;\n                                    break;\n                                }\n                            } else if (filters[i] === name) {\n                                allowed = true;\n                                break;\n                            }\n                        }\n                        return allowed;\n                    });\n                }\n                return [];\n            }\n            // -----------------------------------------------------------------\n            function clean_data(data, text) {\n                if (data === '') {\n                    return text;\n                } else {\n                    return data.replace(/&#93;/g, ']')\n                        .replace(/>/g, '&gt;').replace(/</g, '&lt;');\n                }\n            }\n            // -----------------------------------------------------------------\n            function add_attrs(attrs) {\n                if (attrs) {\n                    var keys = filter_attr_names(Object.keys(attrs));\n                    if (keys.length) {\n                        return ' ' + keys.map(function(name) {\n                            var value = attrs[name].replace(/\"/g, '&quot;');\n                            return name + '=\"' + value + '\"';\n                        }).join(' ');\n                    }\n                }\n                return '';\n            }\n            // -----------------------------------------------------------------\n            function rel_attr() {\n                var rel = [\"noopener\"];\n                if (settings.linksNoReferrer) {\n                    rel.unshift(\"noreferrer\");\n                }\n                if (settings.linksNoFollow) {\n                    rel.unshift(\"nofollow\");\n                }\n                return rel;\n            }\n            // -----------------------------------------------------------------\n            // test if this is valid Path\n            // -----------------------------------------------------------------\n            function is_path(url) {\n                return url.match(/^\\.{1,2}\\//) ||\n                    url.match(/^\\//) ||\n                    !(url.match(/\\//) || url.match(/^[^:]+:/));\n            }\n            // -----------------------------------------------------------------\n            function with_url_validation(fn) {\n                return function(url) {\n                    if (settings.anyLinks) {\n                        return true;\n                    }\n                    var test = fn(url);\n                    if (!test) {\n                        warn('Invalid URL ' + url + ' only https ftp and Path ' +\n                             'are allowed');\n                    }\n                    return test;\n                };\n            }\n            // -----------------------------------------------------------------\n            var valid_href = with_url_validation(function(url) {\n                return url.match(/^((https?|ftp):\\/\\/|\\.{0,2}\\/)/) || is_path(url);\n            });\n            // -----------------------------------------------------------------\n            var valid_src = with_url_validation(function(url) {\n                return url.match(/^(https?:|blob:|data:)/) || is_path(url);\n            });\n            // -----------------------------------------------------------------\n            function format(s, style, color, background, _class, data_text, text) {\n                var attrs;\n                if (data_text.match(/;/)) {\n                    try {\n                        var splitted = data_text.split(';');\n                        var str = splitted.slice(1).join(';')\n                            .replace(/&nbsp;/g, ' ')\n                            .replace(/&lt;/g, '<')\n                            .replace(/&gt;/g, '>');\n                        if (str.match(/^\\s*\\{[^}]*\\}\\s*$/)) {\n                            attrs = JSON.parse(str);\n                            data_text = splitted[0];\n                        }\n                    } catch (e) {\n                    }\n                }\n                if (text === '' && !style.match(/@/)) {\n                    return ''; //'<span>&nbsp;</span>';\n                }\n                text = safe(text);\n                text = text.replace(/\\\\\\]/g, '&#93;');\n                if (settings.escape) {\n                    // inside formatting we need to unescape escaped slashes\n                    // but this escape is not needed when echo - don't know why\n                    text = text.replace(/\\\\\\\\/g, '\\\\');\n                }\n                var style_str = '';\n                if (style.indexOf('b') !== -1) {\n                    style_str += 'font-weight:bold;';\n                }\n                var text_decoration = [];\n                if (style.indexOf('u') !== -1) {\n                    text_decoration.push('underline');\n                }\n                if (style.indexOf('s') !== -1) {\n                    text_decoration.push('line-through');\n                }\n                if (style.indexOf('o') !== -1) {\n                    text_decoration.push('overline');\n                }\n                if (text_decoration.length) {\n                    style_str += 'text-decoration:' +\n                        text_decoration.join(' ') + ';';\n                }\n                if (style.indexOf('i') !== -1) {\n                    style_str += 'font-style:italic;';\n                }\n                if ($.terminal.valid_color(color)) {\n                    style_str += 'color:' + color + ';' +\n                        '--color:' + color + ';';\n                    if (style.indexOf('!') !== -1) {\n                        style_str += '--link-color:' + color + ';';\n                    }\n                    if (style.indexOf('g') !== -1) {\n                        style_str += 'text-shadow:0 0 5px ' + color + ';';\n                    }\n                }\n                if ($.terminal.valid_color(background)) {\n                    style_str += 'background-color:' + background + ';';\n                }\n                var data = clean_data(data_text, text);\n                var extra = extra_css(text, options);\n                if (extra) {\n                    text = wide_characters(text, options);\n                    style_str += extra;\n                }\n                var result;\n                if (style.indexOf('!') !== -1) {\n                    if (data.match(email_re)) {\n                        result = '<a href=\"mailto:' + data + '\"';\n                    } else {\n                        // only http and ftp links (prevent javascript)\n                        // unless user force it with anyLinks option\n                        if (!valid_href(data)) {\n                            data = '';\n                        }\n                        result = '<a target=\"_blank\"';\n                        if (data) {\n                            result += ' href=\"' + data + '\"';\n                        }\n                        result += ' rel=\"' + rel_attr().join(' ') + '\"';\n                    }\n                    // make focus to terminal textarea that will enable\n                    // terminal when pressing tab and terminal is disabled\n                    result += ' tabindex=\"1000\"';\n                } else if (style.indexOf('@') !== -1) {\n                    result = '<img';\n                    if (valid_src(data)) {\n                        result += ' src=\"' + data + '\"';\n                    }\n                } else {\n                    result = '<span';\n                }\n                result += add_attrs(attrs);\n                if (style_str !== '') {\n                    result += ' style=\"' + style_str + '\"';\n                }\n                if (_class !== '') {\n                    result += ' class=\"' + _class + '\"';\n                }\n                // links and image need data-text attribute cmd click behavior\n                // formatter can return links.\n                if (style.indexOf('!') !== -1) {\n                    result += ' data-text>' + text + '</a>';\n                } else if (style.indexOf('@') !== -1) {\n                    result += ' data-text/>';\n                } else {\n                    result += ' data-text=\"' + data.replace(/\"/g, '&quot;') + '\">' +\n                        text + '</span>';\n                }\n                return result;\n            }\n            if (typeof str === 'string') {\n                // support for formating foo[[u;;]bar]baz[[b;#fff;]quux]zzz\n                var splitted = $.terminal.format_split(str);\n                str = $.map(splitted, function(text) {\n                    if (text === '') {\n                        return text;\n                    } else if ($.terminal.is_formatting(text)) {\n                        // fix &nbsp; inside formatting because encode is called\n                        // before format\n                        text = text.replace(/\\[\\[[^\\]]+\\]/, function(text) {\n                            return text.replace(/&nbsp;/g, ' ');\n                        });\n                        return text.replace(format_parts_re, format);\n                    } else {\n                        text = safe(text);\n                        text = text.replace(/\\\\\\]/, '&#93;');\n                        var extra = extra_css(text, options);\n                        if (extra.length) {\n                            text = wide_characters(text, options);\n                            return '<span style=\"' + extra + '\">' + text + '</span>';\n                        } else {\n                            return '<span>' + text + '</span>';\n                        }\n                    }\n                }).join('');\n                return str.replace(/<span><br\\s*\\/?><\\/span>/gi, '<br/>');\n            } else {\n                return '';\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: Replace brackets with html entities\n        // ---------------------------------------------------------------------\n        escape_brackets: function escape_brackets(string) {\n            return string.replace(/\\[/g, '&#91;').replace(/\\]/g, '&#93;');\n        },\n        // ---------------------------------------------------------------------\n        // :: complmentary function\n        // ---------------------------------------------------------------------\n        unescape_brackets: function unescape_brackets(string) {\n            return string.replace(/&#91;/g, '[').replace(/&#93;/g, ']');\n        },\n        // ---------------------------------------------------------------------\n        // :: return number of characters without formatting\n        // ---------------------------------------------------------------------\n        length: function(string, raw) {\n            return $.terminal.split_characters(raw ? string : text(string)).length;\n        },\n        // ---------------------------------------------------------------------\n        // :: split characters handling emoji, surogate pairs and combine chars\n        // ---------------------------------------------------------------------\n        split_characters: function split_characters(string) {\n            var result = [];\n            while (string.length) {\n                var chr = get_next_character(string);\n                string = string.slice(chr.length);\n                result.push(chr);\n            }\n            return result;\n        },\n        // ---------------------------------------------------------------------\n        // :: return string where array items are in columns padded spaces\n        // :: after adding align tabs arr.join('\\t\\t') looks much better\n        // ---------------------------------------------------------------------\n        columns: function(array, cols, space) {\n            var no_formatting = array.map(function(string) {\n                return $.terminal.strip(string);\n            });\n            var lengths = no_formatting.map(function(string) {\n                return strlen(string);\n            });\n            if (typeof space === 'undefined') {\n                space = 4;\n            }\n            var length = Math.max.apply(null, lengths) + space;\n            // we need value - 1 because index starts from 0\n            var column_limit = Math.floor(cols / length) - 1;\n            if (column_limit < 1) {\n                return array.join('\\n');\n            }\n            var lines = [];\n            for (var i = 0, len = array.length; i < len; i += column_limit) {\n                var line = array.slice(i, i + column_limit);\n                var last = line.pop();\n                lines.push(line.reduce(function(acc, string) {\n                    var stripped = $.terminal.strip(string);\n                    var pad = new Array(length - stripped.length + 1).join(' ');\n                    acc.push(string + pad);\n                    return acc;\n                }, []).join('') + last);\n            }\n            return lines.join('\\n');\n        },\n        // ---------------------------------------------------------------------\n        // :: Remove formatting from text\n        // ---------------------------------------------------------------------\n        strip: function strip(str) {\n            str = str.replace(format_parts_re, '$6');\n            return str.replace(/\\\\([[\\]])/g, function(whole, bracket) {\n                return bracket;\n            });\n        },\n        // ---------------------------------------------------------------------\n        // :: Return active terminal\n        // ---------------------------------------------------------------------\n        active: function active() {\n            return terminals.front();\n        },\n        // ---------------------------------------------------------------------\n        // :: Implmentation detail id is always length of terminals Cycle\n        // ---------------------------------------------------------------------\n        last_id: function last_id() {\n            var len = terminals.length();\n            return len - 1;\n        },\n        // ---------------------------------------------------------------------\n        // :: Function that works with strings like 'asd' 'asd\\' asd' \"asd asd\"\n        // :: asd\\ 123 -n -b / [^ ]+ / /\\s+/ asd\\ a it creates a regex and\n        // :: numbers and replaces escape characters in double quotes\n        // :: if strict is set to false it only strips single and double quotes\n        // :: and escapes spaces\n        // ---------------------------------------------------------------------\n        parse_argument: function parse_argument(arg, strict) {\n            function parse_string(string) {\n                // split string to string literals and non-strings\n                return string.split(string_re).map(function(string) {\n                    // remove quotes if before are even number of slashes\n                    // we don't remove slases becuase they are handled by JSON.parse\n                    if (string.match(/^['\"]/)) {\n                        // fixing regex to match empty string is not worth it\n                        if (string === '\"\"' || string === \"''\") {\n                            return '';\n                        }\n                        var quote = string[0];\n                        var re = new RegExp(\"(^|(?:\\\\\\\\(?:\\\\\\\\)*)?)\" + quote, \"g\");\n                        string = string.replace(re, \"$1\");\n                    }\n                    string = '\"' + string + '\"';\n                    // use build in function to parse rest of escaped characters\n                    return JSON.parse(string);\n                }).join('');\n            }\n            if (strict === false) {\n                if (arg[0] === \"'\" && arg[arg.length - 1] === \"'\") {\n                    return arg.replace(/^'|'$/g, '');\n                } else if (arg[0] === '\"' && arg[arg.length - 1] === '\"') {\n                    return arg.replace(/^\"|\"$/g, '').replace(/\\\\([\" ])/g, '$1');\n                } else if (arg.match(/\\/.*\\/[gimy]*$/)) {\n                    return arg;\n                } else if (arg.match(/['\"]]/)) {\n                    // part of arg is in quote\n                    return parse_string(arg);\n                } else {\n                    return arg.replace(/\\\\ /g, ' ');\n                }\n            }\n            var regex = arg.match(re_re);\n            if (regex) {\n                return new RegExp(regex[1], regex[2]);\n            } else if (arg.match(/['\"]/)) {\n                return parse_string(arg);\n            } else if (arg.match(/^-?[0-9]+$/)) {\n                return parseInt(arg, 10);\n            } else if (arg.match(float_re)) {\n                return parseFloat(arg);\n            } else {\n                return arg.replace(/\\\\(['\"() ])/g, '$1');\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: function split and parse arguments\n        // ---------------------------------------------------------------------\n        parse_arguments: function parse_arguments(string) {\n            return $.map(string.match(command_re) || [], $.terminal.parse_argument);\n        },\n        // ---------------------------------------------------------------------\n        // :: Function split and strips single and double quotes\n        // :: and escapes spaces\n        // ---------------------------------------------------------------------\n        split_arguments: function split_arguments(string) {\n            return $.map(string.match(command_re) || [], function(arg) {\n                return $.terminal.parse_argument(arg, false);\n            });\n        },\n        // ---------------------------------------------------------------------\n        // :: Function that returns an object {name,args}. Arguments are parsed\n        // :: using the function parse_arguments\n        // ---------------------------------------------------------------------\n        parse_command: function parse_command(string) {\n            return process_command(string, $.terminal.parse_argument);\n        },\n        // ---------------------------------------------------------------------\n        // :: Same as parse_command but arguments are parsed using split_arguments\n        // ---------------------------------------------------------------------\n        split_command: function split_command(string) {\n            return process_command(string, function(arg) {\n                return $.terminal.parse_argument(arg, false);\n            });\n        },\n        // ---------------------------------------------------------------------\n        // :; function that parse arguments like yargs library\n        // ---------------------------------------------------------------------\n        parse_options: function parse_options(arg, options) {\n            var settings = $.extend({}, {\n                boolean: []\n            }, options);\n            if (typeof arg === 'string') {\n                return parse_options($.terminal.split_arguments(arg), options);\n            }\n            var result = {\n                _: []\n            };\n            function token(value) {\n                this.value = value;\n            }\n            var rest = arg.reduce(function(acc, arg) {\n                var str = typeof arg === 'string' ? arg : '';\n                if (str.match(/^-/) && acc instanceof token) {\n                    result[acc.value] = true;\n                }\n                if (str.match(/^--/)) {\n                    var name = str.replace(/^--/, '');\n                    if (settings.boolean.indexOf(name) === -1) {\n                        return new token(name);\n                    } else {\n                        result[name] = true;\n                    }\n                } else if (str.match(/^-/)) {\n                    var single = str.replace(/^-/, '').split('');\n                    if (settings.boolean.indexOf(single.slice(-1)[0]) === -1) {\n                        var last = single.pop();\n                    }\n                    single.forEach(function(single) {\n                        result[single] = true;\n                    });\n                    if (last) {\n                        return new token(last);\n                    }\n                } else if (acc instanceof token) {\n                    result[acc.value] = arg;\n                } else if (arg) {\n                    result._.push(arg);\n                }\n                return null;\n            }, null);\n            if (rest instanceof token) {\n                result[rest.value] = true;\n            }\n            return result;\n        },\n        // ---------------------------------------------------------------------\n        // :: function executed for each text inside [[ .... ]] in echo\n        // ---------------------------------------------------------------------\n        extended_command: function extended_command(term, string, options) {\n            var settings = $.extend({\n                invokeMethods: false\n            }, options);\n            try {\n                change_hash = false;\n                var m = string.match(extended_command_re);\n                if (m) {\n                    if (!settings.invokeMethods) {\n                        warn('To invoke terminal or cmd methods you need to enable ' +\n                             'invokeMethods option');\n                        return;\n                    }\n                    string = m[1];\n                    var obj = m[2] === 'terminal' ? term : term.cmd();\n                    var fn = m[3];\n                    try {\n                        var args = eval('[' + m[4] + ']');\n                        if (!obj[fn]) {\n                            term.error('Unknow function ' + fn);\n                        } else {\n                            obj[fn].apply(term, args);\n                        }\n                    } catch (e) {\n                        term.error('Invalid invocation in ' +\n                                   $.terminal.escape_brackets(string));\n                    }\n                } else {\n                    term.exec(string, true).done(function() {\n                        change_hash = true;\n                    });\n                }\n            } catch (e) {\n                // error is process in exec\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: ES6 iterator for a given string that handle emoji and formatting\n        // ---------------------------------------------------------------------\n        iterator: function(string) {\n            function formatting(string) {\n                if ($.terminal.is_formatting(string)) {\n                    if (string.match(/\\]\\\\\\]/)) {\n                        string = string.replace(/\\]\\\\\\]/g, ']\\\\\\\\]');\n                    }\n                }\n                return string;\n            }\n            if (typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol') {\n                var len = $.terminal.length(string);\n                var i = 0;\n                var obj = {};\n                obj[Symbol.iterator] = function() {\n                    return {\n                        next: function() {\n                            if (i < len) {\n                                var text = $.terminal.substring(string, i, i + 1);\n                                i++;\n                                return {\n                                    value: formatting(text)\n                                };\n                            } else {\n                                return {\n                                    done: true\n                                };\n                            }\n                        }\n                    };\n                };\n                return obj;\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: object that can be used in string methods intead of regex\n        // ---------------------------------------------------------------------\n        formatter: new (function() {\n            try {\n                this[Symbol.split] = function(string) {\n                    return $.terminal.format_split(string);\n                };\n                this[Symbol.match] = function(string) {\n                    return string.match(format_re);\n                };\n                this[Symbol.replace] = function(string, replacer) {\n                    return string.replace(format_parts_re, replacer);\n                };\n                this[Symbol.search] = function(string) {\n                    return string.search(format_re);\n                };\n            } catch (e) {\n            }\n        })(),\n        // ---------------------------------------------------------------------\n        // :: helper function that add formatter before nested_formatting\n        // ---------------------------------------------------------------------\n        new_formatter: function(formatter) {\n            var formatters = $.terminal.defaults.formatters;\n            for (var i = 0; i < formatters.length; ++i) {\n                if (formatters[i] === $.terminal.nested_formatting) {\n                    formatters.splice(i, 0, formatter);\n                    return;\n                }\n            }\n            formatters.push(formatter);\n        }\n    };\n    // -------------------------------------------------------------------------\n    $.terminal.Exception = function Terminal_Exception(type, message, stack) {\n        if (arguments.length === 1) {\n            this.message = arguments[0];\n            this.type = 'TERMINAL';\n        } else {\n            this.type = type;\n            this.message = message;\n            if (stack) {\n                this.stack = stack;\n            }\n        }\n    };\n    $.terminal.Exception.prototype = new Error();\n    $.terminal.Exception.prototype.toString = function() {\n        return this.message + '\\n' + this.stack;\n    };\n    // -----------------------------------------------------------------------\n    // Helper plugins and functions\n    // -----------------------------------------------------------------------\n    $.fn.visible = function() {\n        return this.css('visibility', 'visible');\n    };\n    $.fn.hidden = function() {\n        return this.css('visibility', 'hidden');\n    };\n    // -----------------------------------------------------------------------\n    var warnings = [];\n    function warn(msg) {\n        msg = '[jQuery Terminal] ' + msg;\n        if (warnings.indexOf(msg) === -1) {\n            warnings.push(msg);\n            /* eslint-disable */\n            if (console) {\n                if (console.warn) {\n                    console.warn(msg);\n                } else if (console.log) {\n                    console.log(msg);\n                }\n                /* eslint-enable */\n            } else {\n                // prevent catching in outer try..catch\n                setTimeout(function() {\n                    throw new Error('WARN: ' + msg);\n                }, 0);\n            }\n        }\n    }\n    // -----------------------------------------------------------------------\n    // JSON-RPC CALL\n    // -----------------------------------------------------------------------\n    var ids = {}; // list of url based ids of JSON-RPC\n    $.jrpc = function(url, method, params, success, error) {\n        var deferred = new $.Deferred();\n        var options;\n        if ($.isPlainObject(url)) {\n            options = url;\n        } else {\n            options = {\n                url: url,\n                method: method,\n                params: params,\n                success: success,\n                error: error\n            };\n        }\n        function validJSONRPC(response) {\n            return $.isNumeric(response.id) &&\n                (typeof response.result !== 'undefined' ||\n                 typeof response.error !== 'undefined');\n        }\n        ids[options.url] = ids[options.url] || 0;\n        var request = {\n            'jsonrpc': '2.0',\n            'method': options.method,\n            'params': options.params,\n            'id': ++ids[options.url]\n        };\n        $.ajax({\n            url: options.url,\n            beforeSend: function beforeSend(jxhr, settings) {\n                if (is_function(options.request)) {\n                    options.request(jxhr, request);\n                }\n                settings.data = JSON.stringify(request);\n            },\n            success: function success(response, status, jqXHR) {\n                var content_type = jqXHR.getResponseHeader('Content-Type');\n                if (!content_type.match(/(application|text)\\/json/)) {\n                    warn('Response Content-Type is neither application/json' +\n                         ' nor text/json');\n                }\n                var json;\n                try {\n                    json = JSON.parse(response);\n                } catch (e) {\n                    if (options.error) {\n                        options.error(jqXHR, 'Invalid JSON', e);\n                    } else {\n                        throw new $.terminal.Exception('JSON', 'Invalid JSON', e.stack);\n                    }\n                    deferred.reject({message: 'Invalid JSON', response: response});\n                    return;\n                }\n                if (is_function(options.response)) {\n                    options.response(jqXHR, json);\n                }\n                if (validJSONRPC(json) || options.method === 'system.describe') {\n                    // don't catch errors in success callback\n                    if (options.success) {\n                        options.success(json, status, jqXHR);\n                    }\n                    deferred.resolve(json);\n                } else {\n                    if (options.error) {\n                        options.error(jqXHR, 'Invalid JSON-RPC');\n                    }\n                    deferred.reject({message: 'Invalid JSON-RPC', response: response});\n                }\n            },\n            error: options.error,\n            contentType: 'application/json',\n            dataType: 'text',\n            async: true,\n            cache: false,\n            // timeout: 1,\n            type: 'POST'\n        });\n        return deferred.promise();\n    };\n\n    // -----------------------------------------------------------------------\n    /*\n    function is_scrolled_into_view(elem) {\n        var docViewTop = $(window).scrollTop();\n        var docViewBottom = docViewTop + $(window).height();\n\n        var elemTop = $(elem).offset().top;\n        var elemBottom = elemTop + $(elem).height();\n\n        return ((elemBottom >= docViewTop) && (elemTop <= docViewBottom));\n    }\n    */\n    // -----------------------------------------------------------------------\n    function terminal_ready(term) {\n        return !!(term.closest('body').length &&\n                  term.is(':visible') &&\n                  term.find('.cmd-prompt').length);\n    }\n    // -----------------------------------------------------------------------\n    // :: Create fake terminal to calcualte the dimention of one character\n    // :: this will make terminal work if terminal div is not added to the\n    // :: DOM at init like with:\n    // :: $('<div/>').terminal().echo('foo bar').appendTo('body');\n    // -----------------------------------------------------------------------\n    function get_char_size(term) {\n        var rect;\n        if (terminal_ready(term)) {\n            var $prompt = term.find('.cmd-prompt').clone().css({\n                visiblity: 'hidden',\n                position: 'absolute'\n            });\n            $prompt.appendTo(term.find('.cmd')).html('&nbsp;');\n            rect = $prompt[0].getBoundingClientRect();\n            $prompt.remove();\n        } else {\n            var temp = $('<div class=\"terminal terminal-temp\"><div class=\"terminal-' +\n                         'wrapper\"><div class=\"terminal-output\"><div><div class=\"te' +\n                         'rminal-line\" style=\"float: left\"><span>&nbsp;</span></div' +\n                         '></div></div></div>').appendTo('body');\n            temp.addClass(term.attr('class')).attr('id', term.attr('id'));\n            if (term) {\n                var style = term.attr('style');\n                if (style) {\n                    style = style.split(/\\s*;\\s*/).filter(function(s) {\n                        return !s.match(/display\\s*:\\s*none/i);\n                    }).join(';');\n                    temp.attr('style', style);\n                }\n            }\n            rect = temp.find('.terminal-line')[0].getBoundingClientRect();\n        }\n        var result = {\n            width: rect.width,\n            height: rect.height\n        };\n        if (temp) {\n            temp.remove();\n        }\n        return result;\n    }\n    // -----------------------------------------------------------------------\n    // :: calculate numbers of characters\n    // -----------------------------------------------------------------------\n    function get_num_chars(terminal, char_size) {\n        var width = terminal.find('.terminal-fill').width();\n        var result = Math.floor(width / char_size.width);\n        // random number to not get NaN in node.js but big enough to\n        // not wrap exception\n        return result || 1000;\n    }\n    // -----------------------------------------------------------------------\n    // :: Calculate number of lines that fit without scroll\n    // -----------------------------------------------------------------------\n    function get_num_rows(terminal, char_size) {\n        return Math.floor(terminal.find('.terminal-fill').height() / char_size.height);\n    }\n    // -----------------------------------------------------------------------\n    function all(array, fn) {\n        var same = array.filter(function(item) {\n            return item[fn]() === item;\n        });\n        return same.length === array.length;\n    }\n    // -----------------------------------------------------------------------\n    function string_case(string) {\n        var array = string.split('');\n        if (all(array, 'toLowerCase')) {\n            return 'lower';\n        } else if (all(array, 'toUpperCase')) {\n            return 'upper';\n        } else {\n            return 'mixed';\n        }\n    }\n    // -----------------------------------------------------------------------\n    function same_case(string) {\n        return string_case(string) !== 'mixed';\n    }\n    // -----------------------------------------------------------------------\n    // fix for jQuery bug\n    function is_function(object) {\n        return get_type(object) === 'function';\n    }\n    // -----------------------------------------------------------------------\n    function is_array(object) {\n        return get_type(object) === 'array';\n    }\n    // -----------------------------------------------------------------------\n    function get_type(object) {\n        return typeof object === 'function' ? 'function' : $.type(object);\n    }\n    // -----------------------------------------------------------------------\n    // :: TERMINAL PLUGIN CODE\n    // -----------------------------------------------------------------------\n    var version_set = !$.terminal.version.match(/^\\{\\{/);\n    var copyright = 'Copyright (c) 2011-2019 Jakub T. Jankiewicz ' +\n        '<https://jcubic.pl/me>';\n    var version_string = version_set ? ' v. ' + $.terminal.version : ' ';\n    // regex is for placing version string aligned to the right\n    var reg = new RegExp(' {' + version_string.length + '}$');\n    var name_ver = 'jQuery Terminal Emulator' +\n        (version_set ? version_string : '');\n    // -----------------------------------------------------------------------\n    // :: Terminal Signatures\n    // -----------------------------------------------------------------------\n    var signatures = [\n        ['jQuery Terminal', '(c) 2011-2019 jcubic'],\n        [name_ver, copyright.replace(/^Copyright | *<.*>/g, '')],\n        [name_ver, copyright.replace(/^Copyright /, '')],\n        [\n            '      _______                 ________                        __',\n            '     / / _  /_ ____________ _/__  ___/______________  _____  / /',\n            ' __ / / // / // / _  / _/ // / / / _  / _/     / /  \\\\/ / _ \\\\/ /',\n            '/  / / // / // / ___/ // // / / / ___/ // / / / / /\\\\  / // / /__',\n            '\\\\___/____ \\\\\\\\__/____/_/ \\\\__ / /_/____/_//_/_/_/_/_/  \\\\/\\\\__\\\\_\\\\___/',\n            '         \\\\/          /____/                                   '\n                .replace(reg, ' ') + version_string,\n            copyright\n        ],\n        [\n            '      __ _____                     ________                            ' +\n                '  __',\n            '     / // _  /__ __ _____ ___ __ _/__  ___/__ ___ ______ __ __  __ ___ ' +\n                ' / /',\n            ' __ / // // // // // _  // _// // / / // _  // _//     // //  \\\\/ // _ ' +\n                '\\\\/ /',\n            '/  / // // // // // ___// / / // / / // ___// / / / / // // /\\\\  // // ' +\n                '/ /__',\n            '\\\\___//____ \\\\\\\\___//____//_/ _\\\\_  / /_//____//_/ /_/ /_//_//_/ /_/ \\\\' +\n                '__\\\\_\\\\___/',\n            ('          \\\\/              /____/                                     ' +\n             '     ').replace(reg, '') + version_string,\n            copyright\n        ]\n    ];\n    // -----------------------------------------------------------------------\n    // :: Default options\n    // -----------------------------------------------------------------------\n    $.terminal.nested_formatting.__meta__ = true;\n    // if set to true nested formatting will inherit styles from styles outside\n    $.terminal.nested_formatting.__inherit__ = false;\n    // nested formatting will always return different length so we silent the warning\n    $.terminal.nested_formatting.__no_warn__ = true;\n    $.terminal.defaults = {\n        prompt: '> ',\n        history: true,\n        exit: true,\n        clear: true,\n        enabled: true,\n        maskChar: '*',\n        wrap: true,\n        checkArity: true,\n        raw: false,\n        tabindex: 1,\n        invokeMethods: false,\n        exceptionHandler: null,\n        pauseEvents: true,\n        softPause: false,\n        memory: false,\n        cancelableAjax: true,\n        processArguments: true,\n        linksNoReferrer: false,\n        anyLinks: false,\n        linksNoFollow: false,\n        processRPCResponse: null,\n        completionEscape: true,\n        onCommandChange: null,\n        mobileDelete: is_mobile,\n        onPositionChange: null,\n        convertLinks: true,\n        extra: {},\n        tabs: 4,\n        historySize: 60,\n        scrollObject: null,\n        historyState: false,\n        importHistory: false,\n        historyFilter: null,\n        echoCommand: true,\n        scrollOnEcho: true,\n        login: null,\n        outputLimit: -1,\n        formatters: [$.terminal.nested_formatting],\n        onAjaxError: null,\n        pasteImage: true,\n        scrollBottomOffset: 20,\n        wordAutocomplete: true,\n        caseSensitiveAutocomplete: true,\n        caseSensitiveSearch: true,\n        clickTimeout: 200,\n        holdTimeout: 400,\n        holdRepeatTimeout: 200,\n        repeatTimeoutKeys: [],\n        mobileIngoreAutoSpace: [],\n        request: $.noop,\n        response: $.noop,\n        describe: 'procs',\n        onRPCError: null,\n        doubleTab: null,\n        doubleTabEchoCommand: false,\n        completion: false,\n        onInit: $.noop,\n        onClear: $.noop,\n        onBlur: $.noop,\n        onFocus: $.noop,\n        onTerminalChange: $.noop,\n        onExit: $.noop,\n        onPush: $.noop,\n        onPop: $.noop,\n        keypress: $.noop,\n        keydown: $.noop,\n        renderHandler: null,\n        onAfterRedraw: $.noop,\n        onEchoCommand: $.noop,\n        onPaste: $.noop,\n        onFlush: $.noop,\n        onBeforeCommand: null,\n        onAfterCommand: null,\n        onBeforeEcho: null,\n        onAfterEcho: null,\n        onBeforeLogin: null,\n        onAfterLogout: null,\n        onBeforeLogout: null,\n        allowedAttributes: ['title', /^aria-/, 'id', /^data-/],\n        strings: {\n            comletionParameters: 'From version 1.0.0 completion function need to' +\n                ' have two arguments',\n            wrongPasswordTryAgain: 'Wrong password try again!',\n            wrongPassword: 'Wrong password!',\n            ajaxAbortError: 'Error while aborting ajax call!',\n            wrongArity: \"Wrong number of arguments. Function '%s' expects %s got\" +\n                ' %s!',\n            commandNotFound: \"Command '%s' Not Found!\",\n            oneRPCWithIgnore: 'You can use only one rpc with describe == false ' +\n                'or rpc without system.describe',\n            oneInterpreterFunction: \"You can't use more than one function (rpc \" +\n                'without system.describe or with option describe == false count' +\n                 's as one)',\n            loginFunctionMissing: \"You didn't specify a login function\",\n            noTokenError: 'Access denied (no token)',\n            serverResponse: 'Server responded',\n            wrongGreetings: 'Wrong value of greetings parameter',\n            notWhileLogin: \"You can't call `%s' function while in login\",\n            loginIsNotAFunction: 'Authenticate must be a function',\n            canExitError: \"You can't exit from main interpreter\",\n            invalidCompletion: 'Invalid completion',\n            invalidSelector: 'Sorry, but terminal said that you use invalid ' +\n                'selector!',\n            invalidTerminalId: 'Invalid Terminal ID',\n            login: 'login',\n            password: 'password',\n            recursiveCall: 'Recursive call detected, skip',\n            notAString: '%s function: argument is not a string',\n            redrawError: 'Internal error, wrong position in cmd redraw',\n            invalidStrings: 'Command %s have unclosed strings',\n            defunctTerminal: \"You can't call method on terminal that was destroyed\"\n        }\n    };\n    // -------------------------------------------------------------------------\n    // :: All terminal globals\n    // -------------------------------------------------------------------------\n    var requests = []; // for canceling on CTRL+D\n    var terminals = new Cycle(); // list of terminals global in this scope\n    // state for all terminals, terminals can't have own array fo state because\n    // there is only one popstate event\n    var save_state = []; // hold objects returned by export_view by history API\n    var hash_commands;\n    var change_hash = false; // don't change hash on Init\n    var fire_hash_change = true;\n    var first_instance = true; // used by history state\n    $.fn.terminal = function(init_interpreter, options) {\n        function StorageHelper(memory) {\n            if (memory) {\n                this.storage = {};\n            }\n            this.set = function(key, value) {\n                if (memory) {\n                    this.storage[key] = value;\n                } else {\n                    $.Storage.set(key, value);\n                }\n            };\n            this.get = function(key) {\n                if (memory) {\n                    return this.storage[key];\n                } else {\n                    return $.Storage.get(key);\n                }\n            };\n            this.remove = function(key) {\n                if (memory) {\n                    delete this.storage[key];\n                } else {\n                    $.Storage.remove(key);\n                }\n            };\n        }\n        // ---------------------------------------------------------------------\n        // :: helper function\n        // ---------------------------------------------------------------------\n        function get_processed_command(command) {\n            if ($.terminal.unclosed_strings(command)) {\n                var string = $.terminal.escape_brackets(command);\n                var message = sprintf(strings().invalidStrings, \"`\" + string + \"`\");\n                throw new $.terminal.Exception(message);\n            } else if (is_function(settings.processArguments)) {\n                return process_command(command, settings.processArguments);\n            } else if (settings.processArguments) {\n                return $.terminal.parse_command(command);\n            } else {\n                return $.terminal.split_command(command);\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: helper function that use option to render objects\n        // ---------------------------------------------------------------------\n        function preprocess_value(value) {\n            if (is_function(settings.renderHandler)) {\n                var ret = settings.renderHandler.call(self, value, self);\n                if (ret === false) {\n                    return false;\n                }\n                if (typeof ret === 'string' || is_node(ret)) {\n                    return ret;\n                } else {\n                    return value;\n                }\n            }\n            return value;\n        }\n        // ---------------------------------------------------------------------\n        // :: call when line is out of view when outputLimit is used\n        // :: NOTE: it's not called when less plugin is used onClear is called\n        // :: instead because less call term::clear() after export old view\n        // ---------------------------------------------------------------------\n        function unmount(node) {\n            var index = node.data('index');\n            var line = lines[index];\n            var options = line[1];\n            if (is_function(options.unmount)) {\n                options.unmount.call(self, node);\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: helper function used in render and in update\n        // ---------------------------------------------------------------------\n        function prepare_render(value, options) {\n            if (is_node(value)) {\n                var settings = $.extend({}, options, {\n                    raw: true,\n                    finalize: function(div) {\n                        var node;\n                        if (value instanceof $.fn.init) {\n                            // deep clone with events - we clone because remove\n                            // from DOM will remove events from original object\n                            node = value.clone(true, true);\n                        } else {\n                            // don't clone html nodes because it will not\n                            // work for canvas or video tag\n                            node = value;\n                        }\n                        div.find('.terminal-render-item').replaceWith(node);\n                        if (options && is_function(options.finalize)) {\n                            options.finalize(div, self);\n                        }\n                    }\n                });\n                return ['<div class=\"terminal-render-item\"/>', settings];\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: helper function that renders DOM nodes and jQuery objects\n        // ---------------------------------------------------------------------\n        function render(value, options) {\n            var ret = prepare_render(value, options);\n            if (ret) {\n                self.echo.apply(self, ret);\n                return true;\n            }\n        }\n        // ---------------------------------------------------------------------\n        function get_node(index) {\n            return output.find('[data-index=' + index + ']');\n        }\n        // ---------------------------------------------------------------------\n        // :: test if object can be rendered\n        // ---------------------------------------------------------------------\n        function is_node(object) {\n            return object instanceof $.fn.init || object instanceof Element;\n        }\n        // ---------------------------------------------------------------------\n        // :: Display object on terminal\n        // ---------------------------------------------------------------------\n        function display_object(object) {\n            object = preprocess_value(object);\n            if (object === false) {\n                return;\n            }\n            if (render(object)) {\n                return;\n            }\n            if (typeof object === 'string') {\n                self.echo(object);\n            } else if (is_array(object)) {\n                self.echo($.map(object, function(object) {\n                    return JSON.stringify(object);\n                }).join(' '));\n            } else if (typeof object === 'object') {\n                self.echo(JSON.stringify(object));\n            } else {\n                self.echo(object);\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Display line code in the file if line numbers are present\n        // ---------------------------------------------------------------------\n        function print_line(url_spec, cols) {\n            var re = /(.*):([0-9]+):([0-9]+)$/;\n            // google chrome have line and column after filename\n            var m = url_spec.match(re);\n            if (m) {\n                // TODO: do we need to call pause/resume or return promise?\n                self.pause(settings.softPause);\n                $.get(m[1], function(response) {\n                    var file = m[1];\n                    var code = response.split('\\n');\n                    var n = +m[2] - 1;\n                    var start = n > 2 ? n - 2 : 0;\n                    var lines = code.slice(start, n + 3).map(function(line, i) {\n                        var prefix = '[' + (n + i - 1) + ']: ';\n                        var limit = cols - prefix.length - 4;\n                        if (line.length > limit) {\n                            line = line.substring(0, limit) + '...';\n                        }\n                        if (n > 2 ? i === 2 : i === n) {\n                            line = '[[;#f00;]' +\n                                $.terminal.escape_brackets(line) + ']';\n                        }\n                        return prefix + line;\n                    }).filter(Boolean).join('\\n');\n                    if (lines.length) {\n                        self.echo('[[b;white;]' + file + ']');\n                        self.echo(lines).resume();\n                    }\n                }, 'text');\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Helper function\n        // ---------------------------------------------------------------------\n        function display_json_rpc_error(error) {\n            if (is_function(settings.onRPCError)) {\n                settings.onRPCError.call(self, error);\n            } else {\n                self.error('&#91;RPC&#93; ' + error.message);\n                if (error.error && error.error.message) {\n                    error = error.error;\n                    // more detailed error message\n                    var msg = '\\t' + error.message;\n                    if (error.file) {\n                        msg += ' in file \"' + error.file.replace(/.*\\//, '') + '\"';\n                    }\n                    if (error.at) {\n                        msg += ' at line ' + error.at;\n                    }\n                    self.error(msg);\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Create interpreter function from url string\n        // ---------------------------------------------------------------------\n        function make_basic_json_rpc(url, auth) {\n            var interpreter = function(method, params) {\n                self.pause(settings.softPause);\n                $.jrpc({\n                    url: url,\n                    method: method,\n                    params: params,\n                    request: function(jxhr, request) {\n                        try {\n                            settings.request.call(self, jxhr, request, self);\n                        } catch (e) {\n                            display_exception(e, 'USER');\n                        }\n                    },\n                    response: function(jxhr, response) {\n                        try {\n                            settings.response.call(self, jxhr, response, self);\n                        } catch (e) {\n                            display_exception(e, 'USER');\n                        }\n                    },\n                    success: function success(json) {\n                        if (json.error) {\n                            display_json_rpc_error(json.error);\n                        } else if (is_function(settings.processRPCResponse)) {\n                            settings.processRPCResponse.call(self, json.result, self);\n                        } else {\n                            display_object(json.result);\n                        }\n                        self.resume();\n                    },\n                    error: ajax_error\n                });\n            };\n            // this is the interpreter function\n            return function(command, terminal) {\n                if (command === '') {\n                    return;\n                }\n                try {\n                    command = get_processed_command(command);\n                } catch (e) {\n                    // exception can be thrown on invalid regex\n                    display_exception(e, 'TERMINAL (get_processed_command)');\n                    return;\n                    // throw e; // this will show stack in other try..catch\n                }\n                if (!auth || command.name === 'help') {\n                    // allows to call help without a token\n                    interpreter(command.name, command.args);\n                } else {\n                    var token = terminal.token();\n                    if (token) {\n                        interpreter(command.name, [token].concat(command.args));\n                    } else {\n                        // should never happen\n                        terminal.error('&#91;AUTH&#93; ' + strings().noTokenError);\n                    }\n                }\n            };\n        }\n        // ---------------------------------------------------------------------\n        // :: Create interpreter function from Object. If the value is object\n        // :: it will create nested interpreters\n        // ---------------------------------------------------------------------\n        function make_object_interpreter(object, arity, login, fallback) {\n            // function that maps commands to object methods\n            // it keeps terminal context\n            return function(user_command, terminal) {\n                if (user_command === '') {\n                    return;\n                }\n                // command = split_command_line(command);\n                var command;\n                try {\n                    command = get_processed_command(user_command);\n                } catch (e) {\n                    // exception can be thrown on invalid regex\n                    if (is_function(settings.exception)) {\n                        settings.exception(e, self);\n                    } else {\n                        self.error('Error: ' + (e.message || e));\n                    }\n                    return;\n                    // throw e; // this will show stack in other try..catch\n                }\n                var val = object[command.name];\n                var type = get_type(val);\n                if (type === 'function') {\n                    if (arity && val.length !== command.args.length) {\n                        self.error(\n                            '&#91;Arity&#93; ' +\n                                sprintf(\n                                    strings().wrongArity,\n                                    command.name,\n                                    val.length,\n                                    command.args.length\n                                )\n                        );\n                    } else {\n                        return val.apply(self, command.args);\n                    }\n                } else if (type === 'object' || type === 'string') {\n                    var commands = [];\n                    if (type === 'object') {\n                        commands = Object.keys(val);\n                        val = make_object_interpreter(\n                            val,\n                            arity,\n                            login\n                        );\n                    }\n                    terminal.push(val, {\n                        prompt: command.name + '> ',\n                        name: command.name,\n                        completion: type === 'object' ? commands : undefined\n                    });\n                } else if (is_function(fallback)) {\n                    fallback(user_command, self);\n                } else if (is_function(settings.onCommandNotFound)) {\n                    settings.onCommandNotFound.call(self, user_command, self);\n                } else {\n                    terminal.error(sprintf(strings().commandNotFound, command.name));\n                }\n            };\n        }\n        // ---------------------------------------------------------------------\n        function ajax_error(xhr, status, error) {\n            self.resume(); // onAjaxError can use pause/resume call it first\n            if (is_function(settings.onAjaxError)) {\n                settings.onAjaxError.call(self, xhr, status, error);\n            } else if (status !== 'abort') {\n                self.error('&#91;AJAX&#93; ' + status + ' - ' +\n                           strings().serverResponse + ':\\n' +\n                           $.terminal.escape_brackets(xhr.responseText));\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: function create interpreter object based on JSON-RPC meta data\n        // ---------------------------------------------------------------------\n        function make_json_rpc_object(url, auth, success) {\n            function jrpc_success(json) {\n                if (json.error) {\n                    display_json_rpc_error(json.error);\n                } else if (is_function(settings.processRPCResponse)) {\n                    settings.processRPCResponse.call(self, json.result, self);\n                } else {\n                    display_object(json.result);\n                }\n                self.resume();\n            }\n            function jrpc_request(jxhr, request) {\n                try {\n                    settings.request.call(self, jxhr, request, self);\n                } catch (e) {\n                    display_exception(e, 'USER');\n                }\n            }\n            function jrpc_response(jxhr, response) {\n                try {\n                    settings.response.call(self, jxhr, response, self);\n                } catch (e) {\n                    display_exception(e, 'USER');\n                }\n            }\n            function response(response) {\n                var procs = response;\n                // we check if it's false before we call this function but\n                // it don't hurt to be explicit here\n                if (settings.describe !== false && settings.describe !== '') {\n                    settings.describe.split('.').forEach(function(field) {\n                        procs = procs[field];\n                    });\n                }\n                if (procs && procs.length) {\n                    var interpreter_object = {};\n                    $.each(procs, function(_, proc) {\n                        if ($.isPlainObject(proc) && typeof proc.name === 'string') {\n                            interpreter_object[proc.name] = function() {\n                                var append = auth && proc.name !== 'help';\n                                var args = Array.prototype.slice.call(arguments);\n                                var args_len = args.length + (append ? 1 : 0);\n                                if (settings.checkArity && proc.params &&\n                                    proc.params.length !== args_len) {\n                                    self.error(\n                                        '&#91;Arity&#93; ' +\n                                            sprintf(\n                                                strings().wrongArity,\n                                                proc.name,\n                                                proc.params.length,\n                                                args_len\n                                            )\n                                    );\n                                } else {\n                                    self.pause(settings.softPause);\n                                    if (append) {\n                                        var token = self.token(true);\n                                        if (token) {\n                                            args = [token].concat(args);\n                                        } else {\n                                            self.error('&#91;AUTH&#93; ' +\n                                                       strings().noTokenError);\n                                        }\n                                    }\n                                    $.jrpc({\n                                        url: url,\n                                        method: proc.name,\n                                        params: args,\n                                        request: jrpc_request,\n                                        response: jrpc_response,\n                                        success: jrpc_success,\n                                        error: ajax_error\n                                    });\n                                }\n                            };\n                        }\n                    });\n                    var login = typeof auth === 'string' ? auth : 'login';\n                    interpreter_object.help = interpreter_object.help || function(fn) {\n                        if (typeof fn === 'undefined') {\n                            var names = procs.map(function(proc) {\n                                return proc.name;\n                            }).join(', ') + ', help';\n                            self.echo('Available commands: ' + names);\n                        } else {\n                            var found = false;\n                            $.each(procs, function(_, proc) {\n                                if (proc.name === fn) {\n                                    found = true;\n                                    var msg = '';\n                                    msg += '[[bu;;]' + proc.name + ']';\n                                    if (proc.params) {\n                                        var params = proc.params;\n                                        if (auth && proc.name !== login) {\n                                            params = params.slice(1);\n                                        }\n                                        msg += ' ' + params.join(' ');\n                                    }\n                                    if (proc.help) {\n                                        msg += '\\n' + proc.help;\n                                    }\n                                    self.echo(msg);\n                                    return false;\n                                }\n                            });\n                            if (!found) {\n                                if (fn === 'help') {\n                                    self.echo('[[bu;;]help] [method]\\ndisplay help ' +\n                                              'for the method or list of methods if not' +\n                                              ' specified');\n                                } else {\n                                    var msg = 'Method `' + fn + \"' not found \";\n                                    self.error(msg);\n                                }\n                            }\n                        }\n                    };\n                    success(interpreter_object);\n                } else {\n                    success(null);\n                }\n            }\n            return $.jrpc({\n                url: url,\n                method: 'system.describe',\n                params: [],\n                success: response,\n                request: jrpc_request,\n                response: jrpc_response,\n                error: function error() {\n                    success(null);\n                }\n            });\n        }\n        // ---------------------------------------------------------------------\n        // :: function create interpeter function and call finalize with\n        // :: interpreter and optional completion\n        // ---------------------------------------------------------------------\n        function make_interpreter(user_intrp, login, finalize) {\n            finalize = finalize || $.noop;\n            var type = get_type(user_intrp);\n            var object;\n            var result = {};\n            var rpc_count = 0; // only one rpc can be use for array\n            var fn_interpreter;\n            if (type === 'array') {\n                object = {};\n                // recur will be called when previous acync call is finished\n                (function recur(interpreters, success) {\n                    if (interpreters.length) {\n                        var first = interpreters[0];\n                        var rest = interpreters.slice(1);\n                        var type = get_type(first);\n                        if (type === 'string') {\n                            self.pause(settings.softPause);\n                            if (settings.describe === false) {\n                                if (++rpc_count === 1) {\n                                    fn_interpreter = make_basic_json_rpc(first, login);\n                                } else {\n                                    self.error(strings().oneRPCWithIgnore);\n                                }\n                                recur(rest, success);\n                            } else {\n                                make_json_rpc_object(first, login, function(new_obj) {\n                                    if (new_obj) {\n                                        $.extend(object, new_obj);\n                                    } else if (++rpc_count === 1) {\n                                        fn_interpreter = make_basic_json_rpc(\n                                            first,\n                                            login\n                                        );\n                                    } else {\n                                        self.error(strings().oneRPCWithIgnore);\n                                    }\n                                    self.resume();\n                                    recur(rest, success);\n                                });\n                            }\n                        } else if (type === 'function') {\n                            if (fn_interpreter) {\n                                self.error(strings().oneInterpreterFunction);\n                            } else {\n                                fn_interpreter = first;\n                            }\n                            recur(rest, success);\n                        } else if (type === 'object') {\n                            $.extend(object, first);\n                            recur(rest, success);\n                        }\n                    } else {\n                        success();\n                    }\n                })(user_intrp, function() {\n                    finalize({\n                        interpreter: make_object_interpreter(\n                            object,\n                            false,\n                            login,\n                            fn_interpreter && fn_interpreter.bind(self)\n                        ),\n                        completion: Object.keys(object)\n                    });\n                });\n            } else if (type === 'string') {\n                if (settings.describe === false) {\n                    object = {\n                        interpreter: make_basic_json_rpc(user_intrp, login)\n                    };\n                    if ($.isArray(settings.completion)) {\n                        object.completion = settings.completion;\n                    }\n                    finalize(object);\n                } else {\n                    self.pause(settings.softPause);\n                    make_json_rpc_object(user_intrp, login, function(object) {\n                        if (object) {\n                            result.interpreter = make_object_interpreter(\n                                object,\n                                false,\n                                login\n                            );\n                            result.completion = Object.keys(object);\n                        } else {\n                            // no procs in system.describe\n                            result.interpreter = make_basic_json_rpc(user_intrp, login);\n                        }\n                        finalize(result);\n                        self.resume();\n                    });\n                }\n            } else if (type === 'object') {\n                finalize({\n                    interpreter: make_object_interpreter(\n                        user_intrp,\n                        settings.checkArity,\n                        login\n                    ),\n                    completion: Object.keys(user_intrp)\n                });\n            } else {\n                // allow $('<div/>').terminal();\n                if (type === 'undefined') {\n                    user_intrp = $.noop;\n                } else if (type !== 'function') {\n                    var msg = type + ' is invalid interpreter value';\n                    throw new $.terminal.Exception(msg);\n                }\n                // single function don't need bind\n                finalize({\n                    interpreter: user_intrp,\n                    completion: settings.completion\n                });\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Create JSON-RPC authentication function\n        // ---------------------------------------------------------------------\n        function make_json_rpc_login(url, login) {\n            var method = get_type(login) === 'boolean' ? 'login' : login;\n            return function(user, passwd, callback) {\n                self.pause(settings.softPause);\n                $.jrpc({\n                    url: url,\n                    method: method,\n                    params: [user, passwd],\n                    request: function(jxhr, request) {\n                        try {\n                            settings.request.call(self, jxhr, request, self);\n                        } catch (e) {\n                            display_exception(e, 'USER');\n                        }\n                    },\n                    response: function(jxhr, response) {\n                        try {\n                            settings.response.call(self, jxhr, response, self);\n                        } catch (e) {\n                            display_exception(e, 'USER');\n                        }\n                    },\n                    success: function success(response) {\n                        if (!response.error && response.result) {\n                            callback(response.result);\n                        } else {\n                            // null will trigger message that login fail\n                            callback(null);\n                        }\n                        self.resume();\n                    },\n                    error: ajax_error\n                });\n            };\n            // default name is login so you can pass true\n        }\n        // ---------------------------------------------------------------------\n        // :: display Exception on terminal\n        // ---------------------------------------------------------------------\n        function display_exception(e, label, silent) {\n            if (is_function(settings.exceptionHandler)) {\n                settings.exceptionHandler.call(self, e, label);\n            } else {\n                self.exception(e, label);\n                if (!silent) {\n                    setTimeout(function() {\n                        throw e;\n                    }, 0);\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Draw line - can have line breaks and be longer than the width of\n        // :: the terminal, there are 2 options raw and finalize\n        // :: raw - will not encode the string and finalize if a function that\n        // :: will have div container of the line as first argument\n        // :: NOTE: it formats and appends lines to output_buffer. The actual\n        // :: append to terminal output happens in the flush function\n        // ---------------------------------------------------------------------\n        function push_line(string) {\n            output_buffer.push({line: string});\n        }\n        // ---------------------------------------------------------------------\n        var output_buffer = [];\n        var NEW_LINE = 1;\n        function buffer_line(string, index, options) {\n            // urls should always have formatting to keep url if split\n            var i, len;\n            output_buffer.push(NEW_LINE);\n            if (!options.raw) {\n                var format_options = {\n                    linksNoReferrer: settings.linksNoReferrer,\n                    linksNoFollow: settings.linksNoFollow,\n                    anyLinks: settings.anyLinks,\n                    char_width: char_size.width,\n                    escape: false,\n                    allowedAttributes: options.allowedAttributes || []\n                };\n                //string = $.terminal.normalize(string);\n                var cols = self.cols();\n                if ((strlen(text(string)) > cols ||\n                     string.match(/\\n/)) &&\n                    ((settings.wrap === true && options.wrap === undefined) ||\n                     settings.wrap === false && options.wrap === true)) {\n                    var words = options.keepWords;\n                    var array = $.terminal.split_equal(string, cols, words);\n                    for (i = 0, len = array.length; i < len; ++i) {\n                        if (array[i] === '' || array[i] === '\\r') {\n                            output_buffer.push({line: '<span></span>'});\n                        } else {\n                            var data = {\n                                line: $.terminal.format(\n                                    array[i],\n                                    format_options\n                                )\n                            };\n                            if (i === len - 1) {\n                                data.newline = true;\n                            }\n                            output_buffer.push(data);\n                        }\n                    }\n                } else {\n                    string = $.terminal.format(string, format_options);\n                    string.split(/\\n/).forEach(push_line);\n                }\n            } else {\n                push_line(string);\n            }\n            output_buffer.push({\n                finalize: options.finalize,\n                index: index\n            });\n        }\n        // ---------------------------------------------------------------------\n        function links(string) {\n            function format(_, style, color, background, _class, data, text) {\n                function formatting(s, text) {\n                    return '[[' + [\n                        style + (s || ''),\n                        color,\n                        background,\n                        _class,\n                        data || text\n                    ].join(';') + ']';\n                }\n                function escaped(_) {\n                    return ']' + formatting('!', _) + _ + ']' + formatting();\n                }\n                if (!style.match(/!/)) {\n                    if (text.match(email_full_re) || text.match(url_full_re)) {\n                        return formatting('!', text) + text + ']';\n                    } else if (text.match(email_re) || text.match(url_nf_re)) {\n                        var output = text.replace(email_re, escaped)\n                            .replace(url_nf_re, escaped);\n                        return formatting('', data) + output + ']';\n                    }\n                }\n                return _;\n            }\n            if (!(string.match(email_re) || string.match(url_nf_re))) {\n                return string;\n            }\n            if (!$.terminal.have_formatting(string)) {\n                return string.replace(email_re, '[[!;;]$1]').\n                    replace(url_nf_re, '[[!;;]$1]');\n            }\n            return $.terminal.format_split(string).map(function(str) {\n                if ($.terminal.is_formatting(str)) {\n                    return str.replace(format_parts_re, format);\n                } else {\n                    return str.replace(email_re, '[[!;;]$1]').\n                        replace(url_nf_re, '[[!;;]$1]');\n                }\n            }).join('');\n        }\n        // ---------------------------------------------------------------------\n        function process_line(line) {\n            // prevent exception in display exception\n            try {\n                var line_settings = $.extend({\n                    exec: true,\n                    raw: false,\n                    finalize: $.noop,\n                    invokeMethods: false,\n                    formatters: true,\n                    convertLinks: settings.convertLinks\n                }, line.options || {});\n                var string;\n                string = stringify_value(line.value);\n                if (string !== '') {\n                    if (!line_settings.raw) {\n                        if (line_settings.formatters) {\n                            try {\n                                string = $.terminal.apply_formatters(\n                                    string,\n                                    settings\n                                );\n                            } catch (e) {\n                                display_exception(e, 'FORMATTING');\n                            }\n                        }\n                        if (line_settings.exec) {\n                            var parts = string.split(format_exec_re);\n                            string = $.map(parts, function(string) {\n                                if (string && string.match(format_exec_re) &&\n                                    !$.terminal.is_formatting(string)) {\n                                    // redraw should not execute commands and it have\n                                    // and lines variable have all extended commands\n                                    string = string.replace(/^\\[\\[|\\]\\]$/g, '');\n                                    if (line_settings.exec) {\n                                        var trim = string.trim();\n                                        if (prev_exec_cmd && prev_exec_cmd === trim) {\n                                            prev_exec_cmd = '';\n                                            self.error(strings().recursiveCall);\n                                        } else {\n                                            prev_exec_cmd = trim;\n                                            $.terminal.extended_command(self, string, {\n                                                invokeMethods: line_settings.invokeMethods\n                                            });\n                                        }\n                                    }\n                                    return '';\n                                } else {\n                                    return string;\n                                }\n                            }).join('');\n                        }\n                        if (string === '') {\n                            return;\n                        }\n                        if (line_settings.convertLinks) {\n                            string = links(string);\n                        }\n                        string = crlf($.terminal.normalize(string));\n                        string = $.terminal.encode(string, {\n                            tabs: settings.tabs\n                        });\n                    }\n                }\n                buffer_line(string, line.index, line_settings);\n            } catch (e) {\n                output_buffer = [];\n                // don't display exception if exception throw in terminal\n                if (is_function(settings.exceptionHandler)) {\n                    settings.exceptionHandler.call(self, e, 'TERMINAL');\n                } else {\n                    alert_exception('[Internal Exception(process_line)]', e);\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Update terminal lines\n        // ---------------------------------------------------------------------\n        function redraw(options) {\n            options = $.extend({}, {\n                // should be used when single line is updated\n                update: false,\n                // should be used if you want to scroll to bottom after redraw\n                scroll: true\n            }, options || {});\n            if (!options.update) {\n                command_line.resize(num_chars);\n                // we don't want reflow while processing lines\n                var detached_output = output.empty().detach();\n            }\n            var lines_to_show = [];\n            // Dead code\n            if (settings.outputLimit >= 0) {\n                // flush will limit lines but if there is lot of\n                // lines we don't need to show them and then remove\n                // them from terminal\n                var limit;\n                if (settings.outputLimit === 0) {\n                    limit = self.rows();\n                } else {\n                    limit = settings.outputLimit;\n                }\n                lines.forEach(function(line, index) {\n                    var value = line[0];\n                    var options = line[1];\n                    lines_to_show.push({\n                        value: value,\n                        index: index,\n                        options: options\n                    });\n                });\n                var pivot = lines_to_show.length - limit - 1;\n                lines_to_show = lines_to_show.slice(pivot);\n            } else {\n                lines_to_show = lines.map(function(line, index) {\n                    return {\n                        value: line[0],\n                        index: index,\n                        options: line[1]\n                    };\n                });\n            }\n            try {\n                output_buffer = [];\n                $.each(lines_to_show, function(i, line) {\n                    process_line(line);\n                });\n                if (!options.update) {\n                    command_line.before(detached_output); // reinsert output\n                }\n                self.flush(options);\n                fire_event('onAfterRedraw');\n            } catch (e) {\n                if (is_function(settings.exceptionHandler)) {\n                    settings.exceptionHandler.call(self, e, 'TERMINAL (redraw)');\n                } else {\n                    alert_exception('[redraw]', e);\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Function limit output lines based on outputLimit option\n        // ---------------------------------------------------------------------\n        function limit_lines() {\n            if (settings.outputLimit >= 0) {\n                var limit;\n                if (settings.outputLimit === 0) {\n                    limit = self.rows();\n                } else {\n                    limit = settings.outputLimit;\n                }\n                var $lines = output.find('> div > div');\n                if ($lines.length + 1 > limit) {\n                    var max = $lines.length - limit + 1;\n                    var for_remove = $lines.slice(0, max);\n                    // you can't get parent if you remove the\n                    // element so we first get the parent\n                    var parents = for_remove.parent();\n                    for_remove.remove();\n                    parents.each(function() {\n                        var $self = $(this);\n                        if ($self.is(':empty')) {\n                            unmount($self);\n                            // there can be divs inside parent that\n                            // was not removed\n                            $self.remove();\n                        }\n                    });\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Display user greetings or terminal signature\n        // ---------------------------------------------------------------------\n        function show_greetings() {\n            if (settings.greetings === undefined) {\n                // signature have ascii art so it's not suite for screen readers\n                self.echo(self.signature, {finalize: a11y_hide, formatters: false});\n            } else if (settings.greetings) {\n                var type = typeof settings.greetings;\n                if (type === 'string') {\n                    self.echo(settings.greetings);\n                } else if (type === 'function') {\n                    try {\n                        var ret = settings.greetings.call(self, self.echo);\n                        var error = make_label_error('Greetings');\n                        unpromise(ret, self.echo, function(e) {\n                            error(e);\n                            settings.greetings = null;\n                        });\n                    } catch (e) {\n                        settings.greetings = null;\n                        display_exception(e, 'greetings');\n                    }\n                } else {\n                    self.error(strings().wrongGreetings);\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Display prompt and last command\n        // ---------------------------------------------------------------------\n        function echo_command(command) {\n            if (typeof command === 'undefined') {\n                command = self.get_command();\n            }\n            // true will return last rendered string\n            var prompt = command_line.prompt(true);\n            var mask = command_line.mask();\n            switch (typeof mask) {\n                case 'string':\n                    command = command.replace(/./g, mask);\n                    break;\n                case 'boolean':\n                    if (mask) {\n                        command = command.replace(/./g, settings.maskChar);\n                    } else {\n                        command = $.terminal.escape_formatting(command);\n                    }\n                    break;\n            }\n            var options = {\n                convertLinks: false,\n                exec: false,\n                finalize: function finalize(div) {\n                    a11y_hide(div.addClass('terminal-command'));\n                    fire_event('onEchoCommand', [div, command]);\n                }\n            };\n            self.echo(prompt + command, options);\n        }\n        // ---------------------------------------------------------------------\n        function have_scrollbar() {\n            if (self.is('body')) {\n                // source: https://stackoverflow.com/a/6639405/387194\n                // from comment by Šime Vidas\n                return window.innerWidth - document.documentElement.clientWidth > 0;\n            }\n            return fill.outerWidth() !== self.outerWidth();\n        }\n        // ---------------------------------------------------------------------\n        // :: Helper function that restore state. Call import_view or exec\n        // ---------------------------------------------------------------------\n        function restore_state(spec) {\n            // spec [terminal_id, state_index, command]\n            var terminal = terminals.get()[spec[0]];\n            if (!terminal) {\n                throw new $.terminal.Exception(strings().invalidTerminalId);\n            }\n            var command_idx = spec[1];\n            if (save_state[command_idx]) { // state exists\n                terminal.import_view(save_state[command_idx]);\n            } else {\n                // restore state\n                change_hash = false;\n                var command = spec[2];\n                if (command) {\n                    terminal.exec(command).done(function() {\n                        change_hash = true;\n                        save_state[command_idx] = terminal.export_view();\n                    });\n                }\n            }\n            /*if (spec[3].length) {\n                restore_state(spec[3]);\n            }*/\n        }\n        // ---------------------------------------------------------------------\n        function make_label_error(label) {\n            return function(e) {\n                self.error('[' + label + '] ' + (e.message || e)).resume();\n            };\n        }\n        // ---------------------------------------------------------------------\n        // :: Helper function\n        // ---------------------------------------------------------------------\n        function maybe_update_hash() {\n            if (change_hash) {\n                fire_hash_change = false;\n                location.hash = '#' + JSON.stringify(hash_commands);\n                setTimeout(function() {\n                    fire_hash_change = true;\n                }, 100);\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Wrapper over interpreter, it implements exit and catches all\n        // :: exeptions from user code and displays them on the terminal\n        // ---------------------------------------------------------------------\n        var first_command = true;\n        var resume_callbacks = [];\n        function commands(command, silent, exec) {\n            function init_state() {\n                // execHash need first empty command too\n                if (settings.historyState || settings.execHash && exec) {\n                    if (!save_state.length) {\n                        // first command in first terminal don't have hash\n                        self.save_state();\n                    } else {\n                        self.save_state(null);\n                    }\n                }\n            }\n            // -----------------------------------------------------------------\n            function after_exec() {\n                // variables defined later in commands\n                if (!exec) {\n                    change_hash = true;\n                    if (settings.historyState) {\n                        self.save_state(command, false);\n                    }\n                    change_hash = saved_change_hash;\n                }\n                deferred.resolve();\n                fire_event('onAfterCommand', [command]);\n            }\n            // -----------------------------------------------------------------\n            function show(result) {\n                if (typeof result !== 'undefined') {\n                    display_object(result);\n                }\n                after_exec();\n                self.resume();\n            }\n            // -----------------------------------------------------------------\n\n            // -----------------------------------------------------------------\n            function invoke() {\n                // Call user interpreter function\n                var result = interpreter.interpreter.call(self, command, self);\n                if (result) {\n                    // auto pause/resume when user return promises\n                    // it should not pause when user return promise from read()\n                    if (!force_awake) {\n                        self.pause(settings.softPause);\n                    }\n                    force_awake = false;\n                    var error = make_label_error('Command');\n                    // when for native Promise object work only in jQuery 3.x\n                    if (is_function(result.done || result.then)) {\n                        return unpromise(result, show, error);\n                    } else {\n                        return $.when(result).done(show).catch(error);\n                    }\n                } else if (paused) {\n                    resume_callbacks.push(function() {\n                        // exec with resume/pause in user code\n                        after_exec();\n                    });\n                } else {\n                    after_exec();\n                }\n            }\n            // -----------------------------------------------------------------\n            // first command store state of the terminal before the command get\n            // executed\n            if (first_command) {\n                first_command = false;\n                init_state();\n            }\n            try {\n                // this callback can disable commands\n                if (fire_event('onBeforeCommand', [command]) === false) {\n                    return;\n                }\n                if (exec) {\n                    prev_exec_cmd = command.trim();\n                } else {\n                    prev_command = $.terminal.split_command(command);\n                }\n                if (!ghost()) {\n                    // exec execute this function wihout the help of cmd plugin\n                    // that add command to history on enter\n                    if (exec && (is_function(settings.historyFilter) &&\n                                 settings.historyFilter(command) ||\n                                 command.match(settings.historyFilter))) {\n                        command_line.history().append(command);\n                    }\n                }\n                var interpreter = interpreters.top();\n                if (!silent && settings.echoCommand) {\n                    echo_command(command);\n                }\n                // new promise will be returned to exec that will resolve his\n                // returned promise\n                var deferred = new $.Deferred();\n                // we need to save sate before commands is deleyd because\n                // execute_extended_command disable it and it can be executed\n                // after delay\n                var saved_change_hash = change_hash;\n                if (command.match(/^\\s*login\\s*$/) && self.token(true)) {\n                    if (self.level() > 1) {\n                        self.logout(true);\n                    } else {\n                        self.logout();\n                    }\n                    after_exec();\n                } else if (settings.exit && command.match(/^\\s*exit\\s*$/) &&\n                           !in_login) {\n                    var level = self.level();\n                    if (level === 1 && self.get_token() || level > 1) {\n                        if (self.get_token(true)) {\n                            self.set_token(undefined, true);\n                        }\n                        self.pop();\n                    }\n                    after_exec();\n                } else if (settings.clear && command.match(/^\\s*clear\\s*$/) &&\n                           !in_login) {\n                    self.clear();\n                    after_exec();\n                } else {\n                    var ret = invoke();\n                    if (ret) {\n                        return ret;\n                    }\n                }\n                return deferred.promise();\n            } catch (e) {\n                display_exception(e, 'USER', exec);\n                self.resume();\n                if (exec) {\n                    throw e;\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: The logout function removes Storage, disables history and runs\n        // :: the login function. This function is called only when options.login\n        // :: function is defined. The check for this is in the self.pop method\n        // ---------------------------------------------------------------------\n        function global_logout() {\n            if (fire_event('onBeforeLogout', [], true) === false) {\n                return;\n            }\n            clear_loging_storage();\n            fire_event('onAfterlogout', [], true);\n            self.login(global_login_fn, true, initialize);\n        }\n        // ---------------------------------------------------------------------\n        function clear_loging_storage() {\n            var name = self.prefix_name(true) + '_';\n            storage.remove(name + 'token');\n            storage.remove(name + 'login');\n        }\n        // ---------------------------------------------------------------------\n        // :: Save the interpreter name for use with purge\n        // ---------------------------------------------------------------------\n        function maybe_append_name(interpreter_name) {\n            var storage_key = self.prefix_name() + '_interpreters';\n            var names = storage.get(storage_key);\n            if (names) {\n                names = JSON.parse(names);\n            } else {\n                names = [];\n            }\n            if ($.inArray(interpreter_name, names) === -1) {\n                names.push(interpreter_name);\n                storage.set(storage_key, JSON.stringify(names));\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Function enables history, sets prompt, runs interpreter function\n        // ---------------------------------------------------------------------\n        function prepare_top_interpreter(silent) {\n            var interpreter = interpreters.top();\n            var name = self.prefix_name(true);\n            if (!ghost()) {\n                maybe_append_name(name);\n            }\n            var login = self.login_name(true);\n            command_line.name(name + (login ? '_' + login : ''));\n            var prompt = interpreter.prompt;\n            if (is_function(prompt)) {\n                prompt = context_callback_proxy(prompt);\n            }\n            if (prompt !== command_line.prompt()) {\n                if (is_function(interpreter.prompt)) {\n                    // prevent flicker of old prompt until async prompt finishes\n                    command_line.prompt('');\n                }\n                command_line.prompt(interpreter.prompt);\n            }\n            if (typeof interpreter.history !== 'undefined') {\n                self.history().toggle(interpreter.history);\n            }\n            if ($.isPlainObject(interpreter.keymap)) {\n                command_line.keymap($.omap(interpreter.keymap, function(name, fun) {\n                    return function() {\n                        var args = [].slice.call(arguments);\n                        try {\n                            return fun.apply(self, args);\n                        } catch (e) {\n                            display_exception(e, 'USER KEYMAP');\n                        }\n                    };\n                }));\n            }\n            command_line.set('');\n            init_queue.resolve();\n            if (!silent && is_function(interpreter.onStart)) {\n                interpreter.onStart.call(self, self);\n            }\n        }\n        // ---------------------------------------------------------------------\n        function fire_event(name, args, skip_local) {\n            args = (args || []).concat([self]); // create new array\n            // even can be fired before interpreters is created\n            var top = interpreters && interpreters.top();\n            if (top && is_function(top[name]) && !skip_local) {\n                try {\n                    return top[name].apply(self, args);\n                } catch (e) {\n                    delete top[name];\n                    display_exception(e, name);\n                }\n            } else if (is_function(settings[name])) {\n                try {\n                    return settings[name].apply(self, args);\n                } catch (e) {\n                    settings[name] = null;\n                    display_exception(e, name);\n                }\n            }\n        }\n        var scroll_to_view = (function() {\n            function scroll_to_view(visible) {\n                if (!visible) {\n                    // try catch for Node.js unit tests\n                    try {\n                        self.scroll_to(self.find('.cmd-cursor'));\n                        return true;\n                    } catch (e) {\n                        return true;\n                    }\n                }\n            }\n            // we don't want debounce in Unit Tests\n            if (typeof global !== 'undefined' && typeof global.it === 'function') {\n                return scroll_to_view;\n            }\n            return debounce(scroll_to_view, 100, {\n                leading: true,\n                trailing: false\n            });\n        })();\n        // ---------------------------------------------------------------------\n        function make_cursor_visible() {\n            var cursor = self.find('.cmd-cursor-line');\n            return cursor.is_fully_in_viewport(self).then(scroll_to_view);\n        }\n        // ---------------------------------------------------------------------\n        function hashchange() {\n            if (fire_hash_change && settings.execHash) {\n                try {\n                    if (location.hash) {\n                        var hash = location.hash.replace(/^#/, '');\n                        hash_commands = JSON.parse(decodeURIComponent(hash));\n                    } else {\n                        hash_commands = [];\n                    }\n                    if (hash_commands.length) {\n                        restore_state(hash_commands[hash_commands.length - 1]);\n                    } else if (save_state[0]) {\n                        self.import_view(save_state[0]);\n                    }\n                } catch (e) {\n                    display_exception(e, 'TERMINAL');\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        function initialize() {\n            prepare_top_interpreter();\n            show_greetings();\n            if (lines.length) {\n                self.refresh(); // for case when showing long error before init\n            }\n            // was_paused flag is workaround for case when user call exec before\n            // login and pause in onInit, 3rd exec will have proper timing (will\n            // execute after onInit resume)\n            var was_paused = false;\n            if (is_function(settings.onInit)) {\n                onPause = function() { // local in terminal\n                    was_paused = true;\n                };\n                try {\n                    settings.onInit.call(self, self);\n                } catch (e) {\n                    display_exception(e, 'OnInit');\n                    // throw e; // it will be catched by terminal\n                } finally {\n                    onPause = $.noop;\n                    if (!was_paused && self.enabled()) {\n                        // resume login if user didn't call pause in onInit\n                        // if user pause in onInit wait with exec until it\n                        // resume\n                        self.resume(true);\n                    }\n                }\n            }\n            if (first_instance) {\n                first_instance = false;\n                $(window).on('hashchange', hashchange);\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: If Ghost don't store anything in localstorage\n        // ---------------------------------------------------------------------\n        function ghost() {\n            return in_login || command_line.mask() !== false;\n        }\n        // ---------------------------------------------------------------------\n        // :: Keydown event handler\n        // ---------------------------------------------------------------------\n        function user_key_down(e) {\n            var result, top = interpreters.top();\n            if (is_function(top.keydown)) {\n                result = top.keydown.call(self, e, self);\n                if (result !== undefined) {\n                    return result;\n                }\n            } else if (is_function(settings.keydown)) {\n                result = settings.keydown.call(self, e, self);\n                if (result !== undefined) {\n                    return result;\n                }\n            }\n        }\n        var keymap = {\n            'CTRL+D': function(e, original) {\n                if (!in_login) {\n                    if (command_line.get() === '') {\n                        if (interpreters.size() > 1 ||\n                            is_function(global_login_fn)) {\n                            self.pop('');\n                        } else {\n                            self.resume();\n                            self.echo('');\n                        }\n                    } else {\n                        original();\n                    }\n                }\n                return false;\n            },\n            'CTRL+C': function() {\n                with_selection(function(html) {\n                    if (html === '') {\n                        var command = self.get_command();\n                        var position = self.get_position();\n                        command = command.slice(0, position) + '^C' +\n                            command.slice(position + 2);\n                        echo_command(command);\n                        self.set_command('');\n                    } else {\n                        var clip = self.find('textarea');\n                        text_to_clipboard(clip, process_selected_html(html));\n                    }\n                });\n                return false;\n            },\n            'CTRL+L': function() {\n                self.clear();\n            },\n            'TAB': function(e, orignal) {\n                // TODO: move this to cmd plugin\n                //       add completion = array | function\n                //       !!! Problem complete more then one key need terminal\n                var top = interpreters.top(), completion, caseSensitive;\n                if (typeof top.caseSensitiveAutocomplete !== 'undefined') {\n                    caseSensitive = top.caseSensitiveAutocomplete;\n                } else {\n                    caseSensitive = settings.caseSensitiveAutocomplete;\n                }\n                if (settings.completion &&\n                    get_type(settings.completion) !== 'boolean' &&\n                    top.completion === undefined) {\n                    completion = settings.completion;\n                } else {\n                    completion = top.completion;\n                }\n                if (completion === 'settings') {\n                    completion = settings.completion;\n                }\n                function resolve(commands) {\n                    // local copy\n                    commands = commands.slice();\n                    // default commands should not match for arguments\n                    if (!self.before_cursor(false).match(/\\s/)) {\n                        if (settings.clear && $.inArray('clear', commands) === -1) {\n                            commands.push('clear');\n                        }\n                        if (settings.exit && $.inArray('exit', commands) === -1) {\n                            commands.push('exit');\n                        }\n                    }\n                    self.complete(commands, {\n                        echo: true,\n                        word: settings.wordAutocomplete,\n                        escape: settings.completionEscape,\n                        caseSensitive: caseSensitive,\n                        echoCommand: settings.doubleTabEchoCommand,\n                        doubleTab: settings.doubleTab\n                    });\n                }\n                if (completion) {\n                    switch (get_type(completion)) {\n                        case 'function':\n                            var string = self.before_cursor(settings.wordAutocomplete);\n                            if (completion.length === 3) {\n                                var error = new Error(strings().comletionParameters);\n                                display_exception(error, 'USER');\n                                return false;\n                            }\n                            var result = completion.call(self, string, resolve);\n                            unpromise(result, resolve, make_label_error('Completion'));\n                            break;\n                        case 'array':\n                            resolve(completion);\n                            break;\n                        default:\n                            throw new $.terminal.Exception(strings().invalidCompletion);\n                    }\n                } else {\n                    orignal();\n                }\n                return false;\n            },\n            'CTRL+V': function(e, original) {\n                original(e);\n                self.oneTime(200, function() {\n                    self.scroll_to_bottom();\n                });\n                return true;\n            },\n            'CTRL+TAB': function() {\n                if (terminals.length() > 1) {\n                    self.focus(false);\n                    return false;\n                }\n            },\n            'PAGEDOWN': function() {\n                self.scroll(self.height());\n            },\n            'PAGEUP': function() {\n                self.scroll(-self.height());\n            }\n        };\n        // ---------------------------------------------------------------------\n        function key_down(e) {\n            // Prevent to be executed by cmd: CTRL+D, TAB, CTRL+TAB (if more\n            // then one terminal)\n            var result, i;\n            if (self.enabled()) {\n                if (!self.paused()) {\n                    result = user_key_down(e);\n                    if (result !== undefined) {\n                        return result;\n                    }\n                    if (e.which !== 9) { // not a TAB\n                        tab_count = 0;\n                    }\n                } else {\n                    if (!settings.pauseEvents) {\n                        result = user_key_down(e);\n                        if (result !== undefined) {\n                            return result;\n                        }\n                    }\n                    if (e.which === 68 && e.ctrlKey) { // CTRL+D (if paused)\n                        if (settings.pauseEvents) {\n                            result = user_key_down(e);\n                            if (result !== undefined) {\n                                return result;\n                            }\n                        }\n                        if (requests.length) {\n                            for (i = requests.length; i--;) {\n                                var r = requests[i];\n                                if (r.readyState !== 4) {\n                                    try {\n                                        r.abort();\n                                    } catch (error) {\n                                        if (is_function(settings.exceptionHandler)) {\n                                            settings.exceptionHandler.call(\n                                                self,\n                                                e,\n                                                'AJAX ABORT'\n                                            );\n                                        } else {\n                                            self.error(strings().ajaxAbortError);\n                                        }\n                                    }\n                                }\n                            }\n                            requests = [];\n                        }\n                        self.resume();\n                    }\n                    return false;\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        function key_press(e) {\n            var top = interpreters.top();\n            if (enabled && (!paused || !settings.pauseEvents)) {\n                if (is_function(top.keypress)) {\n                    return top.keypress.call(self, e, self);\n                } else if (is_function(settings.keypress)) {\n                    return settings.keypress.call(self, e, self);\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        function ready(queue) {\n            return function(fun) {\n                queue.add(fun);\n            };\n        }\n        // ---------------------------------------------------------------------\n        function strings() {\n            return $.extend(\n                {},\n                $.terminal.defaults.strings,\n                settings && settings.strings || {}\n            );\n        }\n        // ---------------------------------------------------------------------\n        var self = this;\n        if (self.is('body,html')) {\n            self = $('<div/>').appendTo('body');\n            $('body').addClass('full-screen-terminal');\n        }\n        if (this.length > 1) {\n            return this.each(function() {\n                $.fn.terminal.call(\n                    $(this),\n                    init_interpreter,\n                    $.extend({name: self.selector}, options)\n                );\n            });\n        }\n        // terminal already exists\n        if (self.data('terminal')) {\n            return self.data('terminal');\n        }\n        // -----------------------------------------------------------------\n        // TERMINAL METHODS\n        // -----------------------------------------------------------------\n        $.extend(self, $.omap({\n            id: function() {\n                return terminal_id;\n            },\n            // -------------------------------------------------------------\n            // :: Clear the output\n            // -------------------------------------------------------------\n            clear: function() {\n                if (fire_event('onClear') !== false) {\n                    lines.forEach(function(line, i) {\n                        var options = line[1];\n                        options.onClear.call(self, get_node(i));\n                    });\n                    lines = [];\n                    output.html('');\n                    self.attr({scrollTop: 0});\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Return an object that can be used with import_view to\n            // :: restore the state\n            // -------------------------------------------------------------\n            export_view: function() {\n                var user_export = fire_event('onExport');\n                user_export = user_export || {};\n                return $.extend({}, {\n                    focus: enabled,\n                    mask: command_line.mask(),\n                    prompt: self.get_prompt(),\n                    command: self.get_command(),\n                    position: command_line.position(),\n                    lines: clone(lines),\n                    interpreters: interpreters.clone(),\n                    history: command_line.history().data\n                }, user_export);\n            },\n            // -------------------------------------------------------------\n            // :: Restore the state of the previous exported view\n            // -------------------------------------------------------------\n            import_view: function(view) {\n                if (in_login) {\n                    throw new Error(sprintf(strings().notWhileLogin, 'import_view'));\n                }\n                fire_event('onImport', [view]);\n                when_ready(function ready() {\n                    self.set_prompt(view.prompt);\n                    self.set_command(view.command);\n                    command_line.position(view.position);\n                    command_line.mask(view.mask);\n                    if (view.focus) {\n                        self.focus();\n                    }\n                    lines = clone(view.lines).filter(function(line) {\n                        return line[0];\n                    });\n                    if (view.interpreters instanceof Stack) {\n                        interpreters = view.interpreters;\n                    }\n                    if (settings.importHistory) {\n                        command_line.history().set(view.history);\n                    }\n                    redraw();\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Store current terminal state\n            // -------------------------------------------------------------\n            save_state: function(command, ignore_hash, index) {\n                // save_state.push({view:self.export_view(), join:[]});\n                if (typeof index !== 'undefined') {\n                    save_state[index] = self.export_view();\n                } else {\n                    save_state.push(self.export_view());\n                }\n                if (!$.isArray(hash_commands)) {\n                    hash_commands = [];\n                }\n                if (command !== undefined && !ignore_hash) {\n                    var state = [\n                        terminal_id,\n                        save_state.length - 1,\n                        command\n                    ];\n                    hash_commands.push(state);\n                    maybe_update_hash();\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Execute a command, it will handle commands that do AJAX\n            // :: calls and have delays, if the second argument is set to\n            // :: true it will not echo executed command\n            // -------------------------------------------------------------\n            exec: function(command, silent, deferred) {\n                var d = deferred || new $.Deferred();\n                cmd_ready(function ready() {\n                    if ($.isArray(command)) {\n                        (function recur() {\n                            var cmd = command.shift();\n                            if (cmd) {\n                                self.exec(cmd, silent).done(recur);\n                            } else {\n                                d.resolve();\n                            }\n                        })();\n                    } else if (paused) {\n                        // both commands executed here (resume will call Term::exec)\n                        // delay command multiple time\n                        delayed_commands.push([command, silent, d]);\n                    } else {\n                        // commands may return promise from user code\n                        // it will resolve exec promise when user promise\n                        // is resolved\n                        var ret = commands(command, silent, true);\n                        unpromise(ret, function() {\n                            d.resolve();\n                        }, function() {\n                            d.reject();\n                        });\n                    }\n                });\n                // while testing it didn't executed last exec when using this\n                // for resolved deferred\n                return d.promise();\n            },\n            // -------------------------------------------------------------\n            // :: bypass login function that wait untill you type user/pass\n            // :: it hide implementation detail\n            // -------------------------------------------------------------\n            autologin: function(user, token, silent) {\n                self.trigger('terminal.autologin', [user, token, silent]);\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Function changes the prompt of the command line to login\n            // :: with a password and calls the user login function with\n            // :: the callback that expects a token. The login is successful\n            // :: if the user calls it with value that is truthy\n            // -------------------------------------------------------------\n            login: function(auth, infinite, success, error) {\n                logins.push([].slice.call(arguments));\n                if (in_login) {\n                    throw new Error(sprintf(strings().notWhileLogin, 'login'));\n                }\n                if (!is_function(auth)) {\n                    throw new Error(strings().loginIsNotAFunction);\n                }\n                in_login = true;\n                if (self.token() && self.level() === 1 && !autologin) {\n                    in_login = false; // logout will call login\n                    self.logout(true);\n                } else if (self.token(true) && self.login_name(true)) {\n                    in_login = false;\n                    if (is_function(success)) {\n                        success();\n                    }\n                    return self;\n                }\n                // don't store login data in history\n                if (settings.history) {\n                    command_line.history().disable();\n                }\n                function popUserPass() {\n                    while (self.level() > level) {\n                        self.pop(undefined, true);\n                    }\n                    if (settings.history) {\n                        command_line.history().enable();\n                    }\n                }\n                // so we know how many times call pop\n                var level = self.level();\n                function login_callback(user, token, silent) {\n                    if (self.paused()) {\n                        self.resume();\n                    }\n                    if (token) {\n                        popUserPass();\n                        var name = self.prefix_name(true) + '_';\n                        storage.set(name + 'token', token);\n                        storage.set(name + 'login', user);\n                        in_login = false;\n                        fire_event('onAfterLogin', [user, token]);\n                        if (is_function(success)) {\n                            // will be used internaly since users know\n                            // when login success (they decide when\n                            // it happen by calling the callback -\n                            // this funtion)\n                            success();\n                        }\n                    } else {\n                        if (infinite) {\n                            if (!silent) {\n                                self.error(strings().wrongPasswordTryAgain);\n                            }\n                            self.pop(undefined, true).set_mask(false);\n                        } else {\n                            in_login = false;\n                            if (!silent) {\n                                self.error(strings().wrongPassword);\n                            }\n                            self.pop(undefined, true).pop(undefined, true);\n                        }\n                        // used only to call pop in push\n                        if (is_function(error)) {\n                            error();\n                        }\n                    }\n                    self.off('terminal.autologin');\n                }\n                self.on('terminal.autologin', function(event, user, token, silent) {\n                    if (fire_event('onBeforeLogin', [user, token]) === false) {\n                        return;\n                    }\n                    login_callback(user, token, silent);\n                });\n                self.push(function(user) {\n                    self.set_mask(settings.maskChar).push(function(pass) {\n                        try {\n                            if (fire_event('onBeforeLogin', [user, pass]) === false) {\n                                popUserPass();\n                                return;\n                            }\n                            self.pause();\n                            var ret = auth.call(self, user, pass, function(\n                                token,\n                                silent) {\n                                login_callback(user, token, silent);\n                            });\n                            if (ret && is_function(ret.then || ret.done)) {\n                                (ret.then || ret.done).call(ret, function(token) {\n                                    login_callback(user, token);\n                                });\n                            }\n                        } catch (e) {\n                            display_exception(e, 'AUTH');\n                        }\n                    }, {\n                        prompt: strings().password + ': ',\n                        name: 'password'\n                    });\n                }, {\n                    prompt: strings().login + ': ',\n                    name: 'login'\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: User defined settings and defaults as well\n            // -------------------------------------------------------------\n            settings: function() {\n                return settings;\n            },\n            // -------------------------------------------------------------\n            // :: Get string before cursor\n            // -------------------------------------------------------------\n            before_cursor: function(word) {\n                var pos = command_line.position();\n                var command = command_line.get().slice(0, pos);\n                var cmd_strings = command.split(' ');\n                var string; // string before cursor that will be completed\n                if (word) {\n                    if (cmd_strings.length === 1) {\n                        string = cmd_strings[0];\n                    } else {\n                        var m = command.match(/(\\\\?\")/g);\n                        var double_quotes = m ? m.filter(function(chr) {\n                            return !chr.match(/^\\\\/);\n                        }).length : 0;\n                        m = command.match(/'/g);\n                        var single_quote = m ? m.length : 0;\n                        if (single_quote % 2 === 1) {\n                            string = command.match(/('[^']*)$/)[0];\n                        } else if (double_quotes % 2 === 1) {\n                            string = command.match(/(\"(?:[^\"]|\\\\\")*)$/)[0];\n                        } else {\n                            string = cmd_strings[cmd_strings.length - 1];\n                            for (i = cmd_strings.length - 1; i > 0; i--) {\n                                // treat escape space as part of the string\n                                var prev_string = cmd_strings[i - 1];\n                                if (prev_string[prev_string.length - 1] === '\\\\') {\n                                    string = cmd_strings[i - 1] + ' ' + string;\n                                } else {\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                } else {\n                    string = command;\n                }\n                return string;\n            },\n            // -------------------------------------------------------------\n            // :: complete word or command based on array of words\n            // -------------------------------------------------------------\n            complete: function(commands, options) {\n                options = $.extend({\n                    word: true,\n                    echo: false,\n                    escape: true,\n                    echoCommand: false,\n                    caseSensitive: true,\n                    doubleTab: null\n                }, options || {});\n                var sensitive = options.caseSensitive;\n                // cursor can be in the middle of the command\n                // so we need to get the text before the cursor\n                var string = self.before_cursor(options.word).replace(/\\\\\"/g, '\"');\n                var quote = false;\n                if (options.word) {\n                    if (string.match(/^\"/)) {\n                        quote = '\"';\n                    } else if (string.match(/^'/)) {\n                        quote = \"'\";\n                    }\n                    if (quote) {\n                        string = string.replace(/^[\"']/, '');\n                    }\n                }\n                if (tab_count % 2 === 0) {\n                    command = self.before_cursor(options.word);\n                } else {\n                    var test = self.before_cursor(options.word);\n                    if (test !== command) {\n                        // command line changed between TABS - ignore\n                        return;\n                    }\n                }\n                var safe = $.terminal.escape_regex(string);\n                if (options.escape) {\n                    safe = safe.replace(/(\\\\+)([\"'() ])/g, function(_, slash, chr) {\n                        if (chr.match(/[()]/)) {\n                            return slash + '\\\\?\\\\' + chr;\n                        } else {\n                            return slash + '?' + chr;\n                        }\n                    });\n                }\n                function escape(string) {\n                    if (quote === '\"') {\n                        string = string.replace(/\"/g, '\\\\\"');\n                    }\n                    if (!quote && options.escape) {\n                        string = string.replace(/([\"'() ])/g, '\\\\$1');\n                    }\n                    return string;\n                }\n                function matched_strings() {\n                    var matched = [];\n                    for (var i = commands.length; i--;) {\n                        if (commands[i].match(/\\n/) && options.word) {\n                            warn('If you use commands with newlines you ' +\n                                 'should use word option for complete or' +\n                                 ' wordAutocomplete terminal option');\n                        }\n                        if (regex.test(commands[i])) {\n                            var match = escape(commands[i]);\n                            if (!sensitive && same_case(match)) {\n                                if (string.toLowerCase() === string) {\n                                    match = match.toLowerCase();\n                                } else if (string.toUpperCase() === string) {\n                                    match = match.toUpperCase();\n                                }\n                            }\n                            matched.push(match);\n                        }\n                    }\n                    return matched;\n                }\n                var flags = sensitive ? '' : 'i';\n                var regex = new RegExp('^' + safe, flags);\n                var matched = matched_strings();\n                function replace(input, replacement) {\n                    var text = self.get_command();\n                    var pos = self.get_position();\n                    var re = new RegExp('^' + input, 'i');\n                    var pre = text.slice(0, pos);\n                    var post = text.slice(pos);\n                    var to_insert = replacement.replace(re, '') + (quote || '');\n                    self.set_command(pre + to_insert + post);\n                    self.set_position((pre + to_insert).length);\n                }\n                if (matched.length === 1) {\n                    if (options.escape) {\n                        replace(safe, matched[0]);\n                    } else {\n                        self.insert(matched[0].replace(regex, '') + (quote || ''));\n                    }\n                    command = self.before_cursor(options.word);\n                    return true;\n                } else if (matched.length > 1) {\n                    if (++tab_count >= 2) {\n                        tab_count = 0;\n                        if (options.echo) {\n                            if (is_function(options.doubleTab)) {\n                                // new API old is keep for backward compatibility\n                                if (options.echoCommand) {\n                                    echo_command();\n                                }\n                                var ret = options.doubleTab.call(\n                                    self,\n                                    string,\n                                    matched,\n                                    echo_command\n                                );\n                                if (typeof ret === 'undefined') {\n                                    return true;\n                                } else {\n                                    return ret;\n                                }\n                            } else if (options.doubleTab !== false) {\n                                echo_command();\n                                var text = matched.slice().reverse().join('\\t\\t');\n                                self.echo($.terminal.escape_brackets(text), {\n                                    keepWords: true,\n                                    formatters: false\n                                });\n                            }\n                            return true;\n                        }\n                    } else {\n                        var common = common_string(escape(string), matched, sensitive);\n                        if (common) {\n                            replace(safe, common);\n                            command = self.before_cursor(options.word);\n                            return true;\n                        }\n                    }\n                }\n            },\n            // -------------------------------------------------------------\n            // :: Return commands function from top interpreter\n            // -------------------------------------------------------------\n            commands: function() {\n                return interpreters.top().interpreter;\n            },\n            // -------------------------------------------------------------\n            // :: Low Level method that overwrites interpreter\n            // -------------------------------------------------------------\n            set_interpreter: function(user_intrp, login) {\n                function overwrite_interpreter() {\n                    self.pause(settings.softPause);\n                    make_interpreter(user_intrp, login, function(result) {\n                        self.resume();\n                        var top = interpreters.top();\n                        $.extend(top, result);\n                        prepare_top_interpreter(true);\n                    });\n                }\n                if (is_function(login)) {\n                    self.login(login, true, overwrite_interpreter);\n                } else if (get_type(user_intrp) === 'string' && login) {\n                    self.login(\n                        make_json_rpc_login(user_intrp, login),\n                        true,\n                        overwrite_interpreter\n                    );\n                } else {\n                    overwrite_interpreter();\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Show user greetings or terminal signature\n            // -------------------------------------------------------------\n            greetings: function() {\n                show_greetings();\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Return true if terminal is paused false otherwise\n            // -------------------------------------------------------------\n            paused: function() {\n                return paused;\n            },\n            // -------------------------------------------------------------\n            // :: Pause the terminal, it should be used for ajax calls\n            // -------------------------------------------------------------\n            pause: function(visible) {\n                cmd_ready(function ready() {\n                    onPause();\n                    paused = true;\n                    command_line.disable(visible || is_android);\n                    if (!visible) {\n                        command_line.find('.cmd-prompt').hidden();\n                    }\n                    fire_event('onPause');\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Resume the previously paused terminal\n            // -------------------------------------------------------------\n            resume: function(silent) {\n                cmd_ready(function ready() {\n                    paused = false;\n                    if (enabled && terminals.front() === self) {\n                        command_line.enable(silent);\n                    }\n                    command_line.find('.cmd-prompt').visible();\n                    var original = delayed_commands;\n                    delayed_commands = [];\n                    for (var i = 0; i < original.length; ++i) {\n                        self.exec.apply(self, original[i]);\n                    }\n                    self.trigger('resume');\n                    var fn = resume_callbacks.shift();\n                    if (fn) {\n                        fn();\n                    }\n                    self.scroll_to_bottom();\n                    fire_event('onResume');\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Return the number of characters that fit into the width of\n            // :: the terminal\n            // -------------------------------------------------------------\n            cols: function() {\n                if (settings.numChars) {\n                    return settings.numChars;\n                }\n                if (typeof num_chars === 'undefined' || num_chars === 1000) {\n                    num_chars = get_num_chars(self, char_size);\n                }\n                return num_chars;\n            },\n            // -------------------------------------------------------------\n            // :: Return the number of lines that fit into the height of the\n            // :: terminal\n            // -------------------------------------------------------------\n            rows: function() {\n                if (settings.numRows) {\n                    return settings.numRows;\n                }\n                if (typeof num_rows === 'undefined') {\n                    num_rows = get_num_rows(self, char_size);\n                }\n                return num_rows;\n            },\n            // -------------------------------------------------------------\n            // :: Return the History object\n            // -------------------------------------------------------------\n            history: function() {\n                return command_line.history();\n            },\n            // -------------------------------------------------------------\n            // :: toggle recording of history state\n            // -------------------------------------------------------------\n            history_state: function(toggle) {\n                function run() {\n                    settings.historyState = true;\n                    if (!save_state.length) {\n                        self.save_state();\n                    } else if (terminals.length() > 1) {\n                        self.save_state(null);\n                    }\n                }\n                if (toggle) {\n                    // if set to true and if set from user command we need\n                    // not to include the command\n                    if (typeof window.setImmediate === 'undefined') {\n                        setTimeout(run, 0);\n                    } else {\n                        setImmediate(run);\n                    }\n                } else {\n                    settings.historyState = false;\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: clear the history state\n            // -------------------------------------------------------------\n            clear_history_state: function() {\n                hash_commands = [];\n                save_state = [];\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Switch to the next terminal\n            // -------------------------------------------------------------\n            next: function() {\n                if (terminals.length() === 1) {\n                    return self;\n                } else {\n                    terminals.front().disable();\n                    var next = terminals.rotate().enable();\n                    // 50 provides buffer in viewport\n                    var x = next.offset().top - 50;\n                    $('html,body').animate({scrollTop: x}, 500);\n                    try {\n                        trigger_terminal_change(next);\n                    } catch (e) {\n                        display_exception(e, 'onTerminalChange');\n                    }\n                    return next;\n                }\n            },\n            // -------------------------------------------------------------\n            // :: Make the terminal in focus or blur depending on the first\n            // :: argument. If there is more then one terminal it will\n            // :: switch to next one, if the second argument is set to true\n            // :: the events will be not fired. Used on init\n            // -------------------------------------------------------------\n            focus: function(toggle, silent) {\n                cmd_ready(function ready() {\n                    if (terminals.length() === 1) {\n                        if (toggle === false) {\n                            self.disable(silent);\n                        } else {\n                            self.enable(silent);\n                        }\n                    } else if (toggle === false) {\n                        self.next();\n                    } else {\n                        var front = terminals.front();\n                        if (front !== self) {\n                            // there should be only from terminal enabled but tests\n                            // sometime fail because there where more them one\n                            // where cursor have blink class\n                            terminals.forEach(function(terminal) {\n                                if (terminal !== self && terminal.enabled()) {\n                                    terminal.disable(silent);\n                                }\n                            });\n                            if (!silent) {\n                                try {\n                                    trigger_terminal_change(self);\n                                } catch (e) {\n                                    display_exception(e, 'onTerminalChange');\n                                }\n                            }\n                        }\n                        terminals.set(self);\n                        self.enable(silent);\n                    }\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Disable/Enable terminal that can be enabled by click\n            // -------------------------------------------------------------\n            freeze: function(freeze) {\n                when_ready(function ready() {\n                    if (freeze) {\n                        self.disable();\n                        frozen = true;\n                    } else {\n                        frozen = false;\n                        self.enable();\n                    }\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: check if terminal is frozen\n            // -------------------------------------------------------------\n            frozen: function() {\n                return frozen;\n            },\n            // -------------------------------------------------------------\n            // :: Enable the terminal\n            // -------------------------------------------------------------\n            enable: function(silent) {\n                if (!enabled && !frozen) {\n                    if (num_chars === undefined) {\n                        // enabling first time\n                        self.resize();\n                    }\n                    cmd_ready(function ready() {\n                        var ret;\n                        if (!silent && !enabled) {\n                            fire_event('onFocus');\n                        }\n                        if (!silent && ret === undefined || silent) {\n                            enabled = true;\n                            if (!self.paused()) {\n                                command_line.enable(true);\n                            }\n                        }\n                    });\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Disable the terminal\n            // -------------------------------------------------------------\n            disable: function(silent) {\n                cmd_ready(function ready() {\n                    var ret;\n                    if (!silent && enabled) {\n                        ret = fire_event('onBlur');\n                    }\n                    if (!silent && ret === undefined || silent) {\n                        enabled = false;\n                        command_line.disable();\n                    }\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: return true if the terminal is enabled\n            // -------------------------------------------------------------\n            enabled: function() {\n                return enabled;\n            },\n            // -------------------------------------------------------------\n            // :: Return the terminal signature depending on the size of the terminal\n            // -------------------------------------------------------------\n            signature: function() {\n                var cols = self.cols();\n                for (var i = signatures.length; i--;) {\n                    var lengths = signatures[i].map(function(line) {\n                        return line.length;\n                    });\n                    if (Math.max.apply(null, lengths) <= cols) {\n                        return signatures[i].join('\\n') + '\\n';\n                    }\n                }\n                return '';\n            },\n            // -------------------------------------------------------------\n            // :: Return the version number\n            // -------------------------------------------------------------\n            version: function() {\n                return $.terminal.version;\n            },\n            // -------------------------------------------------------------\n            // :: Return actual command line object (jquery object with cmd\n            // :: methods)\n            // -------------------------------------------------------------\n            cmd: function() {\n                return command_line;\n            },\n            // -------------------------------------------------------------\n            // :: Return the current command entered by terminal\n            // -------------------------------------------------------------\n            get_command: function() {\n                return command_line.get();\n            },\n            // -------------------------------------------------------------\n            // :: echo command and previous prompt (used by echo_newline.js)\n            // -------------------------------------------------------------\n            echo_command: function(command) {\n                return echo_command(command);\n            },\n            // -------------------------------------------------------------\n            // :: Change the command line to the new one\n            // -------------------------------------------------------------\n            set_command: function(command, silent) {\n                when_ready(function ready() {\n                    // TODO: refactor to use options - breaking change\n                    if (typeof command !== 'string') {\n                        command = JSON.stringify(command);\n                    }\n                    command_line.set(command, undefined, silent);\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Change position of the command line\n            // -------------------------------------------------------------\n            set_position: function(position, relative) {\n                when_ready(function ready() {\n                    command_line.position(position, relative);\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Return position of the command line\n            // -------------------------------------------------------------\n            get_position: function() {\n                return command_line.position();\n            },\n            // -------------------------------------------------------------\n            // :: Insert text into the command line after the cursor\n            // -------------------------------------------------------------\n            insert: function(string, stay) {\n                if (typeof string === 'string') {\n                    when_ready(function ready() {\n                        var bottom = self.is_bottom();\n                        command_line.insert(string, stay);\n                        if (settings.scrollOnEcho || bottom) {\n                            self.scroll_to_bottom();\n                        }\n                    });\n                    return self;\n                } else {\n                    throw new Error(sprintf(strings().notAString, 'insert'));\n                }\n            },\n            // -------------------------------------------------------------\n            // :: Set the prompt of the command line\n            // -------------------------------------------------------------\n            set_prompt: function(prompt) {\n                when_ready(function ready() {\n                    if (is_function(prompt)) {\n                        command_line.prompt(function(callback) {\n                            prompt.call(self, callback, self);\n                        });\n                    } else {\n                        command_line.prompt(prompt);\n                    }\n                    interpreters.top().prompt = prompt;\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Return the prompt used by the terminal\n            // -------------------------------------------------------------\n            get_prompt: function() {\n                return interpreters.top().prompt;\n                // command_line.prompt(); - can be a wrapper\n                //return command_line.prompt();\n            },\n            // -------------------------------------------------------------\n            // :: Enable or Disable mask depedning on the passed argument\n            // :: the mask can also be character (in fact it will work with\n            // :: strings longer then one)\n            // -------------------------------------------------------------\n            set_mask: function(mask) {\n                when_ready(function ready() {\n                    command_line.mask(mask === true ? settings.maskChar : mask);\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Return the ouput of the terminal as text\n            // -------------------------------------------------------------\n            get_output: function(raw) {\n                if (raw) {\n                    return lines;\n                } else {\n                    return $.map(lines, function(item) {\n                        return is_function(item[0]) ? item[0]() : item[0];\n                    }).join('\\n');\n                }\n            },\n            // -------------------------------------------------------------\n            // :: Recalculate and redraw everything\n            // -------------------------------------------------------------\n            resize: function(width, height) {\n                if (!self.is(':visible')) {\n                    // delay resize if terminal not visible\n                    self.stopTime('resize');\n                    self.oneTime(500, 'resize', function() {\n                        self.resize(width, height);\n                    });\n                } else {\n                    if (width && height) {\n                        self.width(width);\n                        self.height(height);\n                    }\n                    width = self.width();\n                    height = self.height();\n                    if (typeof settings.numChars !== 'undefined' ||\n                        typeof settings.numRows !== 'undefined') {\n                        command_line.resize(settings.numChars);\n                        self.refresh();\n                        fire_event('onResize');\n                        return;\n                    }\n                    var new_num_chars = get_num_chars(self, char_size);\n                    var new_num_rows = get_num_rows(self, char_size);\n                    // only if number of chars changed\n                    if (new_num_chars !== num_chars ||\n                        new_num_rows !== num_rows) {\n                        num_chars = new_num_chars;\n                        num_rows = new_num_rows;\n                        command_line.resize(num_chars);\n                        self.refresh();\n                        fire_event('onResize');\n                    }\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: redraw the terminal\n            // -------------------------------------------------------------\n            refresh: function() {\n                if (char_size.width !== 0) {\n                    self[0].style.setProperty('--char-width', char_size.width);\n                }\n                redraw({\n                    scroll: false,\n                    update: true\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Flush the output to the terminal\n            // -------------------------------------------------------------\n            flush: function(options) {\n                options = $.extend({}, {\n                    update: false,\n                    scroll: true\n                }, options || {});\n                try {\n                    var bottom = self.is_bottom();\n                    var wrapper;\n                    // print all lines\n                    // var output_buffer = lines.flush();\n                    while (output_buffer.length) {\n                        var data = output_buffer.shift();\n                        if (data === NEW_LINE) {\n                            wrapper = $('<div></div>');\n                        } else if ($.isPlainObject(data) && is_function(data.finalize)) {\n                            // this is finalize function from echo\n                            if (options.update) {\n                                var selector = '> div[data-index=' + data.index + ']';\n                                var node = output.find(selector);\n                                if (node.html() !== wrapper.html()) {\n                                    node.replaceWith(wrapper);\n                                }\n                            } else {\n                                wrapper.appendTo(output);\n                            }\n                            wrapper.attr('data-index', data.index);\n                            data.finalize(wrapper);\n                        } else {\n                            var line = data.line;\n                            var div = $('<div/>').html(line)\n                                .appendTo(wrapper).width('100%');\n                            if (data.newline) {\n                                div.addClass('cmd-end-line');\n                            }\n                        }\n                    }\n                    limit_lines();\n                    fire_event('onFlush');\n                    //num_rows = get_num_rows(self, char_size);\n                    if ((settings.scrollOnEcho && options.scroll) || bottom) {\n                        self.scroll_to_bottom();\n                    }\n                } catch (e1) {\n                    if (is_function(settings.exceptionHandler)) {\n                        try {\n                            settings.exceptionHandler.call(self, e1, 'TERMINAL (Flush)');\n                        } catch (e2) {\n                            settings.exceptionHandler = $.noop;\n                            alert_exception('[exceptionHandler]', e2);\n                        }\n                    } else {\n                        alert_exception('[Flush]', e1);\n                    }\n                } finally {\n                    output_buffer = [];\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Update the output line - line number can be negative\n            // -------------------------------------------------------------\n            update: function(line, value, options) {\n                when_ready(function ready() {\n                    if (line < 0) {\n                        line = lines.length + line; // yes +\n                    }\n                    if (!lines[line]) {\n                        self.error('Invalid line number ' + line);\n                    } else if (value === null) {\n                        lines.splice(line, 1);\n                        output.find('[data-index=' + line + ']').remove();\n                    } else {\n                        var ret = prepare_render(value, options);\n                        if (ret) {\n                            value = ret[0];\n                            options = ret[1];\n                        }\n                        lines[line][0] = value;\n                        if (options) {\n                            lines[line][1] = options;\n                        }\n                        process_line({\n                            value: value,\n                            index: line,\n                            options: options\n                        });\n                        self.flush({\n                            scroll: false,\n                            update: true\n                        });\n                    }\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: convenience method for removing selected line\n            // -------------------------------------------------------------\n            remove_line: function(line) {\n                return self.update(line, null);\n            },\n            // -------------------------------------------------------------\n            // :: return index of last line in case when you need to update\n            // :: after something is echo on the terminal\n            // -------------------------------------------------------------\n            last_index: function() {\n                return lines.length - 1;\n            },\n            // -------------------------------------------------------------\n            // :: Print data to the terminal output. It can have options\n            // :: * flush - indicate that arg should be send to DOM\n            // :: * raw - indicate if it should handle input as html\n            // :: * finalize - function call with container div\n            // :: * keepWords - inform how to wrap text\n            // :: * formatters - inform function if it should use formatters\n            // ::   on input string - good to prevent XSS when you want\n            // ::   advanced server side controling of terminal\n            // :: you can echo: promise, function, strings array or string\n            // -------------------------------------------------------------\n            echo: function(arg, options) {\n                var arg_defined = arguments.length > 0;\n                function echo(arg) {\n                    try {\n                        var locals = $.extend({\n                            flush: true,\n                            exec: true,\n                            raw: settings.raw,\n                            finalize: $.noop,\n                            unmount: $.noop,\n                            keepWords: false,\n                            invokeMethods: settings.invokeMethods,\n                            onClear: $.noop,\n                            formatters: true,\n                            allowedAttributes: settings.allowedAttributes\n                        }, options || {});\n                        // finalize function is passed around and invoked\n                        // in terminal::flush after content is added to DOM\n                        (function(finalize) {\n                            locals.finalize = function(div) {\n                                if (locals.raw) {\n                                    div.addClass('raw');\n                                }\n                                try {\n                                    if (is_function(finalize)) {\n                                        finalize.call(self, div);\n                                    }\n                                    div.find('img').each(function() {\n                                        var self = $(this);\n                                        var img = new Image();\n                                        img.onerror = function() {\n                                            self.replaceWith(use_broken_image);\n                                        };\n                                        img.src = this.src;\n                                    });\n                                } catch (e) {\n                                    display_exception(e, 'USER:echo(finalize)');\n                                    finalize = null;\n                                }\n                            };\n                        })(locals.finalize);\n                        if (locals.flush) {\n                            // flush buffer if there was no flush after previous echo\n                            if (output_buffer.length) {\n                                self.flush();\n                            }\n                        }\n                        if (fire_event('onBeforeEcho', [arg]) === false) {\n                            return;\n                        }\n                        var value;\n                        if (typeof arg === 'function') {\n                            value = arg.bind(self);\n                        } else if (typeof arg === 'undefined') {\n                            if (arg_defined) {\n                                value = String(arg);\n                            } else {\n                                value = '';\n                            }\n                        } else {\n                            var ret = preprocess_value(arg);\n                            if (ret === false) {\n                                return self;\n                            }\n                            value = ret;\n                        }\n                        if (render(value, locals)) {\n                            return self;\n                        }\n                        process_line({\n                            value: value,\n                            options: locals,\n                            index: lines.length\n                        });\n                        // extended commands should be processed only\n                        // once in echo and not on redraw\n                        locals.exec = false;\n                        lines.push([value, locals]);\n                        if (locals.flush) {\n                            self.flush();\n                            fire_event('onAfterEcho', [arg]);\n                        }\n                    } catch (e) {\n                        // if echo throw exception we can't use error to\n                        // display that exception\n                        if (is_function(settings.exceptionHandler)) {\n                            settings.exceptionHandler.call(self, e, 'TERMINAL (echo)');\n                        } else {\n                            alert_exception('[Terminal.echo]', e);\n                        }\n                    }\n                }\n                if (arg !== undefined && is_function(arg.then)) {\n                    $.when(arg).done(echo).catch(make_label_error('Echo'));\n                } else {\n                    echo(arg);\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: echo red text\n            // -------------------------------------------------------------\n            error: function(message, options) {\n                options = $.extend({}, options, {raw: false, formatters: false});\n                function format(string) {\n                    if (typeof string !== 'string') {\n                        string = String(string);\n                    }\n                    // quick hack to fix trailing backslash\n                    var str = $.terminal.escape_brackets(string).\n                        replace(/\\\\$/, '&#92;').\n                        replace(url_re, ']$1[[;;;terminal-error]');\n                    return '[[;;;terminal-error]' + str + ']';\n                }\n                if (typeof message === 'function') {\n                    return self.echo(function() {\n                        return format(message.call(self));\n                    }, options);\n                }\n                if (message && message.then) {\n                    message.then(function(string) {\n                        self.echo(format(string));\n                    }).catch(make_label_error('Echo Error'));\n                    return self;\n                }\n                return self.echo(format(message), options);\n            },\n            // -------------------------------------------------------------\n            // :: Display Exception on terminal\n            // -------------------------------------------------------------\n            exception: function(e, label) {\n                var message = exception_message(e);\n                if (label) {\n                    message = '&#91;' + label + '&#93;: ' + message;\n                }\n                if (message) {\n                    self.error(message, {\n                        finalize: function(div) {\n                            div.addClass('terminal-exception terminal-message');\n                        },\n                        keepWords: true\n                    });\n                }\n                if (typeof e.fileName === 'string') {\n                    // display filename and line which throw exeption\n                    self.pause(settings.softPause);\n                    $.get(e.fileName, function(file) {\n                        var num = e.lineNumber - 1;\n                        var line = file.split('\\n')[num];\n                        if (line) {\n                            self.error('[' + e.lineNumber + ']: ' + line);\n                        }\n                        self.resume();\n                    }, 'text');\n                }\n                if (e.stack) {\n                    var stack = $.terminal.escape_brackets(e.stack);\n                    self.echo(stack.split(/\\n/g).map(function(trace) {\n                        // nested formatting will handle urls but that formatting\n                        // can be removed - this code was created before\n                        // that formatting existed (see commit ce01c3f5)\n                        return '[[;;;terminal-error]' +\n                            trace.replace(url_re, function(url) {\n                                return ']' + url + '[[;;;terminal-error]';\n                            }) + ']';\n                    }).join('\\n'), {\n                        finalize: function(div) {\n                            div.addClass('terminal-exception terminal-stack-trace');\n                        },\n                        formatters: false\n                    });\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Scroll Div that holds the terminal\n            // -------------------------------------------------------------\n            scroll: function(amount) {\n                var pos;\n                amount = Math.round(amount);\n                if (self.prop) { // work with jQuery > 1.6\n                    if (amount > self.prop('scrollTop') && amount > 0) {\n                        self.prop('scrollTop', 0);\n                    }\n                    pos = self.prop('scrollTop');\n                    self.scrollTop(pos + amount);\n                } else {\n                    if (amount > self.attr('scrollTop') && amount > 0) {\n                        self.attr('scrollTop', 0);\n                    }\n                    pos = self.attr('scrollTop');\n                    self.scrollTop(pos + amount);\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Exit all interpreters and logout. The function will throw\n            // :: exception if there is no login provided\n            // -------------------------------------------------------------\n            logout: function(local) {\n                if (in_login) {\n                    throw new Error(sprintf(strings().notWhileLogin, 'logout'));\n                }\n                when_ready(function ready() {\n                    if (local) {\n                        var login = logins.pop();\n                        self.set_token(undefined, true);\n                        self.login.apply(self, login);\n                    } else if (interpreters.size() === 1 && self.token()) {\n                        self.logout(true);\n                    } else {\n                        while (interpreters.size() > 1) {\n                            // pop will call global_logout that will call login\n                            // and size will be > 0; this is workaround the problem\n                            if (self.token()) {\n                                self.logout(true).pop().pop();\n                            } else {\n                                self.pop();\n                            }\n                        }\n                    }\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Function returns the token returned by callback function\n            // :: in login function. It does nothing (return undefined) if\n            // :: there is no login\n            // -------------------------------------------------------------\n            token: function(local) {\n                return storage.get(self.prefix_name(local) + '_token');\n            },\n            // -------------------------------------------------------------\n            // :: Function sets the token to the supplied value. This function\n            // :: works regardless of wherer settings.login is supplied\n            // -------------------------------------------------------------\n            set_token: function(token, local) {\n                var name = self.prefix_name(local) + '_token';\n                if (typeof token === 'undefined') {\n                    storage.remove(name);\n                } else {\n                    storage.set(name, token);\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Function get the token either set by the login method or\n            // :: by the set_token method.\n            // -------------------------------------------------------------\n            get_token: function(local) {\n                return self.token(local);\n            },\n            // -------------------------------------------------------------\n            // :: Function return Login name entered by the user\n            // -------------------------------------------------------------\n            login_name: function(local) {\n                return storage.get(self.prefix_name(local) + '_login');\n            },\n            // -------------------------------------------------------------\n            // :: Function returns the name of current interpreter\n            // -------------------------------------------------------------\n            name: function() {\n                return interpreters.top().name;\n            },\n            // -------------------------------------------------------------\n            // :: Function return prefix name for login/token\n            // -------------------------------------------------------------\n            prefix_name: function(local) {\n                var name = (settings.name ? settings.name + '_' : '') +\n                    terminal_id;\n                if (local && interpreters.size() > 1) {\n                    var local_name = interpreters.map(function(intrp) {\n                        return intrp.name || '';\n                    }).slice(1).join('_');\n                    if (local_name) {\n                        name += '_' + local_name;\n                    }\n                }\n                return name;\n            },\n            // -------------------------------------------------------------\n            // :: wrapper for common use case\n            // -------------------------------------------------------------\n            read: function(message, success, cancel) {\n                // return from read() should not pause terminal\n                force_awake = true;\n                var defer = jQuery.Deferred();\n                var read = false;\n                self.push(function(string) {\n                    read = true;\n                    defer.resolve(string);\n                    if (is_function(success)) {\n                        success(string);\n                    }\n                    self.pop();\n                    if (settings.history) {\n                        command_line.history().enable();\n                    }\n                }, {\n                    name: 'read',\n                    history: false,\n                    prompt: message || '',\n                    onExit: function() {\n                        if (!read) {\n                            defer.reject();\n                            if (is_function(cancel)) {\n                                cancel();\n                            }\n                        }\n                    }\n                });\n                if (settings.history) {\n                    command_line.history().disable();\n                }\n                return defer.promise();\n            },\n            // -------------------------------------------------------------\n            // :: Push a new interenter on the Stack\n            // -------------------------------------------------------------\n            push: function(interpreter, options) {\n                cmd_ready(function ready() {\n                    options = options || {};\n                    var defaults = {\n                        infiniteLogin: false\n                    };\n                    var push_settings = $.extend({}, defaults, options);\n                    if (!push_settings.name && prev_command) {\n                        // push is called in login\n                        push_settings.name = prev_command.name;\n                    }\n                    if (push_settings.prompt === undefined) {\n                        push_settings.prompt = (push_settings.name || '>') + ' ';\n                    }\n                    // names.push(options.name);\n                    var top = interpreters.top();\n                    if (top) {\n                        top.mask = command_line.mask();\n                    }\n                    var was_paused = paused;\n                    function init() {\n                        fire_event('onPush', [top, interpreters.top()]);\n                        prepare_top_interpreter();\n                    }\n                    // self.pause();\n                    make_interpreter(interpreter, options.login, function(ret) {\n                        // result is object with interpreter and completion properties\n                        interpreters.push($.extend({}, ret, push_settings));\n                        if (push_settings.completion === true) {\n                            if ($.isArray(ret.completion)) {\n                                interpreters.top().completion = ret.completion;\n                            } else if (!ret.completion) {\n                                interpreters.top().completion = false;\n                            }\n                        }\n                        if (push_settings.login) {\n                            var error;\n                            var type = get_type(push_settings.login);\n                            if (type === 'function') {\n                                error = push_settings.infiniteLogin ? $.noop : self.pop;\n                                self.login(\n                                    push_settings.login,\n                                    push_settings.infiniteLogin,\n                                    init,\n                                    error\n                                );\n                            } else if (get_type(interpreter) === 'string' &&\n                                       type === 'string' || type === 'boolean') {\n                                error = push_settings.infiniteLogin ? $.noop : self.pop;\n                                self.login(\n                                    make_json_rpc_login(\n                                        interpreter,\n                                        push_settings.login\n                                    ),\n                                    push_settings.infiniteLogin,\n                                    init,\n                                    error\n                                );\n                            }\n                        } else {\n                            init();\n                        }\n                        if (!was_paused && self.enabled()) {\n                            self.resume();\n                        }\n                    });\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Remove the last interpreter from the Stack\n            // -------------------------------------------------------------\n            pop: function(string, silent) {\n                if (string !== undefined) {\n                    echo_command(string);\n                }\n                var token = self.token(true);\n                var top;\n                if (interpreters.size() === 1) {\n                    top = interpreters.top();\n                    if (settings.login) {\n                        if (!silent) {\n                            fire_event('onPop', [top, null]);\n                        }\n                        global_logout();\n                        fire_event('onExit');\n                    } else {\n                        self.error(strings().canExitError);\n                    }\n                } else {\n                    if (token) {\n                        clear_loging_storage();\n                    }\n                    var current = interpreters.pop();\n                    top = interpreters.top();\n                    prepare_top_interpreter();\n                    // restore mask\n                    self.set_mask(top.mask);\n                    if (!silent) {\n                        fire_event('onPop', [current, top]);\n                    }\n                    // we check in case if you don't pop from password interpreter\n                    if (in_login && self.get_prompt() !== strings().login + ': ') {\n                        in_login = false;\n                    }\n                    if (is_function(current.onExit)) {\n                        try {\n                            current.onExit.call(self, self);\n                        } catch (e) {\n                            current.onExit = $.noop;\n                            display_exception(e, 'onExit');\n                        }\n                    }\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Change terminal option(s) at runtime\n            // -------------------------------------------------------------\n            option: function(object_or_name, value) {\n                if (typeof value === 'undefined') {\n                    if (typeof object_or_name === 'string') {\n                        return settings[object_or_name];\n                    } else if (typeof object_or_name === 'object') {\n                        $.each(object_or_name, function(key, value) {\n                            settings[key] = value;\n                        });\n                    }\n                } else {\n                    settings[object_or_name] = value;\n                    if (object_or_name.match(/^num(Chars|Rows)$/)) {\n                        redraw();\n                    }\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: invoke keydown shorcut\n            // -------------------------------------------------------------\n            invoke_key: function(shortcut) {\n                command_line.invoke_key(shortcut);\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: change terminal keymap at runtime\n            // -------------------------------------------------------------\n            keymap: function(keymap, fn) {\n                if (arguments.length === 0) {\n                    return command_line.keymap();\n                }\n                if (typeof fn === 'undefined') {\n                    if (typeof keymap === 'string') {\n                        return command_line.keymap(keymap);\n                    } else if ($.isPlainObject(keymap)) {\n                        // argument is an object\n                        keymap = $.omap(keymap || {}, function(key, fn) {\n                            if (!new_keymap[key]) {\n                                return fn.bind(self);\n                            }\n                            return function(e, original) {\n                                // new keymap function will get default as 2nd argument\n                                return fn.call(self, e, function() {\n                                    return new_keymap[key](e, original);\n                                });\n                            };\n                        });\n                        command_line.keymap(keymap);\n                    }\n                } else if (typeof fn === 'function') {\n                    var key = keymap;\n                    if (!new_keymap[key]) {\n                        command_line.keymap(key, fn.bind(self));\n                    } else {\n                        command_line.keymap(key, function(e, original) {\n                            return fn.call(self, e, function() {\n                                return new_keymap[key](e, original);\n                            });\n                        });\n                    }\n                }\n            },\n            // -------------------------------------------------------------\n            // :: Return how deep you are in nested interpreters\n            // -------------------------------------------------------------\n            level: function() {\n                return interpreters.size();\n            },\n            // -------------------------------------------------------------\n            // :: Reinitialize the terminal\n            // -------------------------------------------------------------\n            reset: function() {\n                when_ready(function ready() {\n                    self.clear();\n                    while (interpreters.size() > 1) {\n                        interpreters.pop();\n                    }\n                    initialize();\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Remove all local storage left by terminal, it will not\n            // :: logout you until you refresh the browser\n            // -------------------------------------------------------------\n            purge: function() {\n                when_ready(function ready() {\n                    var prefix = self.prefix_name() + '_';\n                    var names = storage.get(prefix + 'interpreters');\n                    if (names) {\n                        $.each(JSON.parse(names), function(_, name) {\n                            storage.remove(name + '_commands');\n                            storage.remove(name + '_token');\n                            storage.remove(name + '_login');\n                        });\n                    }\n                    command_line.purge();\n                    storage.remove(prefix + 'interpreters');\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Remove all events and DOM nodes left by terminal, it will\n            // :: not purge the terminal so you will have the same state\n            // :: when you refresh the browser\n            // -------------------------------------------------------------\n            destroy: function() {\n                when_ready(function ready() {\n                    command_line.destroy().remove();\n                    self.resizer('unbind');\n                    font_resizer.resizer('unbind').remove();\n                    $(document).unbind('.terminal_' + self.id());\n                    $(window).unbind('.terminal_' + self.id());\n                    self.unbind('click wheel mousewheel mousedown mouseup');\n                    self.removeData('terminal').removeClass('terminal').\n                        unbind('.terminal');\n                    if (settings.width) {\n                        self.css('width', '');\n                    }\n                    if (settings.height) {\n                        self.css('height', '');\n                    }\n                    $(window).off('blur', blur_terminal).\n                        off('focus', focus_terminal);\n                    self.find('.terminal-fill, .terminal-font').remove();\n                    self.stopTime();\n                    terminals.remove(terminal_id);\n                    if (visibility_observer) {\n                        if (visibility_observer.unobserve) {\n                            visibility_observer.unobserve(self[0]);\n                        } else {\n                            clearInterval(visibility_observer);\n                        }\n                    }\n                    if (mutation_observer) {\n                        mutation_observer.disconnect();\n                    }\n                    if (!terminals.length()) {\n                        $(window).off('hashchange');\n                    }\n                    output.remove();\n                    wrapper.remove();\n                    defunct = true;\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: ref: https://stackoverflow.com/a/18927969/387194\n            // -------------------------------------------------------------\n            scroll_to: function(elem) {\n                var scroll = self.scrollTop() - self.offset().top + $(elem).offset().top;\n                self.scrollTop(scroll);\n                return self;\n            },\n            // -------------------------------------------------------------\n            scroll_to_bottom: function() {\n                var scrollHeight;\n                if (self.prop) {\n                    scrollHeight = self.prop('scrollHeight');\n                } else {\n                    scrollHeight = self.attr('scrollHeight');\n                }\n                self.scrollTop(scrollHeight);\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: return true if terminal div or body is at the bottom\n            // :: is use scrollBottomOffset option as margin for the check\n            // -------------------------------------------------------------\n            is_bottom: function() {\n                if (settings.scrollBottomOffset === -1) {\n                    return false;\n                } else {\n                    var scroll_height, scroll_top, height;\n                    scroll_height = self[0].scrollHeight;\n                    scroll_top = self.scrollTop();\n                    height = self.outerHeight();\n                    var limit = scroll_height - settings.scrollBottomOffset;\n                    return scroll_top + height > limit;\n                }\n            }\n        }, function(name, fun) {\n            // wrap all functions and display execptions\n            return function() {\n                if (defunct) {\n                    if (!settings.exceptionHandler) {\n                        throw new $.terminal.Exception(strings().defunctTerminal);\n                    }\n                }\n                try {\n                    return fun.apply(self, [].slice.apply(arguments));\n                } catch (e) {\n                    // exec catch by command (resume call exec)\n                    if (name !== 'exec' && name !== 'resume') {\n                        display_exception(e, e.type || 'TERMINAL', true);\n                    }\n                    if (!settings.exceptionHandler) {\n                        throw e;\n                    }\n                }\n            };\n        }));\n        // -----------------------------------------------------------------\n        // INIT CODE\n        // -----------------------------------------------------------------\n        if (self.length === 0) {\n            var msg = sprintf(strings().invalidSelector);\n            throw new $.terminal.Exception(msg);\n        }\n        self.data('terminal', self);\n        // var names = []; // stack if interpreter names\n        var prev_command; // used for name on the terminal if not defined\n        var prev_exec_cmd;\n        var tab_count = 0; // for tab completion\n        var output; // .terminal-output jquery object\n        var terminal_id = terminals.length();\n        var force_awake = false; // flag used to don't pause when user return read() call\n        var num_chars; // numer of chars in line\n        var num_rows; // number of lines that fit without scrollbar\n        var command; // for tab completion\n        var logins = new Stack(); // stack of logins\n        var command_queue = new DelayQueue();\n        var init_queue = new DelayQueue();\n        var when_ready = ready(init_queue);\n        var cmd_ready = ready(command_queue);\n        var in_login = false;// some Methods should not be called when login\n        // TODO: Try to use mutex like counter for pause/resume\n        var onPause = $.noop;// used to indicate that user call pause onInit\n        var old_width, old_height;\n        var delayed_commands = []; // used when exec commands while paused\n        var settings = $.extend(\n            {},\n            $.terminal.defaults,\n            {\n                name: self.selector,\n                exit: !!(options && options.login || !options)\n            },\n            options || {}\n        );\n        if (typeof settings.width === 'number') {\n            self.width(settings.width);\n        }\n        if (typeof settings.height === 'number') {\n            self.height(settings.height);\n        }\n        var char_size = get_char_size(self);\n        // so it's the same as in TypeScript definition for options\n        delete settings.formatters;\n        // used to throw error when calling methods on destroyed terminal\n        var defunct = false;\n        var lines = [];\n        var storage = new StorageHelper(settings.memory);\n        var enabled = settings.enabled;\n        var frozen = false;\n        var paused = false;\n        var autologin = true; // set to false if onBeforeLogin return false\n        var interpreters;\n        var command_line;\n        var old_enabled;\n        var visibility_observer;\n        var mutation_observer;\n        // backward compatibility\n        if (settings.ignoreSystemDescribe === true) {\n            settings.describe = false;\n        }\n        // register ajaxSend for cancel requests on CTRL+D\n        $(document).bind('ajaxSend.terminal_' + self.id(), function(e, xhr) {\n            requests.push(xhr);\n        });\n        var wrapper = $('<div class=\"terminal-wrapper\"/>').appendTo(self);\n        $(broken_image).hide().appendTo(wrapper);\n        var font_resizer = $('<div class=\"terminal-font\">&nbsp;</div>').appendTo(self);\n        var fill = $('<div class=\"terminal-fill\"/>').appendTo(self);\n        output = $('<div>').addClass('terminal-output').attr('role', 'log')\n            .appendTo(wrapper);\n        self.addClass('terminal');\n        // before login event\n        if (settings.login && fire_event('onBeforeLogin') === false) {\n            autologin = false;\n        }\n        // create json-rpc authentication function\n        var base_interpreter;\n        if (typeof init_interpreter === 'string') {\n            base_interpreter = init_interpreter;\n        } else if (is_array(init_interpreter)) {\n            // first JSON-RPC\n            for (var i = 0, len = init_interpreter.length; i < len; ++i) {\n                if (typeof init_interpreter[i] === 'string') {\n                    base_interpreter = init_interpreter[i];\n                    break;\n                }\n            }\n        }\n        var global_login_fn;\n        if (is_function(settings.login)) {\n            global_login_fn = settings.login;\n        } else if (base_interpreter &&\n            (typeof settings.login === 'string' || settings.login === true)) {\n            global_login_fn = make_json_rpc_login(base_interpreter, settings.login);\n        }\n        terminals.append(self);\n        function focus_terminal() {\n            if (old_enabled) {\n                self.focus();\n            }\n        }\n        // -------------------------------------------------------------------------------\n        function blur_terminal() {\n            old_enabled = enabled;\n            self.disable().find('.cmd textarea').trigger('blur', [true]);\n        }\n        // -------------------------------------------------------------------------------\n        function stringify_value(value) {\n            if (is_function(value)) {\n                value = value();\n            }\n            if (get_type(value) !== 'string') {\n                if (is_function(settings.parseObject)) {\n                    var ret = settings.parseObject(value);\n                    if (get_type(ret) === 'string') {\n                        value = ret;\n                    }\n                } else if (is_array(value)) {\n                    value = $.terminal.columns(value, self.cols(), settings.tabs);\n                } else {\n                    value = String(value);\n                }\n            }\n            return value;\n        }\n        // -------------------------------------------------------------------------------\n        function context_callback_proxy(fn) {\n            if (fn.proxy) {\n                return fn;\n            }\n            var wrapper = function(callback) {\n                return fn.call(self, callback, self);\n            };\n            wrapper.proxy = true;\n            return wrapper;\n        }\n        // -------------------------------------------------------------------------------\n        // paste event is not testable in node\n        // istanbul ignore next\n        function paste_event(e) {\n            e = e.originalEvent;\n            // we don't care about browser that don't support clipboard data\n            // those browser simple will not have this feature normal paste\n            // is cross-browser and it's handled by cmd plugin\n            function is_type(item, type) {\n                return item.type.indexOf(type) !== -1;\n            }\n            function echo_image(image) {\n                self.echo('<img src=\"' + image + '\"/>', {raw: true});\n            }\n            function data_uri(blob) {\n                var URL = window.URL || window.webkitURL;\n                return URL.createObjectURL(blob);\n            }\n            function echo(object, ignoreEvents) {\n                if (!ignoreEvents && is_function(settings.onPaste)) {\n                    var event = {\n                        target: self\n                    };\n                    if (typeof object === 'string') {\n                        event['text'] = object;\n                    } else if (object instanceof Blob) {\n                        event['image'] = data_uri(object);\n                    }\n                    var ret = fire_event('onPaste', [event]);\n                    if (ret) {\n                        if (is_function(ret.then || ret.done)) {\n                            return (ret.then || ret.done).call(ret, function(ret) {\n                                echo(ret, true);\n                            });\n                        } else {\n                            echo(ret, true);\n                        }\n                    } else {\n                        echo(event.image || event.text, true);\n                    }\n                } else if (object instanceof Blob) {\n                    echo_image(data_uri(object));\n                } else if (typeof object === 'string') {\n                    if (object.match(/^(data:|blob:)/)) {\n                        echo_image(object);\n                    } else {\n                        self.insert(object);\n                    }\n                }\n            }\n            if (e.clipboardData) {\n                if (self.enabled()) {\n                    var items = e.clipboardData.items;\n                    if (items) {\n                        for (var i = 0; i < items.length; i++) {\n                            if (is_type(items[i], 'image') && settings.pasteImage) {\n                                var blob = items[i].getAsFile();\n                                echo(blob);\n                            } else if (is_type(items[i], 'text/plain')) {\n                                items[i].getAsString(echo);\n                            }\n                        }\n                    } else if (e.clipboardData.getData) {\n                        var text = e.clipboardData.getData('text/plain');\n                        echo(text);\n                    }\n                    return false;\n                }\n            }\n        }\n        $(document).on('paste.terminal_' + self.id(), paste_event);\n        var new_keymap = $.extend(\n            {},\n            keymap,\n            $.omap(settings.keymap || {}, function(key, fn) {\n                if (!keymap[key]) {\n                    return fn.bind(self);\n                }\n                return function(e, original) {\n                    // new keymap function will get default as 2nd argument\n                    return fn.call(self, e, function() {\n                        return keymap[key](e, original);\n                    });\n                };\n            })\n        );\n        make_interpreter(init_interpreter, settings.login, function(interpreter) {\n            if (settings.completion && typeof settings.completion !== 'boolean' ||\n                !settings.completion) {\n                // overwrite interpreter completion by global setting #224\n                // we use string to indicate that it need to be taken from settings\n                // so we are able to change it using option API method\n                interpreter.completion = 'settings';\n            }\n            var prompt = settings.prompt;\n            if (is_function(prompt)) {\n                prompt = context_callback_proxy(prompt);\n            }\n            interpreters = new Stack($.extend({}, settings.extra, {\n                name: settings.name,\n                prompt: prompt,\n                keypress: settings.keypress,\n                keydown: settings.keydown,\n                resize: settings.onResize,\n                greetings: settings.greetings,\n                mousewheel: settings.mousewheel,\n                history: settings.history,\n                keymap: new_keymap\n            }, interpreter));\n            // CREATE COMMAND LINE\n            command_line = $('<div/>').appendTo(wrapper).cmd({\n                tabindex: settings.tabindex,\n                mobileDelete: settings.mobileDelete,\n                mobileIngoreAutoSpace: settings.mobileIngoreAutoSpace,\n                prompt: global_login_fn ? false : prompt,\n                history: settings.memory ? 'memory' : settings.history,\n                historyFilter: settings.historyFilter,\n                historySize: settings.historySize,\n                caseSensitiveSearch: settings.caseSensitiveSearch,\n                onPaste: settings.onPaste,\n                width: '100%',\n                enabled: false,\n                char_width: char_size.width,\n                keydown: key_down,\n                keymap: new_keymap,\n                clickTimeout: settings.clickTimeout,\n                holdTimeout: settings.holdTimeout,\n                holdRepeatTimeout: settings.holdRepeatTimeout,\n                repeatTimeoutKeys: settings.repeatTimeoutKeys,\n                allowedAttributes: settings.allowedAttributes,\n                keypress: key_press,\n                tabs: settings.tabs,\n                onPositionChange: function() {\n                    var args = [].slice.call(arguments);\n                    make_cursor_visible();\n                    fire_event('onPositionChange', args);\n                },\n                onCommandChange: function(command) {\n                    // resize is not triggered when insert called just after init\n                    //  and scrollbar appear\n                    if (old_width !== fill.width()) {\n                        // resizer handler will update old_width\n                        self.resizer();\n                    }\n                    fire_event('onCommandChange', [command]);\n                    make_cursor_visible();\n                },\n                commands: commands\n            });\n            function disable(e) {\n                e = e.originalEvent;\n                if (e) {\n                    // e.terget is body when click outside of context menu to close it\n                    // even if you click on terminal\n                    var node = document.elementFromPoint(e.clientX, e.clientY);\n                    if (!$(node).closest('.terminal').length && self.enabled()) {\n                        // we only need to disable when click outside of terminal\n                        // click on other terminal is handled by focus event\n                        self.disable();\n                    }\n                }\n            }\n            self.oneTime(100, function() {\n                $(document).bind('click.terminal_' + self.id(), disable).\n                    bind('contextmenu.terminal_' + self.id(), disable);\n            });\n            var $win = $(window);\n            // cordova application, if keyboard was open and we resume, it will be\n            // closed so we need to disable terminal so you can enable it with tap\n            document.addEventListener(\"resume\", function() {\n                self.disable();\n            });\n            // istanbul ignore next\n            if (is_mobile) {\n                self.click(function() {\n                    if (!frozen) {\n                        if (!self.enabled()) {\n                            self.focus();\n                            command_line.enable();\n                        } else {\n                            self.disable();\n                        }\n                    }\n                });\n            } else {\n                // work weird on mobile\n                $win.on('focus.terminal_' + self.id(), focus_terminal).\n                    on('blur.terminal_' + self.id(), blur_terminal);\n                // detect mouse drag\n                (function() {\n                    var count = 0;\n                    var $target;\n                    var name = 'click_' + self.id();\n                    var textarea = self.find('.cmd textarea');\n                    function click() {\n                        if ($target.is('.terminal') ||\n                            $target.is('.terminal-wrapper')) {\n                            var len = self.get_command().length;\n                            self.set_position(len);\n                        } else if ($target.closest('.cmd-prompt').length) {\n                            self.set_position(0);\n                        }\n                        if (!textarea.is(':focus')) {\n                            textarea.focus();\n                        }\n                        reset();\n                    }\n                    function reset() {\n                        count = 0;\n                        $target = null;\n                    }\n                    var ignore_elements = '.terminal-output textarea,' +\n                        '.terminal-output input';\n                    self.mousedown(function(e) {\n                        if (!scrollbar_event(e, fill)) {\n                            $target = $(e.target);\n                        }\n                    }).mouseup(function() {\n                        if ($target && $target.closest(ignore_elements).length) {\n                            if (enabled) {\n                                self.disable();\n                            }\n                        } else if (get_selected_html() === '' && $target) {\n                            if (++count === 1) {\n                                if (!frozen) {\n                                    if (!enabled) {\n                                        self.focus();\n                                    } else {\n                                        var timeout = settings.clickTimeout;\n                                        self.oneTime(timeout, name, click);\n                                        return;\n                                    }\n                                }\n                            } else {\n                                self.stopTime(name);\n                            }\n                        }\n                        reset();\n                    }).dblclick(function() {\n                        reset();\n                        self.stopTime(name);\n                    });\n                })();\n                (function() {\n                    var clip = self.find('.cmd textarea');\n                    function is_context_event(e) {\n                        return e.type === 'mousedown' && e.buttons === 2 ||\n                            e.type === 'contextmenu';\n                    }\n                    self.on('contextmenu.terminal mousedown.terminal', function(e) {\n                        if (get_selected_html() === '' && is_context_event(e)) {\n                            if (!$(e.target).is('img,value,audio,object,canvas,a')) {\n                                if (!self.enabled()) {\n                                    self.enable();\n                                }\n                                var offset = command_line.offset();\n                                clip.css({\n                                    left: e.pageX - offset.left - 20,\n                                    top: e.pageY - offset.top - 20,\n                                    width: '5em',\n                                    height: '4em'\n                                });\n                                if (!clip.is(':focus')) {\n                                    clip.focus();\n                                }\n                                self.stopTime('textarea');\n                                self.oneTime(100, 'textarea', function() {\n                                    var props = {\n                                        left: '',\n                                        top: '',\n                                        width: '',\n                                        height: ''\n                                    };\n                                    if (!is_css_variables_supported) {\n                                        var in_line = self.find('.cmd .cmd-cursor-line')\n                                            .prevUntil('.cmd-prompt').length;\n                                        props.top = in_line * 14 + 'px';\n                                    }\n                                    clip.css(props);\n                                });\n                                self.stopTime('selection');\n                                self.everyTime(20, 'selection', function() {\n                                    if (clip[0].selection !== clip[0].value) {\n                                        if (get_textarea_selection(clip[0])) {\n                                            clear_textarea_selection(clip[0]);\n                                            select(\n                                                self.find('.terminal-output')[0],\n                                                self.find('.cmd div:last-of-type')[0]\n                                            );\n                                            self.stopTime('selection');\n                                        }\n                                    }\n                                });\n                            }\n                        }\n                    });\n                })();\n            }\n            self.on('click', 'a', function(e) {\n                var $this = $(this);\n                if ($this.closest('.terminal-exception').length) {\n                    var href = $this.attr('href');\n                    if (href.match(/:[0-9]+$/)) { // display line if specified\n                        e.preventDefault();\n                        print_line(href, self.cols());\n                    }\n                }\n                // refocus because links have tabindex in case where user want\n                // tab change urls, we can ignore this function on click\n                if (enabled) {\n                    self.find('.cmd textarea').focus();\n                }\n            });\n            function calculate_char_size() {\n                var width = char_size.width;\n                char_size = get_char_size(self);\n                if (width !== char_size.width) {\n                    command_line.option('char_width', char_size.width).refresh();\n                }\n            }\n            resize();\n            function resize() {\n                if (self.is(':visible')) {\n                    var width = fill.width();\n                    var height = fill.height();\n                    // prevent too many calculations in IE\n                    if (old_height !== height || old_width !== width) {\n                        self.resize();\n                    }\n                    old_height = height;\n                    old_width = width;\n                }\n            }\n            function create_resizers() {\n                var options = {\n                    prefix: 'terminal-'\n                };\n                self.resizer('unbind').resizer(resize, options);\n                font_resizer.resizer('unbind').resizer(function() {\n                    calculate_char_size();\n                    self.resize();\n                }, options);\n            }\n            if (self.is(':visible')) {\n                create_resizers();\n            }\n            function observe_visibility() {\n                if (visibility_observer) {\n                    if (visibility_observer.unobserve) {\n                        visibility_observer.unobserve(self[0]);\n                    } else {\n                        clearInterval(visibility_observer);\n                    }\n                }\n                var was_enabled = self.enabled();\n                var visible = self.is(':visible');\n                if (was_enabled && !visible) {\n                    self.disable();\n                }\n                if (visible) {\n                    create_resizers();\n                } else {\n                    // hide terminal content until it's resized (and num chars calculated)\n                    wrapper.css('visibility', 'hidden');\n                }\n                function visibility_checker() {\n                    if (self.is(':visible') && !visible) {\n                        visible = true;\n                        create_resizers();\n                        calculate_char_size();\n                        resize();\n                        if (was_enabled) {\n                            self.enable();\n                        }\n                        wrapper.css('visibility', '');\n                    } else if (visible && !self.is(':visible')) {\n                        visible = false;\n                        was_enabled = $.terminal.active() === self && self.enabled();\n                        self.disable();\n                        wrapper.css('visibility', 'hidden');\n                    }\n                }\n                if (window.IntersectionObserver && self.css('position') !== 'fixed') {\n                    visibility_observer = new IntersectionObserver(visibility_checker, {\n                        root: null\n                    });\n                    visibility_observer.observe(self[0]);\n                } else {\n                    visibility_observer = setInterval(visibility_checker, 100);\n                }\n            }\n            var in_dom = !!self.closest('body').length;\n            var MutationObsrv = window.MutationObserver || window.WebKitMutationObserver;\n            if (MutationObsrv) {\n                mutation_observer = new MutationObsrv(function() {\n                    if (self.closest('body').length) {\n                        if (!in_dom) {\n                            self.scroll_to_bottom();\n                            if (window.IntersectionObserver) {\n                                observe_visibility();\n                            }\n                            resize();\n                        }\n                        in_dom = true;\n                    } else if (in_dom) {\n                        in_dom = false;\n                    }\n                });\n                mutation_observer.observe(document.body, {childList: true});\n            }\n            if (in_dom) {\n                // check if element is in the DOM if not running IntersectionObserver\n                // don't make sense\n                observe_visibility();\n            }\n            command_queue.resolve();\n            // touch devices need touch event to get virtual keyboard\n            if (enabled && self.is(':visible') && !is_mobile) {\n                self.focus(undefined, true);\n            } else {\n                self.disable();\n            }\n            // -------------------------------------------------------------\n            // Run Login\n            if (is_function(global_login_fn)) {\n                self.login(global_login_fn, true, initialize);\n            } else {\n                initialize();\n            }\n            // -------------------------------------------------------------\n            // :: helper\n            function exec_spec(spec) {\n                var terminal = terminals.get()[spec[0]];\n                // execute if belong to this terminal\n                if (terminal && terminal_id === terminal.id()) {\n                    if (!spec[2]) {\n                        defer.resolve();\n                        return defer.promise();\n                    } else if (paused) {\n                        var defer = $.Deferred();\n                        resume_callbacks.push(function() {\n                            return terminal.exec(spec[2]).done(function() {\n                                terminal.save_state(spec[2], true, spec[1]);\n                                defer.resolve();\n                            });\n                        });\n                        return defer.promise();\n                    } else {\n                        return terminal.exec(spec[2]).done(function() {\n                            terminal.save_state(spec[2], true, spec[1]);\n                        });\n                    }\n                }\n            }\n            // exec from hash called in each terminal instance\n            if (settings.execHash) {\n                if (location.hash) {\n                    // wait until login is initialized\n                    setTimeout(function() {\n                        try {\n                            var hash = location.hash.replace(/^#/, '');\n                            // yes no var - local inside terminal\n                            hash_commands = JSON.parse(decodeURIComponent(hash));\n                            var i = 0;\n                            (function recur() {\n                                var spec = hash_commands[i++];\n                                if (spec) {\n                                    exec_spec(spec).done(recur);\n                                } else {\n                                    change_hash = true;\n                                }\n                            })();// */\n                        } catch (e) {\n                            // invalid json - ignore\n                        }\n                    });\n                } else {\n                    change_hash = true;\n                }\n            } else {\n                change_hash = true; // if enabled later\n            }\n            // change_hash = true; // exec can now change hash\n            // -------------------------------------------------------------\n            /* istanbul ignore next */\n            (function() {\n                var shift = false;\n                $(document).bind('keydown.terminal_' + self.id(), function(e) {\n                    if (e.shiftKey) {\n                        shift = true;\n                    }\n                }).bind('keyup.terminal_' + self.id(), function(e) {\n                    // in Google Chromium/Linux shiftKey is false\n                    if (e.shiftKey || e.which === 16) {\n                        shift = false;\n                    }\n                });\n                // this could work without calling scroll on wheel event but we\n                // need it for cases where you have mouse wheel work differently\n                // like with less command that scroll text\n                function mousewheel(event, delta) {\n                    if (!shift) {\n                        var interpreter = interpreters.top();\n                        var ret;\n                        if (is_function(interpreter.mousewheel)) {\n                            ret = interpreter.mousewheel(event, delta, self);\n                        } else if (is_function(settings.mousewheel)) {\n                            ret = settings.mousewheel(event, delta, self);\n                        }\n                        if (ret === true) {\n                            return;\n                        }\n                        if ((have_scrollbar() || ret === false) && !event.ctrlKey) {\n                            event.stopPropagation();\n                            event.preventDefault();\n                        }\n                        if (ret === false) {\n                            return false;\n                        }\n                        if (delta > 0) {\n                            self.scroll(-40);\n                        } else {\n                            self.scroll(40);\n                        }\n                    }\n                }\n                if ($.event.special.mousewheel) {\n                    // we keep mousewheel plugin just in case\n                    self.on('mousewheel', mousewheel);\n                } else {\n                    // detection take from:\n                    // https://developer.mozilla.org/en-US/docs/Web/Events/wheel\n                    var event;\n                    var div = document.createElement(\"div\");\n                    if (\"onwheel\" in div) {\n                        event = \"wheel\"; // Modern browsers support \"wheel\"\n                    } else if (document.onmousewheel !== undefined) {\n                        // Webkit and IE support at least \"mousewheel\"\n                        event = \"mousewheel\";\n                    } else {\n                        // let's assume that remaining browsers are older Firefox\n                        event = \"DOMMouseScroll\";\n                    }\n                    div = null;\n                    self.on(event, function(e) {\n                        var delta;\n                        if (event === 'mousewheel') {\n                            delta = - 1 / 40 * e.originalEvent.wheelDelta;\n                        } else {\n                            delta = e.originalEvent.deltaY || e.originalEvent.detail;\n                        }\n                        mousewheel(e, -delta);\n                    });\n                }\n            })();\n        }); // make_interpreter\n        return self;\n    }; // terminal plugin\n});\n"]}